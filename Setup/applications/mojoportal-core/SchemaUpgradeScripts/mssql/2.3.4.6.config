CREATE PROCEDURE [dbo].[mp_CommerceReport_GetSalesByYearByModule]

/*
Author:   			Joe Audette
Created: 			2010-06-20
Last Modified: 		2010-06-20
*/

@ModuleGuid uniqueidentifier

AS


SELECT TOP 13
YEAR(OrderDateUtc) As Y,
	SUM(SubTotal) As Sales
		
FROM
		[dbo].[mp_CommerceReport]
		
WHERE
		[ModuleGuid] = @ModuleGuid

GROUP BY YEAR(OrderDateUtc)
ORDER BY YEAR(OrderDateUtc) desc

GO

ALTER TABLE mp_AuthorizeNetLog ALTER COLUMN RawResponse NVARCHAR(MAX) null

ALTER TABLE mp_AuthorizeNetLog ALTER COLUMN Reason NVARCHAR(MAX) null

GO


ALTER PROCEDURE [dbo].[mp_AuthorizeNetLog_Insert]

/*
Author:   			Joe Audette
Created: 			2008-03-10
Last Modified: 		2010-06-30
*/

@RowGuid uniqueidentifier,
@CreatedUtc datetime,
@SiteGuid uniqueidentifier,
@UserGuid uniqueidentifier,
@StoreGuid uniqueidentifier,
@CartGuid uniqueidentifier,
@RawResponse nvarchar(max),
@ResponseCode nchar(1),
@ResponseReasonCode nvarchar(20),
@Reason nvarchar(max),
@AvsCode nvarchar(50),
@CcvCode nchar(1),
@CavCode nchar(1),
@TransactionId nvarchar(50),
@TransactionType nvarchar(50),
@Method nvarchar(20),
@AuthCode nvarchar(50),
@Amount decimal(15, 4),
@Tax decimal(15, 4),
@Duty decimal(15, 4),
@Freight decimal(15, 4)

	
AS

INSERT INTO 	[dbo].[mp_AuthorizeNetLog] 
(
				[RowGuid],
				[CreatedUtc],
				[SiteGuid],
				[UserGuid],
				[StoreGuid],
				[CartGuid],
				[RawResponse],
				[ResponseCode],
				[ResponseReasonCode],
				[Reason],
				[AvsCode],
				[CcvCode],
				[CavCode],
				[TransactionId],
				[TransactionType],
				[Method],
				[AuthCode],
				[Amount],
				[Tax],
				[Duty],
				[Freight]
) 

VALUES 
(
				@RowGuid,
				@CreatedUtc,
				@SiteGuid,
				@UserGuid,
				@StoreGuid,
				@CartGuid,
				@RawResponse,
				@ResponseCode,
				@ResponseReasonCode,
				@Reason,
				@AvsCode,
				@CcvCode,
				@CavCode,
				@TransactionId,
				@TransactionType,
				@Method,
				@AuthCode,
				@Amount,
				@Tax,
				@Duty,
				@Freight
				
)

GO

ALTER PROCEDURE [dbo].[mp_AuthorizeNetLog_Update]

/*
Author:   			Joe Audette
Created: 			2008-03-10
Last Modified: 		2010-06-30
*/
	
@RowGuid uniqueidentifier, 
@SiteGuid uniqueidentifier, 
@UserGuid uniqueidentifier, 
@StoreGuid uniqueidentifier, 
@CartGuid uniqueidentifier, 
@RawResponse nvarchar(max), 
@ResponseCode nchar(1), 
@ResponseReasonCode nvarchar(20), 
@Reason nvarchar(max), 
@AvsCode nvarchar(50), 
@CcvCode nchar(1), 
@CavCode nchar(1), 
@TransactionId nvarchar(50), 
@TransactionType nvarchar(50), 
@Method nvarchar(20), 
@AuthCode nvarchar(50), 
@Amount decimal(15, 4), 
@Tax decimal(15, 4), 
@Duty decimal(15, 4), 
@Freight decimal(15, 4) 


AS

UPDATE 		[dbo].[mp_AuthorizeNetLog] 

SET
			[SiteGuid] = @SiteGuid,
			[UserGuid] = @UserGuid,
			[StoreGuid] = @StoreGuid,
			[CartGuid] = @CartGuid,
			[RawResponse] = @RawResponse,
			[ResponseCode] = @ResponseCode,
			[ResponseReasonCode] = @ResponseReasonCode,
			[Reason] = @Reason,
			[AvsCode] = @AvsCode,
			[CcvCode] = @CcvCode,
			[CavCode] = @CavCode,
			[TransactionId] = @TransactionId,
			[TransactionType] = @TransactionType,
			[Method] = @Method,
			[AuthCode] = @AuthCode,
			[Amount] = @Amount,
			[Tax] = @Tax,
			[Duty] = @Duty,
			[Freight] = @Freight
			
WHERE
			[RowGuid] = @RowGuid

GO

ALTER TABLE mp_ContentHistory ALTER COLUMN ContentText NVARCHAR(MAX) null
ALTER TABLE mp_ContentHistory ALTER COLUMN CustomData NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_ContentHistory_Insert]

/*
Author:   			Joe Audette
Created: 			2009-03-31
Last Modified: 		2010-06-30
*/

@Guid uniqueidentifier,
@SiteGuid uniqueidentifier,
@UserGuid uniqueidentifier,
@ContentGuid uniqueidentifier,
@Title nvarchar(255),
@ContentText nvarchar(max),
@CustomData nvarchar(max),
@CreatedUtc datetime,
@HistoryUtc datetime

	
AS

INSERT INTO 	[dbo].[mp_ContentHistory] 
(
				[Guid],
				[SiteGuid],
				[UserGuid],
				[ContentGuid],
				[Title],
				[ContentText],
				[CustomData],
				[CreatedUtc],
				[HistoryUtc]
) 

VALUES 
(
				@Guid,
				@SiteGuid,
				@UserGuid,
				@ContentGuid,
				@Title,
				@ContentText,
				@CustomData,
				@CreatedUtc,
				@HistoryUtc
				
)

GO


ALTER TABLE mp_ContentMeta ALTER COLUMN MetaContent NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_ContentMeta_Insert]

/*
Author:   			Joe Audette
Created: 			2009-12-02
Last Modified: 		2010-06-30
*/

@Guid uniqueidentifier,
@SiteGuid uniqueidentifier,
@ModuleGuid uniqueidentifier,
@ContentGuid uniqueidentifier,
@Name nvarchar(255),
@Scheme nvarchar(255),
@LangCode nvarchar(10),
@Dir nvarchar(3),
@MetaContent nvarchar(max),
@SortRank int,
@CreatedUtc datetime,
@CreatedBy uniqueidentifier,
@LastModUtc datetime,
@LastModBy uniqueidentifier

	
AS

INSERT INTO 	[dbo].[mp_ContentMeta] 
(
				[Guid],
				[SiteGuid],
				[ModuleGuid],
				[ContentGuid],
				[Name],
				[Scheme],
				[LangCode],
				[Dir],
				[MetaContent],
				[SortRank],
				[CreatedUtc],
				[CreatedBy],
				[LastModUtc],
				[LastModBy]
) 

VALUES 
(
				@Guid,
				@SiteGuid,
				@ModuleGuid,
				@ContentGuid,
				@Name,
				@Scheme,
				@LangCode,
				@Dir,
				@MetaContent,
				@SortRank,
				@CreatedUtc,
				@CreatedBy,
				@LastModUtc,
				@LastModBy
				
)

GO

ALTER PROCEDURE [dbo].[mp_ContentMeta_Update]

/*
Author:   			Joe Audette
Created: 			2009-12-02
Last Modified: 		2010-06-30
*/
	
@Guid uniqueidentifier, 
@Name nvarchar(255), 
@Scheme nvarchar(255), 
@LangCode nvarchar(10), 
@Dir nvarchar(3), 
@MetaContent nvarchar(max), 
@SortRank int, 
@LastModUtc datetime, 
@LastModBy uniqueidentifier 


AS

UPDATE 		[dbo].[mp_ContentMeta] 

SET
			[Name] = @Name,
			[Scheme] = @Scheme,
			[LangCode] = @LangCode,
			[Dir] = @Dir,
			[MetaContent] = @MetaContent,
			[SortRank] = @SortRank,
			[LastModUtc] = @LastModUtc,
			[LastModBy] = @LastModBy
			
WHERE
			[Guid] = @Guid

GO

ALTER TABLE mp_ContentRating ALTER COLUMN [Comments] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_ContentRating_Insert]

/*
Author:   			Joe Audette
Created: 			2008-10-06
Last Modified: 		2010-06-30
*/

@RowGuid uniqueidentifier,
@SiteGuid uniqueidentifier,
@ContentGuid uniqueidentifier,
@UserGuid uniqueidentifier,
@EmailAddress nvarchar(100),
@Rating int,
@Comments nvarchar(max),
@IpAddress nvarchar(50),
@CreatedUtc datetime,
@LastModUtc datetime

	
AS

INSERT INTO 	[dbo].[mp_ContentRating] 
(
				[RowGuid],
				[SiteGuid],
				[ContentGuid],
				[UserGuid],
				[EmailAddress],
				[Rating],
				[Comments],
				[IpAddress],
				[CreatedUtc],
				[LastModUtc]
) 

VALUES 
(
				@RowGuid,
				@SiteGuid,
				@ContentGuid,
				@UserGuid,
				@EmailAddress,
				@Rating,
				@Comments,
				@IpAddress,
				@CreatedUtc,
				@LastModUtc
				
)

GO

ALTER PROCEDURE [dbo].[mp_ContentRating_Update]

/*
Author:   			Joe Audette
Created: 			2008-10-06
Last Modified: 		2010-06-30
*/
	
@RowGuid uniqueidentifier, 
@EmailAddress nvarchar(100), 
@Rating int, 
@Comments nvarchar(max), 
@IpAddress nvarchar(50), 
@LastModUtc datetime 


AS

UPDATE 		[dbo].[mp_ContentRating] 

SET
			
			[EmailAddress] = @EmailAddress,
			[Rating] = @Rating,
			[Comments] = @Comments,
			[IpAddress] = @IpAddress,
			[LastModUtc] = @LastModUtc
			
WHERE
			[RowGuid] = @RowGuid

GO


ALTER TABLE mp_ContentTemplate ALTER COLUMN [Description] NVARCHAR(MAX) null
ALTER TABLE mp_ContentTemplate ALTER COLUMN [Body] NVARCHAR(MAX) null
ALTER TABLE mp_ContentTemplate ALTER COLUMN [AllowedRoles] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_ContentTemplate_Insert]

/*
Author:   			Joe Audette
Created: 			2009-06-01
Last Modified: 		2010-06-30
*/

@Guid uniqueidentifier,
@SiteGuid uniqueidentifier,
@Title nvarchar(255),
@ImageFileName nvarchar(255),
@Description nvarchar(max),
@Body nvarchar(max),
@AllowedRoles nvarchar(max),
@CreatedByUser uniqueidentifier,
@LastModUser uniqueidentifier,
@CreatedUtc datetime,
@LastModUtc datetime

	
AS

INSERT INTO 	[dbo].[mp_ContentTemplate] 
(
				[Guid],
				[SiteGuid],
				[Title],
				[ImageFileName],
				[Description],
				[Body],
				[AllowedRoles],
				[CreatedByUser],
				[LastModUser],
				[CreatedUtc],
				[LastModUtc]
) 

VALUES 
(
				@Guid,
				@SiteGuid,
				@Title,
				@ImageFileName,
				@Description,
				@Body,
				@AllowedRoles,
				@CreatedByUser,
				@LastModUser,
				@CreatedUtc,
				@LastModUtc
				
)

GO


ALTER PROCEDURE [dbo].[mp_ContentTemplate_Update]

/*
Author:   			Joe Audette
Created: 			2009-06-01
Last Modified: 		2010-06-30
*/
	
@Guid uniqueidentifier, 
@SiteGuid uniqueidentifier, 
@Title nvarchar(255), 
@ImageFileName nvarchar(255), 
@Description nvarchar(max), 
@Body nvarchar(max), 
@AllowedRoles nvarchar(max), 
@LastModUser uniqueidentifier, 
@LastModUtc datetime 


AS

UPDATE 		[dbo].[mp_ContentTemplate] 

SET
			[SiteGuid] = @SiteGuid,
			[Title] = @Title,
			[ImageFileName] = @ImageFileName,
			[Description] = @Description,
			[Body] = @Body,
			[AllowedRoles] = @AllowedRoles,
			[LastModUser] = @LastModUser,
			[LastModUtc] = @LastModUtc
			
WHERE
			[Guid] = @Guid

GO

ALTER TABLE mp_ContentWorkflow ALTER COLUMN [ContentText] NVARCHAR(MAX) null
ALTER TABLE mp_ContentWorkflow ALTER COLUMN [CustomData] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_ContentWorkflow_Insert]

/*
Author:   			Kevin Needham
Created: 			2009-06-15
Last Modified: 		2010-06-30
*/

@Guid uniqueidentifier,
@SiteGuid uniqueidentifier,
@ModuleGuid uniqueidentifier,
@CreatedDateUtc datetime,
@UserGuid uniqueidentifier,
@Status nvarchar(20),
@ContentText nvarchar(max),
@CustomData nvarchar(max),
@CustomReferenceNumber int,
@CustomReferenceGuid  uniqueidentifier

	
AS

	INSERT INTO 	[dbo].[mp_ContentWorkflow] 
	(
					[Guid],
					[SiteGuid],					
					[ModuleGuid],
					[CreatedDateUtc],
					[UserGuid],
					[LastModUserGuid],
					[LastModUtc],
					[Status],
					[ContentText],
					[CustomData],
					[CustomReferenceNumber],
					[CustomReferenceGuid]
					
	) 

	VALUES 
	(
					@Guid,
					@SiteGuid,
					@ModuleGuid,
					@CreatedDateUtc,
					@UserGuid,
					@UserGuid,
					@CreatedDateUtc,
					@Status,
					@ContentText,
					@CustomData,
					@CustomReferenceNumber,
					@CustomReferenceGuid
					
	)

	
	


GO

ALTER PROCEDURE [dbo].[mp_ContentWorkflow_Update]

/*
Author:   			Kevin Needham
Created: 			2009-06-19
Last Modified: 		2010-06-30
*/

@Guid uniqueidentifier,
@LastModUserGuid uniqueidentifier,
@LastModUtc datetime,
@Status nvarchar(20),
@ContentText nvarchar(max),
@CustomData nvarchar(max),
@CustomReferenceNumber int,
@CustomReferenceGuid  uniqueidentifier

	
AS

	UPDATE	[dbo].[mp_ContentWorkflow] 
	SET		
			[LastModUserGuid] = @LastModUserGuid,
			[LastModUtc] = @LastModUtc,
			[Status] = @Status,
			[ContentText] = @ContentText,
			[CustomData] = @CustomData,			
			[CustomReferenceNumber] = @CustomReferenceNumber,
			[CustomReferenceGuid] = @CustomReferenceGuid
			
	WHERE 	[Guid] = @Guid




GO

ALTER TABLE mp_ContentWorkflowAuditHistory ALTER COLUMN [Notes] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_ContentWorkflowAuditHistory_Insert]

/*
Author:   			Joe Audette
Created: 			2009-07-18
Last Modified: 		2010-06-30
*/

@Guid uniqueidentifier,
@ContentWorkflowGuid uniqueidentifier,
@ModuleGuid uniqueidentifier,
@UserGuid uniqueidentifier,
@CreatedDateUtc datetime,
@Status nvarchar(20),
@Notes nvarchar(max),
@Active bit


AS


INSERT INTO [dbo].mp_ContentWorkflowAuditHistory 
(
		[Guid],
		[ContentWorkflowGuid],
		[ModuleGuid],
		[UserGuid],
		[CreatedDateUtc],
		[NewStatus],
		[Notes],
		Active
)
VALUES
(
	@Guid,
	@ContentWorkflowGuid,
	@ModuleGuid,
	@UserGuid,
	@CreatedDateUtc,
	@Status,
	@Notes,
	@Active
)
		


GO

ALTER TABLE mp_EmailSendLog ALTER COLUMN [TextBody] NVARCHAR(MAX) null
ALTER TABLE mp_EmailSendLog ALTER COLUMN [HtmlBody] NVARCHAR(MAX) null

GO

ALTER TABLE mp_EmailSendQueue ALTER COLUMN [TextBody] NVARCHAR(MAX) null
ALTER TABLE mp_EmailSendQueue ALTER COLUMN [HtmlBody] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_EmailSendQueue_Insert]

/*
Author:   			Joe Audette
Created: 			2009-03-01
Last Modified: 		2010-06-30
*/

@Guid uniqueidentifier,
@SiteGuid uniqueidentifier,
@ModuleGuid uniqueidentifier,
@UserGuid uniqueidentifier,
@SpecialGuid1 uniqueidentifier,
@SpecialGuid2 uniqueidentifier,
@FromAddress nvarchar(100),
@ReplyTo nvarchar(100),
@ToAddress nvarchar(255),
@CcAddress nvarchar(255),
@BccAddress nvarchar(255),
@Subject nvarchar(255),
@TextBody nvarchar(max),
@HtmlBody nvarchar(max),
@Type nvarchar(50),
@DateToSend datetime,
@CreatedUtc datetime

	
AS

INSERT INTO 	[dbo].[mp_EmailSendQueue] 
(
				[Guid],
				[SiteGuid],
				[ModuleGuid],
				[UserGuid],
				[SpecialGuid1],
				[SpecialGuid2],
				[FromAddress],
				[ReplyTo],
				[ToAddress],
				[CcAddress],
				[BccAddress],
				[Subject],
				[TextBody],
				[HtmlBody],
				[Type],
				[DateToSend],
				[CreatedUtc]
) 

VALUES 
(
				@Guid,
				@SiteGuid,
				@ModuleGuid,
				@UserGuid,
				@SpecialGuid1,
				@SpecialGuid2,
				@FromAddress,
				@ReplyTo,
				@ToAddress,
				@CcAddress,
				@BccAddress,
				@Subject,
				@TextBody,
				@HtmlBody,
				@Type,
				@DateToSend,
				@CreatedUtc
				
)

GO

ALTER TABLE mp_EmailTemplate ALTER COLUMN [TextBody] NVARCHAR(MAX) null
ALTER TABLE mp_EmailTemplate ALTER COLUMN [HtmlBody] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_EmailTemplate_Insert]

/*
Author:   			Joe Audette
Created: 			2009-02-22
Last Modified: 		2010-06-30
*/

@Guid uniqueidentifier,
@SiteGuid uniqueidentifier,
@FeatureGuid uniqueidentifier,
@ModuleGuid uniqueidentifier,
@SpecialGuid1 uniqueidentifier,
@SpecialGuid2 uniqueidentifier,
@Name nvarchar(255),
@Subject nvarchar(255),
@TextBody nvarchar(max),
@HtmlBody nvarchar(max),
@HasHtml bit,
@IsEditable bit,
@CreatedUtc datetime,
@LastModUtc datetime,
@LastModBy uniqueidentifier

	
AS

INSERT INTO 	[dbo].[mp_EmailTemplate] 
(
				[Guid],
				[SiteGuid],
				[FeatureGuid],
				[ModuleGuid],
				[SpecialGuid1],
				[SpecialGuid2],
				[Name],
				[Subject],
				[TextBody],
				[HtmlBody],
				[HasHtml],
				[IsEditable],
				[CreatedUtc],
				[LastModUtc],
				[LastModBy]
) 

VALUES 
(
				@Guid,
				@SiteGuid,
				@FeatureGuid,
				@ModuleGuid,
				@SpecialGuid1,
				@SpecialGuid2,
				@Name,
				@Subject,
				@TextBody,
				@HtmlBody,
				@HasHtml,
				@IsEditable,
				@CreatedUtc,
				@LastModUtc,
				@LastModBy
				
)

GO

ALTER PROCEDURE [dbo].[mp_EmailTemplate_Update]

/*
Author:   			Joe Audette
Created: 			2009-02-22
Last Modified: 		2010-06-30
*/
	
@Guid uniqueidentifier, 
@Name nvarchar(255), 
@Subject nvarchar(255), 
@TextBody nvarchar(max), 
@HtmlBody nvarchar(max), 
@HasHtml bit, 
@IsEditable bit,  
@LastModUtc datetime, 
@LastModBy uniqueidentifier 


AS

UPDATE 		[dbo].[mp_EmailTemplate] 

SET
			[Name] = @Name,
			[Subject] = @Subject,
			[TextBody] = @TextBody,
			[HtmlBody] = @HtmlBody,
			[HasHtml] = @HasHtml,
			[IsEditable] = @IsEditable,
			[LastModUtc] = @LastModUtc,
			[LastModBy] = @LastModBy
			
WHERE
			[Guid] = @Guid

GO

ALTER TABLE mp_GoogleCheckoutLog ALTER COLUMN [RawResponse] NVARCHAR(MAX) null
ALTER TABLE mp_GoogleCheckoutLog ALTER COLUMN [CartXml] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_GoogleCheckoutLog_Insert]

/*
Author:   			Joe Audette
Created: 			2008-03-09
Last Modified: 		2010-07-01
*/

@RowGuid uniqueidentifier,
@CreatedUtc datetime,
@SiteGuid uniqueidentifier,
@UserGuid uniqueidentifier,
@StoreGuid uniqueidentifier,
@CartGuid uniqueidentifier,
@NotificationType nvarchar(255),
@RawResponse nvarchar(max),
@SerialNumber nvarchar(50),
@GTimestamp datetime,
@OrderNumber nvarchar(50),
@BuyerId nvarchar(50),
@FullfillState nvarchar(50),
@FinanceState nvarchar(50),
@EmailListOptIn bit,
@AvsResponse nvarchar(5),
@CvnResponse nvarchar(5),
@AuthExpDate datetime,
@AuthAmt decimal(15, 4),
@DiscountTotal decimal(15, 4),
@ShippingTotal decimal(15, 4),
@TaxTotal decimal(15, 4),
@OrderTotal decimal(15, 4),
@LatestChgAmt decimal(15, 4),
@TotalChgAmt decimal(15, 4),
@LatestRefundAmt decimal(15, 4),
@TotalRefundAmt decimal(15, 4),
@LatestChargeback decimal(15, 4),
@TotalChargeback decimal(15, 4),
@CartXml nvarchar(max),
@ProviderName nvarchar(255)

	
AS

INSERT INTO 	[dbo].[mp_GoogleCheckoutLog] 
(
				[RowGuid],
				[CreatedUtc],
				[SiteGuid],
				[UserGuid],
				[StoreGuid],
				[CartGuid],
				[NotificationType],
				[RawResponse],
				[SerialNumber],
				[GTimestamp],
				[OrderNumber],
				[BuyerId],
				[FullfillState],
				[FinanceState],
				[EmailListOptIn],
				[AvsResponse],
				[CvnResponse],
				[AuthExpDate],
				[AuthAmt],
				[DiscountTotal],
				[ShippingTotal],
				[TaxTotal],
				[OrderTotal],
				[LatestChgAmt],
				[TotalChgAmt],
				[LatestRefundAmt],
				[TotalRefundAmt],
				[LatestChargeback],
				[TotalChargeback],
				[CartXml],
				ProviderName
) 

VALUES 
(
				@RowGuid,
				@CreatedUtc,
				@SiteGuid,
				@UserGuid,
				@StoreGuid,
				@CartGuid,
				@NotificationType,
				@RawResponse,
				@SerialNumber,
				@GTimestamp,
				@OrderNumber,
				@BuyerId,
				@FullfillState,
				@FinanceState,
				@EmailListOptIn,
				@AvsResponse,
				@CvnResponse,
				@AuthExpDate,
				@AuthAmt,
				@DiscountTotal,
				@ShippingTotal,
				@TaxTotal,
				@OrderTotal,
				@LatestChgAmt,
				@TotalChgAmt,
				@LatestRefundAmt,
				@TotalRefundAmt,
				@LatestChargeback,
				@TotalChargeback,
				@CartXml,
				@ProviderName
				
)

GO

ALTER PROCEDURE [dbo].[mp_GoogleCheckoutLog_Update]

/*
Author:   			Joe Audette
Created: 			2008-03-09
Last Modified: 		2010-07-01
*/
	
@RowGuid uniqueidentifier, 
@CreatedUtc datetime, 
@SiteGuid uniqueidentifier, 
@UserGuid uniqueidentifier, 
@StoreGuid uniqueidentifier, 
@CartGuid uniqueidentifier, 
@NotificationType nvarchar(255), 
@RawResponse nvarchar(max), 
@SerialNumber nvarchar(50), 
@GTimestamp datetime, 
@OrderNumber nvarchar(50), 
@BuyerId nvarchar(50), 
@FullfillState nvarchar(50), 
@FinanceState nvarchar(50), 
@EmailListOptIn bit, 
@AvsResponse nvarchar(5), 
@CvnResponse nvarchar(5), 
@AuthExpDate datetime, 
@AuthAmt decimal(15, 4), 
@DiscountTotal decimal(15, 4), 
@ShippingTotal decimal(15, 4), 
@TaxTotal decimal(15, 4), 
@OrderTotal decimal(15, 4), 
@LatestChgAmt decimal(15, 4), 
@TotalChgAmt decimal(15, 4), 
@LatestRefundAmt decimal(15, 4), 
@TotalRefundAmt decimal(15, 4), 
@LatestChargeback decimal(15, 4), 
@TotalChargeback decimal(15, 4),
@CartXml nvarchar(max)


AS

UPDATE 		[dbo].[mp_GoogleCheckoutLog] 

SET
			[CreatedUtc] = @CreatedUtc,
			[SiteGuid] = @SiteGuid,
			[UserGuid] = @UserGuid,
			[StoreGuid] = @StoreGuid,
			[CartGuid] = @CartGuid,
			[NotificationType] = @NotificationType,
			[RawResponse] = @RawResponse,
			[SerialNumber] = @SerialNumber,
			[GTimestamp] = @GTimestamp,
			[OrderNumber] = @OrderNumber,
			[BuyerId] = @BuyerId,
			[FullfillState] = @FullfillState,
			[FinanceState] = @FinanceState,
			[EmailListOptIn] = @EmailListOptIn,
			[AvsResponse] = @AvsResponse,
			[CvnResponse] = @CvnResponse,
			[AuthExpDate] = @AuthExpDate,
			[AuthAmt] = @AuthAmt,
			[DiscountTotal] = @DiscountTotal,
			[ShippingTotal] = @ShippingTotal,
			[TaxTotal] = @TaxTotal,
			[OrderTotal] = @OrderTotal,
			[LatestChgAmt] = @LatestChgAmt,
			[TotalChgAmt] = @TotalChgAmt,
			[LatestRefundAmt] = @LatestRefundAmt,
			[TotalRefundAmt] = @TotalRefundAmt,
			[LatestChargeback] = @LatestChargeback,
			[TotalChargeback] = @TotalChargeback,
			[CartXml] = @CartXml
			
WHERE
			[RowGuid] = @RowGuid

GO

ALTER PROCEDURE [dbo].[mp_GoogleCheckoutLog_SelectPage]

-- Author:   			Joe Audette
-- Created: 			2008-03-09
-- Last Modified: 		2010-07-01

@StoreGuid		uniqueidentifier,
@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
RowGuid UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
RowGuid
)

SELECT
		[RowGuid]
		
FROM
		[dbo].[mp_GoogleCheckoutLog]
		
WHERE
		StoreGuid = @StoreGuid

ORDER BY
		CreatedUtc DESC

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1

SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_GoogleCheckoutLog] t1

JOIN			#PageIndex t2
ON			
		t1.[RowGuid] = t2.[RowGuid]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_GoogleCheckoutLog_SelectPageByCart]

-- Author:   			Joe Audette
-- Created: 			2008-03-09
-- Last Modified: 		2010-07-01

@CartGuid		uniqueidentifier,
@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
RowGuid UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
RowGuid
)

SELECT
		[RowGuid]
		
FROM
		[dbo].[mp_GoogleCheckoutLog]
		
WHERE
		CartGuid = @CartGuid

ORDER BY
		CreatedUtc DESC

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1

SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_GoogleCheckoutLog] t1

JOIN			#PageIndex t2
ON			
		t1.[RowGuid] = t2.[RowGuid]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_GoogleCheckoutLog_Update]

/*
Author:   			Joe Audette
Created: 			2008-03-09
Last Modified: 		2010-07-01
*/
	
@RowGuid uniqueidentifier, 
@CreatedUtc datetime, 
@SiteGuid uniqueidentifier, 
@UserGuid uniqueidentifier, 
@StoreGuid uniqueidentifier, 
@CartGuid uniqueidentifier, 
@NotificationType nvarchar(255), 
@RawResponse nvarchar(max), 
@SerialNumber nvarchar(50), 
@GTimestamp datetime, 
@OrderNumber nvarchar(50), 
@BuyerId nvarchar(50), 
@FullfillState nvarchar(50), 
@FinanceState nvarchar(50), 
@EmailListOptIn bit, 
@AvsResponse nvarchar(5), 
@CvnResponse nvarchar(5), 
@AuthExpDate datetime, 
@AuthAmt decimal(15, 4), 
@DiscountTotal decimal(15, 4), 
@ShippingTotal decimal(15, 4), 
@TaxTotal decimal(15, 4), 
@OrderTotal decimal(15, 4), 
@LatestChgAmt decimal(15, 4), 
@TotalChgAmt decimal(15, 4), 
@LatestRefundAmt decimal(15, 4), 
@TotalRefundAmt decimal(15, 4), 
@LatestChargeback decimal(15, 4), 
@TotalChargeback decimal(15, 4),
@CartXml nvarchar(max)


AS

UPDATE 		[dbo].[mp_GoogleCheckoutLog] 

SET
			[CreatedUtc] = @CreatedUtc,
			[SiteGuid] = @SiteGuid,
			[UserGuid] = @UserGuid,
			[StoreGuid] = @StoreGuid,
			[CartGuid] = @CartGuid,
			[NotificationType] = @NotificationType,
			[RawResponse] = @RawResponse,
			[SerialNumber] = @SerialNumber,
			[GTimestamp] = @GTimestamp,
			[OrderNumber] = @OrderNumber,
			[BuyerId] = @BuyerId,
			[FullfillState] = @FullfillState,
			[FinanceState] = @FinanceState,
			[EmailListOptIn] = @EmailListOptIn,
			[AvsResponse] = @AvsResponse,
			[CvnResponse] = @CvnResponse,
			[AuthExpDate] = @AuthExpDate,
			[AuthAmt] = @AuthAmt,
			[DiscountTotal] = @DiscountTotal,
			[ShippingTotal] = @ShippingTotal,
			[TaxTotal] = @TaxTotal,
			[OrderTotal] = @OrderTotal,
			[LatestChgAmt] = @LatestChgAmt,
			[TotalChgAmt] = @TotalChgAmt,
			[LatestRefundAmt] = @LatestRefundAmt,
			[TotalRefundAmt] = @TotalRefundAmt,
			[LatestChargeback] = @LatestChargeback,
			[TotalChargeback] = @TotalChargeback,
			[CartXml] = @CartXml
			
WHERE
			[RowGuid] = @RowGuid

GO

ALTER TABLE mp_HtmlContent ALTER COLUMN [Excerpt] NVARCHAR(MAX) null
ALTER TABLE mp_HtmlContent ALTER COLUMN [Body] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_HtmlContent_Insert]

/*
Author:   			Joe Audette
Created: 			2004-12-23
Last Modified: 		2010-07-01

*/

@ItemGuid	uniqueidentifier,
@ModuleGuid	uniqueidentifier,
@ModuleID int,
@Title nvarchar(255),
@Excerpt nvarchar(max),
@Body nvarchar(max),
@MoreLink nvarchar(255),
@SortOrder int,
@BeginDate datetime,
@EndDate datetime,
@CreatedDate datetime,
@UserID int,
@UserGuid	uniqueidentifier

	
AS

INSERT INTO 	[dbo].[mp_HtmlContent] 
(
				ItemGuid,
				ModuleGuid,
				[ModuleID],
				[Title],
				[Excerpt],
				[Body],
				[MoreLink],
				[SortOrder],
				[BeginDate],
				[EndDate],
				[CreatedDate],
				[UserID],
				[UserGuid],
				LastModUserGuid,
				LastModUtc
) 

VALUES 
(
				@ItemGuid,
				@ModuleGuid,
				@ModuleID,
				@Title,
				@Excerpt,
				@Body,
				@MoreLink,
				@SortOrder,
				@BeginDate,
				@EndDate,
				@CreatedDate,
				@UserID,
				@UserGuid,
				@UserGuid,
				@CreatedDate
				
)
SELECT @@IDENTITY

GO

ALTER PROCEDURE [dbo].[mp_HtmlContent_Update]

/*
Author:   			Joe Audette
Created: 			2004-12-23
Last Modified: 		2010-07-018


*/
	
@ItemID int, 
@ModuleID int, 
@Title nvarchar(255), 
@Excerpt nvarchar(max), 
@Body nvarchar(max), 
@MoreLink nvarchar(255), 
@SortOrder int, 
@BeginDate datetime, 
@EndDate datetime, 
@LastModUtc datetime, 
@LastModUserGuid	uniqueidentifier


AS

UPDATE 		[dbo].[mp_HtmlContent] 

SET
			[ModuleID] = @ModuleID,
			[Title] = @Title,
			[Excerpt] = @Excerpt,
			[Body] = @Body,
			[MoreLink] = @MoreLink,
			[SortOrder] = @SortOrder,
			[BeginDate] = @BeginDate,
			[EndDate] = @EndDate,
			[LastModUtc] = @LastModUtc,
			[LastModUserGuid] = @LastModUserGuid
			
WHERE
			[ItemID] = @ItemID

GO

ALTER TABLE mp_IndexingQueue ALTER COLUMN [SerializedItem] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_IndexingQueue_Insert]

/*
Author:   			Joe Audette
Created: 			2008-06-18
Last Modified: 		2010-07-01
*/

@IndexPath nvarchar(255),
@SerializedItem nvarchar(max),
@ItemKey nvarchar(255),
@RemoveOnly bit

	
AS

INSERT INTO 	[dbo].[mp_IndexingQueue] 
(
				[IndexPath],
				[SerializedItem],
				[ItemKey],
				[RemoveOnly]
) 

VALUES 
(
				@IndexPath,
				@SerializedItem,
				@ItemKey,
				@RemoveOnly
				
)
SELECT @@IDENTITY

GO

ALTER TABLE mp_Letter ALTER COLUMN [HtmlBody] NVARCHAR(MAX) null
ALTER TABLE mp_Letter ALTER COLUMN [TextBody] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_Letter_Insert]

/*
Author:   			Joe Audette
Created: 			2007-09-22
Last Modified: 		2010-07-01
*/

@LetterGuid uniqueidentifier,
@LetterInfoGuid uniqueidentifier,
@Subject nvarchar(255),
@HtmlBody nvarchar(max),
@TextBody nvarchar(max),
@CreatedBy uniqueidentifier,
@CreatedUTC datetime,
@LastModBy uniqueidentifier,
@LastModUTC datetime,
@IsApproved bit,
@ApprovedBy uniqueidentifier

	
AS

INSERT INTO 	[dbo].[mp_Letter] 
(
				[LetterGuid],
				[LetterInfoGuid],
				[Subject],
				[HtmlBody],
				[TextBody],
				[CreatedBy],
				[CreatedUTC],
				[LastModBy],
				[LastModUTC],
				[IsApproved],
				[ApprovedBy]
) 

VALUES 
(
				@LetterGuid,
				@LetterInfoGuid,
				@Subject,
				@HtmlBody,
				@TextBody,
				@CreatedBy,
				@CreatedUTC,
				@LastModBy,
				@LastModUTC,
				@IsApproved,
				@ApprovedBy
				
)

GO


ALTER PROCEDURE [dbo].[mp_Letter_SelectDraftsPage]

-- Author:   			Joe Audette
-- Created: 			2007-12-12
-- Last Modified: 		2010-07-01

@LetterInfoGuid uniqueidentifier,
@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
LetterGuid UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
LetterGuid
)

SELECT
		[LetterGuid]
		
FROM
		[dbo].[mp_Letter]
		
WHERE
		[LetterInfoGuid] = @LetterInfoGuid
		AND [SendClickedUTC] IS NULL

ORDER BY
	[CreatedUTC]

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1

SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_Letter] t1

JOIN			#PageIndex t2
ON			
		t1.[LetterGuid] = t2.[LetterGuid]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_Letter_SelectPage]

-- Author:   			Joe Audette
-- Created: 			2007-09-22
-- Last Modified: 		2010-07-01

@LetterInfoGuid uniqueidentifier,
@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
LetterGuid UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
LetterGuid
)

SELECT
		[LetterGuid]
		
FROM
		[dbo].[mp_Letter]
		
WHERE
		[LetterInfoGuid] = @LetterInfoGuid
		AND [SendClickedUTC] IS NOT NULL

ORDER BY
		[SendClickedUTC] DESC

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1

SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_Letter] t1

JOIN			#PageIndex t2
ON			
		t1.[LetterGuid] = t2.[LetterGuid]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_Letter_Update]

/*
Author:   			Joe Audette
Created: 			2007-09-22
Last Modified: 		2010-07-01
*/
	
@LetterGuid uniqueidentifier, 
@LetterInfoGuid uniqueidentifier, 
@Subject nvarchar(255), 
@HtmlBody nvarchar(max), 
@TextBody nvarchar(max), 
@LastModBy uniqueidentifier, 
@LastModUTC datetime, 
@IsApproved bit,
@ApprovedBy uniqueidentifier


AS

UPDATE 		[dbo].[mp_Letter] 

SET
			[LetterInfoGuid] = @LetterInfoGuid,
			[Subject] = @Subject,
			[HtmlBody] = @HtmlBody,
			[TextBody] = @TextBody,
			[LastModBy] = @LastModBy,
			[LastModUTC] = @LastModUTC,
			[IsApproved] = @IsApproved,
			[ApprovedBy] = @ApprovedBy
			
			
WHERE
			[LetterGuid] = @LetterGuid

GO

ALTER TABLE mp_LetterHtmlTemplate ALTER COLUMN [Html] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_LetterHtmlTemplate_Insert]

/*
Author:   			Joe Audette
Created: 			2007-12-27
Last Modified: 		2010-07-01
*/

@Guid uniqueidentifier,
@SiteGuid uniqueidentifier,
@Title nvarchar(255),
@Html nvarchar(max),
@LastModUTC datetime

	
AS

INSERT INTO 	[dbo].[mp_LetterHtmlTemplate] 
(
				[Guid],
				[SiteGuid],
				[Title],
				[Html],
				[LastModUTC]
) 

VALUES 
(
				@Guid,
				@SiteGuid,
				@Title,
				@Html,
				@LastModUTC
				
)

GO

ALTER PROCEDURE [dbo].[mp_LetterHtmlTemplate_SelectPage]

-- Author:   			Joe Audette
-- Created: 			2007-12-27
-- Last Modified: 		2010-07-01

@SiteGuid		uniqueidentifier,
@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
[Guid] UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
Guid
)

SELECT
		[Guid]
		
FROM
		[dbo].[mp_LetterHtmlTemplate]
		
WHERE
	[SiteGuid] = @SiteGuid

ORDER BY
	[Title]

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1

SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_LetterHtmlTemplate] t1

JOIN			#PageIndex t2
ON			
		t1.[Guid] = t2.[Guid]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_LetterHtmlTemplate_Update]

/*
Author:   			Joe Audette
Created: 			2007-12-27
Last Modified: 		2010-07-01
*/
	
@Guid uniqueidentifier, 
@Title nvarchar(255), 
@Html nvarchar(max), 
@LastModUTC datetime 


AS

UPDATE 		[dbo].[mp_LetterHtmlTemplate] 

SET
			[Title] = @Title,
			[Html] = @Html,
			[LastModUTC] = @LastModUTC
			
WHERE
			[Guid] = @Guid

GO

ALTER TABLE mp_LetterInfo DROP CONSTRAINT DF_mp_LetterInfo_AvailableToRoles

GO


ALTER TABLE mp_LetterInfo ALTER COLUMN [Description] NVARCHAR(MAX) null
ALTER TABLE mp_LetterInfo ALTER COLUMN [AvailableToRoles] NVARCHAR(MAX) not null 
ALTER TABLE mp_LetterInfo ALTER COLUMN [RolesThatCanEdit] NVARCHAR(MAX) null
ALTER TABLE mp_LetterInfo ALTER COLUMN [RolesThatCanApprove] NVARCHAR(MAX) null
ALTER TABLE mp_LetterInfo ALTER COLUMN [RolesThatCanSend] NVARCHAR(MAX) null

GO

ALTER TABLE mp_LetterInfo ADD DEFAULT('All Users') FOR [AvailableToRoles]

GO



ALTER PROCEDURE [dbo].[mp_LetterInfo_Insert]

/*
Author:   			Joe Audette
Created: 			2007-09-22
Last Modified: 		2010-07-01
*/

@LetterInfoGuid uniqueidentifier,
@SiteGuid uniqueidentifier,
@Title nvarchar(255),
@Description nvarchar(max),
@AvailableToRoles nvarchar(max),
@Enabled bit,
@AllowUserFeedback bit,
@AllowAnonFeedback bit,
@FromAddress nvarchar(255),
@FromName nvarchar(255),
@ReplyToAddress nvarchar(255),
@SendMode int,
@EnableViewAsWebPage bit,
@EnableSendLog bit,
@RolesThatCanEdit nvarchar(max),
@RolesThatCanApprove nvarchar(max),
@RolesThatCanSend nvarchar(max),
@CreatedUTC datetime,
@CreatedBy uniqueidentifier,
@LastModUTC datetime,
@LastModBy uniqueidentifier,
@AllowArchiveView bit,
@ProfileOptIn bit,
@SortRank int

	
AS

INSERT INTO 	[dbo].[mp_LetterInfo] 
(
				[LetterInfoGuid],
				[SiteGuid],
				[Title],
				[Description],
				[AvailableToRoles],
				[Enabled],
				[AllowUserFeedback],
				[AllowAnonFeedback],
				[FromAddress],
				[FromName],
				[ReplyToAddress],
				[SendMode],
				[EnableViewAsWebPage],
				[EnableSendLog],
				[RolesThatCanEdit],
				[RolesThatCanApprove],
				[RolesThatCanSend],
				[CreatedUTC],
				[CreatedBy],
				[LastModUTC],
				[LastModBy],
				AllowArchiveView,
				ProfileOptIn,
				SortRank,
				UnVerifiedCount
) 

VALUES 
(
				@LetterInfoGuid,
				@SiteGuid,
				@Title,
				@Description,
				@AvailableToRoles,
				@Enabled,
				@AllowUserFeedback,
				@AllowAnonFeedback,
				@FromAddress,
				@FromName,
				@ReplyToAddress,
				@SendMode,
				@EnableViewAsWebPage,
				@EnableSendLog,
				@RolesThatCanEdit,
				@RolesThatCanApprove,
				@RolesThatCanSend,
				@CreatedUTC,
				@CreatedBy,
				@LastModUTC,
				@LastModBy,
				@AllowArchiveView,
				@ProfileOptIn,
				@SortRank,
				0
				
)



GO

ALTER PROCEDURE [dbo].[mp_LetterInfo_Update]

/*
Author:   			Joe Audette
Created: 			2007-09-22
Last Modified: 		2010-07-01
*/
	
@LetterInfoGuid uniqueidentifier, 
@SiteGuid uniqueidentifier, 
@Title nvarchar(255), 
@Description nvarchar(max), 
@AvailableToRoles nvarchar(max), 
@Enabled bit, 
@AllowUserFeedback bit, 
@AllowAnonFeedback bit, 
@FromAddress nvarchar(255), 
@FromName nvarchar(255), 
@ReplyToAddress nvarchar(255), 
@SendMode int, 
@EnableViewAsWebPage bit, 
@EnableSendLog bit, 
@RolesThatCanEdit nvarchar(max), 
@RolesThatCanApprove nvarchar(max), 
@RolesThatCanSend nvarchar(max), 
@CreatedUTC datetime, 
@CreatedBy uniqueidentifier, 
@LastModUTC datetime, 
@LastModBy uniqueidentifier,
@AllowArchiveView bit,
@ProfileOptIn bit,
@SortRank int


AS

UPDATE 		[dbo].[mp_LetterInfo] 

SET
			[SiteGuid] = @SiteGuid,
			[Title] = @Title,
			[Description] = @Description,
			[AvailableToRoles] = @AvailableToRoles,
			[Enabled] = @Enabled,
			[AllowUserFeedback] = @AllowUserFeedback,
			[AllowAnonFeedback] = @AllowAnonFeedback,
			[FromAddress] = @FromAddress,
			[FromName] = @FromName,
			[ReplyToAddress] = @ReplyToAddress,
			[SendMode] = @SendMode,
			[EnableViewAsWebPage] = @EnableViewAsWebPage,
			[EnableSendLog] = @EnableSendLog,
			[RolesThatCanEdit] = @RolesThatCanEdit,
			[RolesThatCanApprove] = @RolesThatCanApprove,
			[RolesThatCanSend] = @RolesThatCanSend,
			[CreatedUTC] = @CreatedUTC,
			[CreatedBy] = @CreatedBy,
			[LastModUTC] = @LastModUTC,
			[LastModBy] = @LastModBy,
			AllowArchiveView = @AllowArchiveView,
			ProfileOptIn = @ProfileOptIn,
			SortRank = @SortRank
			
WHERE
			[LetterInfoGuid] = @LetterInfoGuid


GO

ALTER TABLE mp_LetterSendLog ALTER COLUMN [ErrorMessage] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_LetterSendLog_Insert]

/*
Author:   			Joe Audette
Created: 			2008-01-08
Last Modified: 		2010-07-01
*/

@LetterGuid uniqueidentifier,
@UserGuid uniqueidentifier,
@SubscribeGuid uniqueidentifier,
@EmailAddress nvarchar(100),
@UTC datetime,
@ErrorOccurred bit,
@ErrorMessage nvarchar(max)

	
AS

INSERT INTO 	[dbo].[mp_LetterSendLog] 
(
				[LetterGuid],
				[UserGuid],
				SubscribeGuid,
				[EmailAddress],
				[UTC],
				[ErrorOccurred],
				[ErrorMessage]
) 

VALUES 
(
				@LetterGuid,
				@UserGuid,
				@SubscribeGuid,
				@EmailAddress,
				@UTC,
				@ErrorOccurred,
				@ErrorMessage
				
)
SELECT @@IDENTITY



GO

ALTER PROCEDURE [dbo].[mp_LetterSendLog_SelectPage]

-- Author:   			Joe Audette
-- Created: 			2008-01-08
-- Last Modified: 		2010-07-01

@LetterGuid		uniqueidentifier,
@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
RowID Int
)

BEGIN

INSERT INTO #PageIndex ( 
RowID
)

SELECT
		[RowID]
		
FROM
		[dbo].[mp_LetterSendLog]
		
WHERE
		[LetterGuid] = @LetterGuid

ORDER BY
		[EmailAddress]

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1

SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_LetterSendLog] t1

JOIN			#PageIndex t2
ON			
		t1.[RowID] = t2.[RowID]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_LetterSendLog_Update]

/*
Author:   			Joe Audette
Created: 			2008-01-08
Last Modified: 		2010-07-01
*/
	
@RowID int, 
@LetterGuid uniqueidentifier, 
@UserGuid uniqueidentifier, 
@EmailAddress nvarchar(100), 
@UTC datetime, 
@ErrorOccurred bit, 
@ErrorMessage nvarchar(max) 


AS

UPDATE 		[dbo].[mp_LetterSendLog] 

SET
			[LetterGuid] = @LetterGuid,
			[UserGuid] = @UserGuid,
			[EmailAddress] = @EmailAddress,
			[UTC] = @UTC,
			[ErrorOccurred] = @ErrorOccurred,
			[ErrorMessage] = @ErrorMessage
			
WHERE
			[RowID] = @RowID

GO

ALTER TABLE mp_Modules ALTER COLUMN [AuthorizedEditRoles] NVARCHAR(MAX) null
ALTER TABLE mp_Modules ALTER COLUMN [ViewRoles] NVARCHAR(MAX) null
ALTER TABLE mp_Modules ALTER COLUMN [DraftEditRoles] NVARCHAR(MAX) null

GO

ALTER TABLE mp_ModuleSettings ALTER COLUMN [RegexValidationExpression] NVARCHAR(MAX) null
ALTER TABLE mp_ModuleSettings ALTER COLUMN [SettingValue] NVARCHAR(MAX) null

GO

ALTER TABLE mp_ModuleDefinitionSettings ALTER COLUMN [RegexValidationExpression] NVARCHAR(MAX) null
ALTER TABLE mp_ModuleDefinitionSettings ALTER COLUMN [SettingValue] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_ModuleDefinitionSettings_Update]

@ModuleDefID      		int,
@SettingName   		nvarchar(50),
@SettingValue  			nvarchar(max),
@ControlType   			nvarchar(50),
@RegexValidationExpression 	nvarchar(max),
@FeatureGuid uniqueidentifier,
@ResourceFile nvarchar(255),
@ControlSrc	nvarchar(255),
@HelpKey	nvarchar(255),
@SortOrder	int

AS

IF NOT EXISTS (
    SELECT 
        * 
    FROM 
        mp_ModuleDefinitionSettings 
    WHERE 
        (ModuleDefID = @ModuleDefID OR FeatureGuid = @FeatureGuid)
      AND
        SettingName = @SettingName
)
INSERT INTO mp_ModuleDefinitionSettings (
	FeatureGuid,
    ModuleDefID,
	ResourceFile,
    SettingName,
    SettingValue,
	ControlType,
	RegexValidationExpression,
	ControlSrc,
	HelpKey,
	SortOrder
) 
VALUES (
	@FeatureGuid,
    @ModuleDefID,
	@ResourceFile,
    @SettingName,
    @SettingValue,
	@ControlType,
	@RegexValidationExpression,
	@ControlSrc,
	@HelpKey,
	@SortOrder
)
ELSE
UPDATE
    mp_ModuleDefinitionSettings

SET
	FeatureGuid = @FeatureGuid,
    SettingValue = @SettingValue,
	ControlType = @ControlType,
	RegexValidationExpression = @RegexValidationExpression,
	ResourceFile = @ResourceFile,
	ControlSrc = @ControlSrc,
	HelpKey = @HelpKey,
	SortOrder = @SortOrder

WHERE
    (ModuleDefID = @ModuleDefID OR FeatureGuid = @FeatureGuid)
  AND
    SettingName = @SettingName

GO

ALTER PROCEDURE [dbo].[mp_ModuleDefinitionSettings_UpdateByID]

@ID						int,
@ModuleDefID      		int,
@SettingName   		nvarchar(50),
@SettingValue  			nvarchar(max),
@ControlType   			nvarchar(50),
@RegexValidationExpression 	nvarchar(max),
@ResourceFile nvarchar(255),
@ControlSrc	nvarchar(255),
@HelpKey	nvarchar(255),
@SortOrder	int

AS

UPDATE
    mp_ModuleDefinitionSettings

SET
    ResourceFile = @ResourceFile,
	SettingName = @SettingName,
    SettingValue = @SettingValue,
	ControlType = @ControlType,
	RegexValidationExpression = @RegexValidationExpression,
	ControlSrc = @ControlSrc,
	HelpKey = @HelpKey,
	SortOrder = @SortOrder

WHERE
    ID = @ID AND ModuleDefID = @ModuleDefID

GO

ALTER PROCEDURE [dbo].[mp_Modules_Insert]

/*
Author:   			Joe Audette
Created: 			2004-12-26
Last Modified: 		2010-07-01

*/

@PageID int,
@SiteID		int,
@ModuleDefID int,
@ModuleOrder int,
@PaneName nvarchar(50),
@ModuleTitle nvarchar(255),
@AuthorizedEditRoles nvarchar(max),
@DraftEditRoles nvarchar(max),
@CacheTime int,
@ShowTitle bit,
@AvailableForMyPage	bit,
@CreatedByUserID	int,
@CreatedDate		datetime,
@AllowMultipleInstancesOnMyPage	bit,
@Icon	nvarchar(255),
@Guid	uniqueidentifier,
@FeatureGuid uniqueidentifier,
@SiteGuid	uniqueidentifier,
@HideFromAuth bit,
@HideFromUnAuth bit,
@ViewRoles nvarchar(max)

	
AS
DECLARE @ModuleID int

INSERT INTO 	[dbo].[mp_Modules] 
(
				SiteID,
				SiteGuid,
				[ModuleDefID],
				[ModuleTitle],
				[AuthorizedEditRoles],
				[DraftEditRoles],
				[CacheTime],
				[ShowTitle],
				AvailableForMyPage,
				AllowMultipleInstancesOnMyPage,
				Icon,
				CreatedByUserID,
				CreatedDate,
				[Guid],
				FeatureGuid,
				HideFromAuth,
				HideFromUnAuth,
				ViewRoles
) 

VALUES 
(
				@SiteID,
				@SiteGuid,
				@ModuleDefID,
				@ModuleTitle,
				@AuthorizedEditRoles,
				@DraftEditRoles,
				@CacheTime,
				@ShowTitle,
				@AvailableForMyPage,
				@AllowMultipleInstancesOnMyPage,
				@Icon,
				@CreatedByUserID,
				@CreatedDate,
				@Guid,
				@FeatureGuid,
				@HideFromAuth,
				@HideFromUnAuth,
				@ViewRoles
				
)
SELECT @ModuleID =  @@IDENTITY

IF @PageID > -1
BEGIN

DECLARE @PageGuid uniqueidentifier
SET @PageGuid = (SELECT TOP 1 PageGuid FROM mp_Pages WHERE PageID = @PageID)

INSERT INTO 	[dbo].[mp_PageModules] 
(
				[PageID],
				[ModuleID],
				[ModuleOrder],
				[PaneName],
				[PublishBeginDate],
				PageGuid,
				ModuleGuid
				
) 

VALUES 
(
				@PageID,
				@ModuleID,
				@ModuleOrder,
				@PaneName,
				@CreatedDate,
				@PageGuid,
				@Guid
				
				
)
END


SELECT @ModuleID

GO

ALTER PROCEDURE [dbo].[mp_Modules_Update]

/*
Author:   			Joe Audette
Created: 			2004-12-26
Last Modified: 		2010-07-01

*/
	
@ModuleID int, 
@ModuleDefID int, 
@ModuleTitle nvarchar(255), 
@AuthorizedEditRoles nvarchar(max), 
@DraftEditRoles nvarchar(max),
@CacheTime int, 
@ShowTitle bit ,
@EditUserID	int,
@AvailableForMyPage	bit,
@AllowMultipleInstancesOnMyPage	bit,
@Icon	nvarchar(255),
@HideFromAuth bit,
@HideFromUnAuth bit,
@ViewRoles nvarchar(max)


AS
UPDATE 		[dbo].[mp_Modules] 

SET
			
			[ModuleDefID] = @ModuleDefID,
			
			[ModuleTitle] = @ModuleTitle,
			[AuthorizedEditRoles] = @AuthorizedEditRoles,
			[DraftEditRoles] = @DraftEditRoles,
			[CacheTime] = @CacheTime,
			[ShowTitle] = @ShowTitle,
			EditUserID = @EditUserID,
			AvailableForMyPage = @AvailableForMyPage,
			AllowMultipleInstancesOnMyPage = @AllowMultipleInstancesOnMyPage,
			Icon = @Icon,
			HideFromAuth = @HideFromAuth,
			HideFromUnAuth = @HideFromUnAuth,
			ViewRoles = @ViewRoles
			
WHERE
			[ModuleID] = @ModuleID


SET ANSI_NULLS OFF

GO

ALTER PROCEDURE [dbo].[mp_ModuleSettings_Insert]

/*
Author:			Joe Audette
Created:		2005-06-09
Last Modified:	2010-07-01

*/


@SettingGuid		uniqueidentifier,
@ModuleGuid		uniqueidentifier,
@ModuleID			int,
@SettingName			nvarchar(50),
@SettingValue			nvarchar(max),
@ControlType			nvarchar(50),
@RegexValidationExpression 	nvarchar(max),
@ControlSrc			nvarchar(255),
@HelpKey			nvarchar(255),
@SortOrder			int




AS

INSERT INTO 	mp_ModuleSettings
(
			SettingGuid,
			ModuleGuid,
			ModuleID,
			SettingName,
			SettingValue,
			ControlType,
			RegexValidationExpression,
			ControlSrc,
			HelpKey,
			SortOrder
)

VALUES
(
			@SettingGuid,
			@ModuleGuid,
			@ModuleID,
			@SettingName,
			@SettingValue,
			@ControlType,
			@RegexValidationExpression,
			@ControlSrc,
			@HelpKey,
			@SortOrder
)

GO

ALTER PROCEDURE [dbo].[mp_ModuleSettings_Update]
(
	@ModuleGuid		uniqueidentifier,
    @ModuleID      int,
    @SettingName   nvarchar(50),
    @SettingValue  nvarchar(max)
)
AS

IF NOT EXISTS (
    SELECT 
        * 
    FROM 
        mp_ModuleSettings 
    WHERE 
        ModuleID = @ModuleID
      AND
        SettingName = @SettingName
)
INSERT INTO mp_ModuleSettings (
	SettingGuid,
	ModuleGuid,
    ModuleID,
    SettingName,
    SettingValue
) 
VALUES (
	newid(),
	@ModuleGuid,
    @ModuleID,
    @SettingName,
    @SettingValue
)
ELSE
UPDATE
    mp_ModuleSettings

SET
    SettingValue = @SettingValue

WHERE
    ModuleID = @ModuleID
  AND
    SettingName = @SettingName

GO

ALTER TABLE mp_Pages ALTER COLUMN [AuthorizedRoles] NVARCHAR(MAX) null
ALTER TABLE mp_Pages ALTER COLUMN [EditRoles] NVARCHAR(MAX) null
ALTER TABLE mp_Pages ALTER COLUMN [CreateChildPageRoles] NVARCHAR(MAX) null
ALTER TABLE mp_Pages ALTER COLUMN [CompiledMeta] NVARCHAR(MAX) null
ALTER TABLE mp_Pages ALTER COLUMN [DraftEditRoles] NVARCHAR(MAX) null
ALTER TABLE mp_Pages ALTER COLUMN [CreateChildDraftRoles] NVARCHAR(MAX) null

DROP PROCEDURE [dbo].[mp_Pages_GetAuthRoles]
-- DROP PROCEDURE [dbo].[mp_Pages_GetBreadcrumbs]

GO

ALTER PROCEDURE [dbo].[mp_Pages_Insert]

/*
Author:			Joe Audette
Created:		2004-11-17
Last Modified:	2010-07-01

*/

@SiteID   		int,
@ParentID		int,
@PageName    		nvarchar(255),
@PageOrder   		int,
@AuthorizedRoles 	nvarchar(max),
@EditRoles		nvarchar(max),
@DraftEditRoles nvarchar(max),
@CreateChildPageRoles nvarchar(max),
@CreateChildDraftRoles nvarchar(max),
@RequireSSL		bit,
@ShowBreadcrumbs 	bit,
@ShowChildPageBreadcrumbs 	bit,
@PageKeyWords	nvarchar(255),
@PageDescription	nvarchar(255),
@PageEncoding	nvarchar(255),
@AdditionalMetaTags	nvarchar(255),
@UseUrl		bit,
@Url			nvarchar(255),
@OpenInNewWindow	bit,
@ShowChildPageMenu	bit,
@HideMainMenu	bit,
@Skin			nvarchar(100),
@IncludeInMenu	bit,
@MenuImage			nvarchar(50),
@PageTitle    		nvarchar(255),
@AllowBrowserCache	bit,
@ChangeFrequency	nvarchar(20),
@SiteMapPriority			nvarchar(10),
@LastModifiedUTC			datetime,
@PageGuid	uniqueidentifier,
@ParentGuid uniqueidentifier,
@HideAfterLogin	bit,
@SiteGuid	uniqueidentifier,
@CompiledMeta		nvarchar(max),
@CompiledMetaUtc	datetime,
@IncludeInSiteMap bit,
@IsClickable bit,
@ShowHomeCrumb bit,
@IsPending bit,
@CanonicalOverride nvarchar(255),
@IncludeInSearchMap bit,
@EnableComments bit

AS
INSERT INTO 		mp_Pages
(
    			SiteID,
			ParentID,
    			PageName,
				PageTitle,
    			PageOrder,
			AuthorizedRoles,
			EditRoles,
			DraftEditRoles,
			CreateChildPageRoles,
			CreateChildDraftRoles,
    			RequireSSL,
			AllowBrowserCache,
    			ShowBreadcrumbs,
			ShowChildBreadCrumbs,
    			PageKeyWords,
			PageDescription,
			PageEncoding,
			AdditionalMetaTags,
			UseUrl,
			Url,
			OpenInNewWindow,
			ShowChildPageMenu,
			HideMainMenu,
			Skin,
			IncludeInMenu,
			MenuImage,
			ChangeFrequency,
			SiteMapPriority,
			LastModifiedUTC,
			PageGuid,
			ParentGuid,
			HideAfterLogin,
			SiteGuid,
			CompiledMeta,
			CompiledMetaUtc,
			IncludeInSiteMap,
			IsClickable,
			ShowHomeCrumb,
			IsPending,
			CanonicalOverride,
			IncludeInSearchMap,
			EnableComments
)

VALUES
(
    			@SiteID,
			@ParentID,
    			@PageName,
				@PageTitle,
    			@PageOrder,
			@AuthorizedRoles,
			@EditRoles,
			@DraftEditRoles,
			@CreateChildPageRoles,
			@CreateChildDraftRoles,
    			@RequireSSL,
			@AllowBrowserCache,
    			@ShowBreadcrumbs,
			@ShowChildPageBreadcrumbs,
			@PageKeyWords,
			@PageDescription,
			@PageEncoding,
			@AdditionalMetaTags,
			@UseUrl,
			@Url,
			@OpenInNewWindow,
			@ShowChildPageMenu,
			@HideMainMenu,
			@Skin,
			@IncludeInMenu,
			@MenuImage,
			@ChangeFrequency,
			@SiteMapPriority,
			@LastModifiedUTC,
			@PageGuid,
			@ParentGuid,
			@HideAfterLogin,
			@SiteGuid,
			@CompiledMeta,
			@CompiledMetaUtc,
			@IncludeInSiteMap,
			@IsClickable,
			@ShowHomeCrumb,
			@IsPending,
			@CanonicalOverride,
			@IncludeInSearchMap,
			@EnableComments
)

SELECT  @@Identity As PageID



GO

ALTER PROCEDURE [dbo].[mp_Pages_Update]

/*
Author:			Joe Audette
Last Modified:		2010-07-01

*/


@SiteID        		int,
@PageID           	int,
@ParentID		int,
@PageOrder        	int,
@PageName         	nvarchar(255),
@AuthorizedRoles 	nvarchar(max),
@EditRoles		nvarchar(max),
@DraftEditRoles		nvarchar(max),
@CreateChildPageRoles nvarchar(max),
@CreateChildDraftRoles nvarchar(max),
@RequireSSL		bit,
@ShowBreadcrumbs	bit,
@ShowChildPageBreadcrumbs bit,
@PageKeyWords	nvarchar(255),
@PageDescription	nvarchar(255),
@PageEncoding	nvarchar(255),
@AdditionalMetaTags	nvarchar(255),
@UseUrl		bit,
@Url			nvarchar(255),
@OpenInNewWindow	bit,
@ShowChildPageMenu	bit,
@HideMainMenu	bit,
@Skin			nvarchar(100),
@IncludeInMenu	bit,
@MenuImage			nvarchar(50),
@PageTitle         	nvarchar(255),
@AllowBrowserCache	bit,
@ChangeFrequency	nvarchar(20),
@SiteMapPriority			nvarchar(10),
@LastModifiedUTC			datetime,
@ParentGuid uniqueidentifier,
@HideAfterLogin bit,
@CompiledMeta		nvarchar(max),
@CompiledMetaUtc	datetime,
@IncludeInSiteMap bit,
@IsClickable bit,
@ShowHomeCrumb bit,
@IsPending bit,
@CanonicalOverride nvarchar(255),
@IncludeInSearchMap bit,
@EnableComments bit


AS
UPDATE
    mp_Pages

SET
	ParentID = @ParentID,
    	PageOrder = @PageOrder,
    	PageName = @PageName,
		PageTitle = @PageTitle,
    	AuthorizedRoles = @AuthorizedRoles,
	EditRoles = @EditRoles,
	DraftEditRoles = @DraftEditRoles,
	CreateChildPageRoles = @CreateChildPageRoles,
	CreateChildDraftRoles = @CreateChildDraftRoles,
    	RequireSSL = @RequireSSL,
	AllowBrowserCache = @AllowBrowserCache,
	ShowBreadcrumbs = @ShowBreadcrumbs,
	ShowChildBreadCrumbs = @ShowChildPageBreadcrumbs,
	PageKeyWords = @PageKeyWords,
	PageDescription = @PageDescription,
	PageEncoding = @PageEncoding,
	AdditionalMetaTags = @AdditionalMetaTags,
	UseUrl = @UseUrl,
	Url = @Url,
	OpenInNewWindow = @OpenInNewWindow,
	ShowChildPageMenu = @ShowChildPageMenu,
	HideMainMenu = @HideMainMenu,
	Skin = @Skin,
	IncludeInMenu = @IncludeInMenu,
	MenuImage = @MenuImage,
	ChangeFrequency = @ChangeFrequency,
	SiteMapPriority = @SiteMapPriority,
	LastModifiedUTC = @LastModifiedUTC,
	ParentGuid = @ParentGuid,
	HideAfterLogin = @HideAfterLogin,
	CompiledMeta = @CompiledMeta,
	CompiledMetaUtc = @CompiledMetaUtc,
	IncludeInSiteMap = @IncludeInSiteMap,
	IsClickable = @IsClickable,
	ShowHomeCrumb = @ShowHomeCrumb,
	IsPending = @IsPending,
	CanonicalOverride = @CanonicalOverride,
	IncludeInSearchMap = @IncludeInSearchMap,
	EnableComments = @EnableComments

WHERE
    PageID = @PageID




GO

ALTER TABLE mp_PayPalLog ALTER COLUMN [RawResponse] NVARCHAR(MAX) null
ALTER TABLE mp_PayPalLog ALTER COLUMN [SerializedObject] NVARCHAR(MAX) null


GO

ALTER PROCEDURE [dbo].[mp_PayPalLog_Insert]

/*
Author:   			Joe Audette
Created: 			2008-07-05
Last Modified: 		2010-07-01
*/

@RowGuid uniqueidentifier,
@CreatedUtc datetime,
@SiteGuid uniqueidentifier,
@UserGuid uniqueidentifier,
@StoreGuid uniqueidentifier,
@CartGuid uniqueidentifier,
@RequestType nvarchar(255),
@ApiVersion nvarchar(50),
@RawResponse nvarchar(max),
@Token nvarchar(50),
@PayerId nvarchar(50),
@TransactionId nvarchar(50),
@PaymentType nvarchar(10),
@PaymentStatus nvarchar(50),
@PendingReason nvarchar(255),
@ReasonCode nvarchar(50),
@CurrencyCode nvarchar(50),
@ExchangeRate decimal(15, 4),
@CartTotal decimal(15, 4),
@PayPalAmt decimal(15, 4),
@TaxAmt decimal(15, 4),
@FeeAmt decimal(15, 4),
@SettleAmt decimal(15, 4),
@ProviderName nvarchar(255),
@ReturnUrl nvarchar(255),
@SerializedObject nvarchar(max),
@PDTProviderName nvarchar(255),
@IPNProviderName nvarchar(255),
@Response nvarchar(255)

	
AS

INSERT INTO 	[dbo].[mp_PayPalLog] 
(
				[RowGuid],
				[CreatedUtc],
				[SiteGuid],
				[UserGuid],
				[StoreGuid],
				[CartGuid],
				[RequestType],
				[ApiVersion],
				[RawResponse],
				[Token],
				[PayerId],
				[TransactionId],
				[PaymentType],
				[PaymentStatus],
				[PendingReason],
				[ReasonCode],
				[CurrencyCode],
				[ExchangeRate],
				[CartTotal],
				[PayPalAmt],
				[TaxAmt],
				[FeeAmt],
				[SettleAmt],
				ProviderName,
				ReturnUrl,
				SerializedObject,
				PDTProviderName,
				IPNProviderName,
				Response
) 

VALUES 
(
				@RowGuid,
				@CreatedUtc,
				@SiteGuid,
				@UserGuid,
				@StoreGuid,
				@CartGuid,
				@RequestType,
				@ApiVersion,
				@RawResponse,
				@Token,
				@PayerId,
				@TransactionId,
				@PaymentType,
				@PaymentStatus,
				@PendingReason,
				@ReasonCode,
				@CurrencyCode,
				@ExchangeRate,
				@CartTotal,
				@PayPalAmt,
				@TaxAmt,
				@FeeAmt,
				@SettleAmt,
				@ProviderName,
				@ReturnUrl,
				@SerializedObject,
				@PDTProviderName,
				@IPNProviderName,
				@Response
				
)

GO

ALTER PROCEDURE [dbo].[mp_PayPalLog_SelectPage]

-- Author:   			Joe Audette
-- Created: 			2008-03-09
-- Last Modified: 		2010-07-01

@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
RowGuid UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
RowGuid
)

SELECT
		[RowGuid]
		
FROM
		[dbo].[mp_PayPalLog]
		
-- WHERE

-- ORDER BY

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1

SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_PayPalLog] t1

JOIN			#PageIndex t2
ON			
		t1.[RowGuid] = t2.[RowGuid]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_PayPalLog_Update]

/*
Author:   			Joe Audette
Created: 			2008-03-09
Last Modified: 		2010-07-01
*/
	
@RowGuid uniqueidentifier, 
@CreatedUtc datetime, 
@SiteGuid uniqueidentifier, 
@UserGuid uniqueidentifier, 
@StoreGuid uniqueidentifier, 
@CartGuid uniqueidentifier, 
@RequestType nvarchar(255), 
@ApiVersion nvarchar(50), 
@RawResponse nvarchar(max), 
@Token nvarchar(50), 
@PayerId nvarchar(50), 
@TransactionId nvarchar(50), 
@PaymentType nvarchar(10), 
@PaymentStatus nvarchar(50), 
@PendingReason nvarchar(255), 
@ReasonCode nvarchar(50), 
@CurrencyCode nvarchar(50), 
@ExchangeRate decimal(15, 4), 
@CartTotal decimal(15, 4), 
@PayPalAmt decimal(15, 4), 
@TaxAmt decimal(15, 4), 
@FeeAmt decimal(15, 4), 
@SettleAmt decimal(15, 4) 


AS

UPDATE 		[dbo].[mp_PayPalLog] 

SET
			[CreatedUtc] = @CreatedUtc,
			[SiteGuid] = @SiteGuid,
			[UserGuid] = @UserGuid,
			[StoreGuid] = @StoreGuid,
			[CartGuid] = @CartGuid,
			[RequestType] = @RequestType,
			[ApiVersion] = @ApiVersion,
			[RawResponse] = @RawResponse,
			[Token] = @Token,
			[PayerId] = @PayerId,
			[TransactionId] = @TransactionId,
			[PaymentType] = @PaymentType,
			[PaymentStatus] = @PaymentStatus,
			[PendingReason] = @PendingReason,
			[ReasonCode] = @ReasonCode,
			[CurrencyCode] = @CurrencyCode,
			[ExchangeRate] = @ExchangeRate,
			[CartTotal] = @CartTotal,
			[PayPalAmt] = @PayPalAmt,
			[TaxAmt] = @TaxAmt,
			[FeeAmt] = @FeeAmt,
			[SettleAmt] = @SettleAmt
			
WHERE
			[RowGuid] = @RowGuid

GO

ALTER TABLE mp_PlugNPayLog ALTER COLUMN [RawResponse] NVARCHAR(MAX) null
ALTER TABLE mp_PlugNPayLog ALTER COLUMN [Reason] NVARCHAR(MAX) null


GO

ALTER PROCEDURE [dbo].[mp_PlugNPayLog_Insert]

/*
Author:   			Joe Audette
Created: 			2008-03-10
Last Modified: 		2010-07-01
*/

@RowGuid uniqueidentifier,
@CreatedUtc datetime,
@SiteGuid uniqueidentifier,
@UserGuid uniqueidentifier,
@StoreGuid uniqueidentifier,
@CartGuid uniqueidentifier,
@RawResponse nvarchar(max),
@ResponseCode nvarchar(10),
@ResponseReasonCode nvarchar(20),
@Reason nvarchar(max),
@AvsCode nvarchar(50),
@CcvCode nvarchar(10),
@CavCode nvarchar(10),
@TransactionId nvarchar(50),
@TransactionType nvarchar(50),
@Method nvarchar(20),
@AuthCode nvarchar(50),
@Amount decimal(15, 4),
@Tax decimal(15, 4),
@Duty decimal(15, 4),
@Freight decimal(15, 4)

	
AS

INSERT INTO 	[dbo].[mp_PlugNPayLog] 
(
				[RowGuid],
				[CreatedUtc],
				[SiteGuid],
				[UserGuid],
				[StoreGuid],
				[CartGuid],
				[RawResponse],
				[ResponseCode],
				[ResponseReasonCode],
				[Reason],
				[AvsCode],
				[CcvCode],
				[CavCode],
				[TransactionId],
				[TransactionType],
				[Method],
				[AuthCode],
				[Amount],
				[Tax],
				[Duty],
				[Freight]
) 

VALUES 
(
				@RowGuid,
				@CreatedUtc,
				@SiteGuid,
				@UserGuid,
				@StoreGuid,
				@CartGuid,
				@RawResponse,
				@ResponseCode,
				@ResponseReasonCode,
				@Reason,
				@AvsCode,
				@CcvCode,
				@CavCode,
				@TransactionId,
				@TransactionType,
				@Method,
				@AuthCode,
				@Amount,
				@Tax,
				@Duty,
				@Freight
				
)

GO

ALTER PROCEDURE [dbo].[mp_PlugNPayLog_Update]

/*
Author:   			Joe Audette
Created: 			2008-03-10
Last Modified: 		2010-07-01
*/
	
@RowGuid uniqueidentifier, 
@SiteGuid uniqueidentifier, 
@UserGuid uniqueidentifier, 
@StoreGuid uniqueidentifier, 
@CartGuid uniqueidentifier, 
@RawResponse nvarchar(max), 
@ResponseCode nvarchar(10), 
@ResponseReasonCode nvarchar(20), 
@Reason nvarchar(max), 
@AvsCode nvarchar(50), 
@CcvCode nvarchar(10), 
@CavCode nvarchar(10), 
@TransactionId nvarchar(50), 
@TransactionType nvarchar(50), 
@Method nvarchar(20), 
@AuthCode nvarchar(50), 
@Amount decimal(15, 4), 
@Tax decimal(15, 4), 
@Duty decimal(15, 4), 
@Freight decimal(15, 4) 


AS

UPDATE 		[dbo].[mp_PlugNPayLog] 

SET
			[SiteGuid] = @SiteGuid,
			[UserGuid] = @UserGuid,
			[StoreGuid] = @StoreGuid,
			[CartGuid] = @CartGuid,
			[RawResponse] = @RawResponse,
			[ResponseCode] = @ResponseCode,
			[ResponseReasonCode] = @ResponseReasonCode,
			[Reason] = @Reason,
			[AvsCode] = @AvsCode,
			[CcvCode] = @CcvCode,
			[CavCode] = @CavCode,
			[TransactionId] = @TransactionId,
			[TransactionType] = @TransactionType,
			[Method] = @Method,
			[AuthCode] = @AuthCode,
			[Amount] = @Amount,
			[Tax] = @Tax,
			[Duty] = @Duty,
			[Freight] = @Freight
			
WHERE
			[RowGuid] = @RowGuid

GO

ALTER TABLE mp_SavedQuery ALTER COLUMN [Statement] NVARCHAR(MAX) null


GO

ALTER PROCEDURE [dbo].[mp_SavedQuery_Insert]

/*
Author:   			Joe Audette
Created: 			2009-12-24
Last Modified: 		2010-07-01
*/

@Id uniqueidentifier,
@Name nvarchar(50),
@Statement nvarchar(max),
@CreatedUtc datetime,
@CreatedBy uniqueidentifier,
@LastModUtc datetime,
@LastModBy uniqueidentifier

	
AS

INSERT INTO 	[dbo].[mp_SavedQuery] 
(
				[Id],
				[Name],
				[Statement],
				[CreatedUtc],
				[CreatedBy],
				[LastModUtc],
				[LastModBy]
) 

VALUES 
(
				@Id,
				@Name,
				@Statement,
				@CreatedUtc,
				@CreatedBy,
				@LastModUtc,
				@LastModBy
				
)

GO

ALTER PROCEDURE [dbo].[mp_SavedQuery_Update]

/*
Author:   			Joe Audette
Created: 			2009-12-24
Last Modified: 		2010-07-01
*/
	
@Id uniqueidentifier, 
@Statement nvarchar(max), 
@LastModUtc datetime, 
@LastModBy uniqueidentifier 


AS

UPDATE 		[dbo].[mp_SavedQuery] 

SET
	
			[Statement] = @Statement,
			[LastModUtc] = @LastModUtc,
			[LastModBy] = @LastModBy
			
WHERE
			[Id] = @Id

GO

ALTER TABLE mp_SchemaScriptHistory ALTER COLUMN [ErrorMessage] NVARCHAR(MAX) null
ALTER TABLE mp_SchemaScriptHistory ALTER COLUMN [ScriptBody] NVARCHAR(MAX) null


GO

ALTER PROCEDURE [dbo].[mp_SchemaScriptHistory_Insert]

/*
Author:   			Joe Audette
Created: 			2007-01-30
Last Modified: 		2010-07-01
*/

@ApplicationID uniqueidentifier,
@ScriptFile nvarchar(255),
@RunTime datetime,
@ErrorOccurred bit,
@ErrorMessage nvarchar(max),
@ScriptBody nvarchar(max)

	
AS

INSERT INTO 	[dbo].[mp_SchemaScriptHistory] 
(
				[ApplicationID],
				[ScriptFile],
				[RunTime],
				[ErrorOccurred],
				[ErrorMessage],
				[ScriptBody]
) 

VALUES 
(
				@ApplicationID,
				@ScriptFile,
				@RunTime,
				@ErrorOccurred,
				@ErrorMessage,
				@ScriptBody
				
)
SELECT @@IDENTITY

GO

ALTER TABLE mp_SiteModuleDefinitions ALTER COLUMN [AuthorizedRoles] NVARCHAR(MAX) null


GO

ALTER TABLE mp_Sites ALTER COLUMN [PwdStrengthRegex] NVARCHAR(MAX) null
DROP PROCEDURE [dbo].[mp_SiteSettings_SelectDefaultPageByID]
DROP PROCEDURE [dbo].[mp_SiteSettings_SelectDefaultPage]
DROP PROCEDURE [dbo].[mp_SiteSettings_SelectPage]


GO

ALTER PROCEDURE [dbo].[mp_Sites_UpdateExtendedProperties] 
	
@SiteID							int,
@AllowPasswordRetrieval			bit,
@AllowPasswordReset				bit,
@RequiresQuestionAndAnswer		bit,
@MaxInvalidPasswordAttempts		int,
@PasswordAttemptWindowMinutes	int,
@RequiresUniqueEmail			bit,
@PasswordFormat					int,
@MinRequiredPasswordLength		int,
@MinRequiredNonAlphanumericCharacters	int,
@PasswordStrengthRegularExpression	nvarchar(max),
@DefaultEmailFromAddress		nvarchar(100)

AS

UPDATE			mp_Sites

SET				AllowPasswordRetrieval = @AllowPasswordRetrieval,
				AllowPasswordReset = @AllowPasswordReset,
				RequiresQuestionAndAnswer = @RequiresQuestionAndAnswer,
				MaxInvalidPasswordAttempts = @MaxInvalidPasswordAttempts,
				PasswordAttemptWindowMinutes = @PasswordAttemptWindowMinutes,
				RequiresUniqueEmail = @RequiresUniqueEmail,
				PasswordFormat = @PasswordFormat,
				MinRequiredPasswordLength  = @MinRequiredPasswordLength,
				MinReqNonAlphaChars = @MinRequiredNonAlphanumericCharacters,
				PwdStrengthRegex = @PasswordStrengthRegularExpression,
				DefaultEmailFromAddress = @DefaultEmailFromAddress



WHERE			SiteID = @SiteID

GO

ALTER PROCEDURE [dbo].[mp_Sites_UpdateRelatedSiteSecurity]

/*
Author:			Joe Audette
Created			2009-09-16
Last Modified:	2010-07-01

*/

@SiteID           			int,
@AllowNewRegistration bit,
@UseSecureRegistration bit,
@UseLdapAuth				bit,
@AutoCreateLdapUserOnFirstLogin	bit,
@LdapServer				nvarchar(255),
@LdapDomain				nvarchar(255),
@LdapPort				int,
@LdapRootDN				nvarchar(255),
@LdapUserDNKey			nvarchar(10),
@AllowUserFullNameChange		bit,
@UseEmailForLogin			bit,
@AllowOpenIDAuth			bit,
@AllowWindowsLiveAuth		bit,
@AllowPasswordRetrieval bit,
@AllowPasswordReset	bit,
@RequiresQuestionAndAnswer	bit,
@MaxInvalidPasswordAttempts	int,
@PasswordAttemptWindowMinutes int,
@RequiresUniqueEmail	bit,
@PasswordFormat	int,
@MinRequiredPasswordLength	int,
@MinReqNonAlphaChars	int,
@PwdStrengthRegex	nvarchar(max)

	
AS
UPDATE	mp_Sites

SET
    
	AllowNewRegistration = @AllowNewRegistration,
	UseSecureRegistration = @UseSecureRegistration,
	UseLdapAuth = @UseLdapAuth,
	AutoCreateLdapUserOnFirstLogin = @AutoCreateLdapUserOnFirstLogin,
	LdapServer = @LdapServer,
	LdapPort = @LdapPort,
    LdapDomain = @LdapDomain,
	LdapRootDN = @LdapRootDN,
	LdapUserDNKey = @LdapUserDNKey,
	AllowUserFullNameChange = @AllowUserFullNameChange,
	UseEmailForLogin = @UseEmailForLogin,
	AllowOpenIDAuth = @AllowOpenIDAuth,
	AllowWindowsLiveAuth = @AllowWindowsLiveAuth,
	AllowPasswordRetrieval = @AllowPasswordRetrieval,
	AllowPasswordReset = @AllowPasswordReset,
	RequiresQuestionAndAnswer = @RequiresQuestionAndAnswer,
	MaxInvalidPasswordAttempts = @MaxInvalidPasswordAttempts,
	PasswordAttemptWindowMinutes = @PasswordAttemptWindowMinutes,
	RequiresUniqueEmail = @RequiresUniqueEmail,
	PasswordFormat = @PasswordFormat,
	MinRequiredPasswordLength = @MinRequiredPasswordLength,
	MinReqNonAlphaChars = @MinReqNonAlphaChars,
	PwdStrengthRegex = @PwdStrengthRegex
	

WHERE
    	SiteID <> @SiteID


GO

ALTER TABLE mp_SiteSettingsEx ALTER COLUMN [KeyValue] NVARCHAR(MAX) null
ALTER TABLE mp_SiteSettingsExDef ALTER COLUMN [DefaultValue] NVARCHAR(MAX) null


GO

ALTER procedure [dbo].[mp_SiteSettingsEx_Save]
(
	@SiteID int
	,@SiteGuid uniqueidentifier
	,@KeyName nvarchar(128)
	,@KeyValue nvarchar(max)
	,@GroupName nvarchar(255)
)
AS
	
	if exists(select [KeyName] from mp_SiteSettingsEx 
			where SiteID = @SiteID and [KeyName] = @KeyName)
	begin
		update mp_SiteSettingsEx set KeyValue = @KeyValue 
		where SiteID = @SiteID and [KeyName] = @KeyName 
	end
	else
	begin
		insert into mp_SiteSettingsEx(SiteID,SiteGuid,[KeyName],KeyValue,[GroupName])
		values(@SiteID,@SiteGuid,@KeyName,@KeyValue,@GroupName)
	end

GO

ALTER PROCEDURE [dbo].[mp_SiteSettingsEx_UpdateRelated]
(
	@SiteID int
	,@KeyName nvarchar(128)
	,@KeyValue nvarchar(max)
	
)
AS
	
	
update mp_SiteSettingsEx set KeyValue = @KeyValue 
where SiteID <> @SiteID 
and [KeyName] = @KeyName 
	

GO

ALTER TABLE mp_TaskQueue ALTER COLUMN [TaskCompleteMessage] NVARCHAR(MAX) null
ALTER TABLE mp_TaskQueue ALTER COLUMN [SerializedTaskObject] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_TaskQueue_Insert]

/*
Author:   			Joe Audette
Created: 			2007-12-29
Last Modified: 		2010-07-01
*/

@Guid uniqueidentifier,
@SiteGuid uniqueidentifier,
@QueuedBy uniqueidentifier,
@TaskName nvarchar(255),
@NotifyOnCompletion bit,
@NotificationToEmail nvarchar(255),
@NotificationFromEmail nvarchar(255),
@NotificationSubject nvarchar(255),
@TaskCompleteMessage nvarchar(max),
@CanStop bit,
@CanResume bit,
@UpdateFrequency int,
@QueuedUTC datetime,
@CompleteRatio float,
@Status nvarchar(255),
@SerializedTaskObject nvarchar(max),
@SerializedTaskType nvarchar(255)

	
AS

INSERT INTO 	[dbo].[mp_TaskQueue] 
(
				[Guid],
				[SiteGuid],
				[QueuedBy],
				[TaskName],
				[NotifyOnCompletion],
				[NotificationToEmail],
				[NotificationFromEmail],
				[NotificationSubject],
				[TaskCompleteMessage],
				[CanStop],
				[CanResume],
				[UpdateFrequency],
				[QueuedUTC],
				[CompleteRatio],
				[Status],
				[SerializedTaskObject],
				[SerializedTaskType]
) 

VALUES 
(
				@Guid,
				@SiteGuid,
				@QueuedBy,
				@TaskName,
				@NotifyOnCompletion,
				@NotificationToEmail,
				@NotificationFromEmail,
				@NotificationSubject,
				@TaskCompleteMessage,
				@CanStop,
				@CanResume,
				@UpdateFrequency,
				@QueuedUTC,
				@CompleteRatio,
				@Status,
				@SerializedTaskObject,
				@SerializedTaskType
				
)

GO

ALTER PROCEDURE [dbo].[mp_TaskQueue_SelectPage]

-- Author:   			Joe Audette
-- Created: 			2007-12-29
-- Last Modified: 		2010-07-01

@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
Guid UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
Guid
)

SELECT
		[Guid]
		
FROM
		[dbo].[mp_TaskQueue]
		
-- WHERE

ORDER BY
		[QueuedUTC] DESC

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1

SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_TaskQueue] t1

JOIN			#PageIndex t2
ON			
		t1.[Guid] = t2.[Guid]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_TaskQueue_SelectPageBySite]

-- Author:   			Joe Audette
-- Created: 			2007-12-29
-- Last Modified: 		2010-07-01

@SiteGuid	uniqueidentifier,
@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
Guid UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
Guid
)

SELECT
		[Guid]
		
FROM
		[dbo].[mp_TaskQueue]
		
WHERE
		[SiteGuid] = @SiteGuid

ORDER BY
		[QueuedUTC] DESC

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1

SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_TaskQueue] t1

JOIN			#PageIndex t2
ON			
		t1.[Guid] = t2.[Guid]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_TaskQueue_SelectPageIncomplete]

-- Author:   			Joe Audette
-- Created: 			2007-12-29
-- Last Modified: 		2010-07-01


@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
Guid UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
Guid
)

SELECT
		[Guid]
		
FROM
		[dbo].[mp_TaskQueue]
		
WHERE
		
		CompleteUTC IS NULL

ORDER BY
		[QueuedUTC] 

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1

SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_TaskQueue] t1

JOIN			#PageIndex t2
ON			
		t1.[Guid] = t2.[Guid]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_TaskQueue_SelectPageIncompleteBySite]

-- Author:   			Joe Audette
-- Created: 			2007-12-29
-- Last Modified: 		2010-07-01

@SiteGuid	uniqueidentifier,
@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
Guid UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
Guid
)

SELECT
		[Guid]
		
FROM
		[dbo].[mp_TaskQueue]
		
WHERE
		[SiteGuid] = @SiteGuid
		AND CompleteUTC IS NULL

ORDER BY
		[QueuedUTC] 

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1

SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_TaskQueue] t1

JOIN			#PageIndex t2
ON			
		t1.[Guid] = t2.[Guid]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER TABLE mp_UserProperties ALTER COLUMN [PropertyValueString] NVARCHAR(MAX) null
ALTER TABLE mp_UserProperties ALTER COLUMN [PropertyValueBinary] varbinary(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_UserProperties_Insert]

/*
Author:   			Joe Audette
Created: 			2006-12-31
Last Modified: 		2010-07-02
*/

@PropertyID uniqueidentifier,
@UserGuid uniqueidentifier,
@PropertyName nvarchar(255),
@PropertyValueString nvarchar(max),
@PropertyValueBinary varbinary(max),
@LastUpdatedDate datetime,
@IsLazyLoaded bit

	
AS



INSERT INTO 	[dbo].[mp_UserProperties] 
(
				[PropertyID],
				[UserGuid],
				[PropertyName],
				[PropertyValueString],
				[PropertyValueBinary],
				[LastUpdatedDate],
				[IsLazyLoaded]
) 

VALUES 
(
				@PropertyID,
				@UserGuid,
				@PropertyName,
				@PropertyValueString,
				@PropertyValueBinary,
				@LastUpdatedDate,
				@IsLazyLoaded
				
)

GO


ALTER PROCEDURE [dbo].[mp_UserProperties_Update]

/*
Author:   			Joe Audette
Created: 			2006-12-31
Last Modified: 		2010-07-02
*/
	 
@UserGuid uniqueidentifier, 
@PropertyName nvarchar(255), 
@PropertyValueString nvarchar(max), 
@PropertyValueBinary varbinary(max), 
@LastUpdatedDate datetime, 
@IsLazyLoaded bit 


AS

UPDATE 		[dbo].[mp_UserProperties] 

SET
			[UserGuid] = @UserGuid,
			[PropertyName] = @PropertyName,
			[PropertyValueString] = @PropertyValueString,
			[PropertyValueBinary] = @PropertyValueBinary,
			[LastUpdatedDate] = @LastUpdatedDate,
			[IsLazyLoaded] = @IsLazyLoaded
			
WHERE
			[UserGuid] = @UserGuid
			AND [PropertyName] = @PropertyName

GO

ALTER TABLE mp_SitePersonalizationAllUsers ALTER COLUMN [PageSettings] varbinary(MAX) null
ALTER TABLE mp_SitePersonalizationPerUser ALTER COLUMN [PageSettings] varbinary(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_SitePersonalizationAllUsers_SetPageSettings] 

@SiteID		int,
@Path             		nvarchar(255),
@PageSettings    	varbinary(max),
@LastUpdate   		datetime

AS


BEGIN
    
    DECLARE @PathID UNIQUEIDENTIFIER
    SELECT @PathID = NULL
	DECLARE @SiteGuid uniqueidentifier
	SET @SiteGuid = (SELECT TOP 1 SiteGuid FROM mp_Sites WHERE SiteID = @SiteID)
    
    

    SELECT @PathID = u.PathID FROM mp_SitePaths u WHERE u.SiteID = @SiteID AND u.LoweredPath = LOWER(@Path)
    IF (@PathID IS NULL)
    BEGIN
        EXEC mp_SitePaths_CreatePath @SiteGuid, @SiteID, @Path, @PathID OUTPUT
    END

    IF (EXISTS(SELECT PathID FROM mp_SitePersonalizationAllUsers WHERE PathID = @PathID))
        	UPDATE mp_SitePersonalizationAllUsers 
	SET PageSettings = @PageSettings, LastUpdate = @LastUpdate 
	WHERE PathID = @PathID
    ELSE
        INSERT INTO mp_SitePersonalizationAllUsers(PathID, PageSettings, LastUpdate) 
	VALUES (@PathID, @PageSettings, @LastUpdate)
    RETURN 0
END

GO

ALTER PROCEDURE [dbo].[mp_SitePersonalizationPerUser_SetPageSettings]
 (
    @SiteID		int,
    @Path             	NVARCHAR(255),
    @UserID        	UNIQUEIDENTIFIER,
    @PageSettings     	varbinary(max),
    @LastUpdate   	DATETIME
)
AS
BEGIN
 
    DECLARE @PathID UNIQUEIDENTIFIER
    SELECT @PathID = NULL
   DECLARE @SiteGuid uniqueidentifier
	SET @SiteGuid = (SELECT TOP 1 SiteGuid FROM mp_Sites WHERE siteID = @SiteID)
    

    SELECT @PathID = u.PathID FROM mp_SitePaths u WHERE u.SiteID = @SiteID AND u.LoweredPath = LOWER(@Path)
    IF (@PathID IS NULL)
     BEGIN
        EXEC mp_SitePaths_CreatePath @SiteGuid, @SiteID, @Path, @PathID OUTPUT
     END

    IF (EXISTS(SELECT PathID FROM mp_SitePersonalizationPerUser WHERE UserID = @UserID AND PathID = @PathID))
        UPDATE mp_SitePersonalizationPerUser 
	SET PageSettings = @PageSettings, LastUpdate = @LastUpdate 
	WHERE UserID = @UserID AND PathID = @PathID
    ELSE
        INSERT INTO mp_SitePersonalizationPerUser
	(
			UserID, 
			PathID, 
			PageSettings, 
			LastUpdate
	)
	 VALUES (
			@UserID, 
			@PathID, 
			@PageSettings, 
			@LastUpdate)
    RETURN 0
END

GO

ALTER TABLE mp_Users ALTER COLUMN [Comment] NVARCHAR(MAX) null

GO

ALTER PROCEDURE [dbo].[mp_Users_SelectPage]

/*
Author:			Joe Audette
Created:		2004-10-3
Last Modified:	2007-07-14

*/

@PageNumber 			int,
@PageSize 			int,
@UserNameBeginsWith 		nvarchar(50),
@SiteID			int


AS
DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

--SET @PageLowerBound = @PageSize * @PageNumber
--SET @PageUpperBound = @PageLowerBound + @PageSize + 1


CREATE TABLE #PageIndexForUsers 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
	UserName nvarchar(50) COLLATE DATABASE_DEFAULT,
	LoginName nvarchar(50) COLLATE DATABASE_DEFAULT
)	


 IF @UserNameBeginsWith IS NULL OR @UserNameBeginsWith = ''
	BEGIN
	    	INSERT INTO 	#PageIndexForUsers (UserName, LoginName)

	    	SELECT 	[Name], LoginName
		FROM 		mp_Users 
		WHERE 	ProfileApproved = 1
				 AND DisplayInMemberList = 1  
				AND SiteID = @SiteID
				AND IsDeleted = 0
		ORDER BY 	[Name]
	END
ELSE
	BEGIN
	    	INSERT INTO 	#PageIndexForUsers (UserName, LoginName)

	    	SELECT 	[Name] , LoginName
		FROM 		mp_Users 
		WHERE 	ProfileApproved = 1 
				AND DisplayInMemberList = 1  
				AND SiteID = @SiteID
				AND IsDeleted = 0
				AND [Name]  LIKE @UserNameBeginsWith + '%' 
		ORDER BY 	[Name]

	END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndexForUsers)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1


SELECT		*,
			@TotalPages AS TotalPages

FROM			mp_Users u

JOIN			#PageIndexForUsers p
ON			u.LoginName = p.LoginName

WHERE 		u.ProfileApproved = 1 
			AND u.SiteID = @SiteID
			AND u.IsDeleted = 0
			AND p.IndexID > @PageLowerBound 
			AND p.IndexID < @PageUpperBound

ORDER BY		p.IndexID

DROP TABLE #PageIndexForUsers

GO

ALTER PROCEDURE [dbo].[mp_Users_Update]

/*
Author:			Joe Audette
Created:		2004-09-30
Last Modified:	2010-07-02

*/

    
@UserID        			int,   
@Name				nvarchar(100),
@LoginName			nvarchar(50),
@Email           			nvarchar(100),   
@Password    			nvarchar(1000),
@Gender			nchar(1),
@ProfileApproved		bit,
@ApprovedForForums		bit,
@Trusted			bit,
@DisplayInMemberList		bit,
@WebSiteURL			nvarchar(100),
@Country			nvarchar(100),
@State				nvarchar(100),
@Occupation			nvarchar(100),
@Interests			nvarchar(100),
@MSN				nvarchar(50),
@Yahoo			nvarchar(50),
@AIM				nvarchar(50),
@ICQ				nvarchar(50),
@AvatarUrl			nvarchar(255),
@Signature			nvarchar(255),
@Skin				nvarchar(100),
@LoweredEmail		nvarchar(100),
@PasswordQuestion		nvarchar(255),
@PasswordAnswer		nvarchar(255),
@Comment		nvarchar(max),
@TimeOffsetHours	int,
@OpenIDURI			nvarchar(255),
@WindowsLiveID			nvarchar(255),
@MustChangePwd bit,
@FirstName     	nvarchar(100),
@LastName     	nvarchar(100),
@TimeZoneId     	nvarchar(32),
@EditorPreference nvarchar(100),
@NewEmail nvarchar(100),
@EmailChangeGuid	uniqueidentifier


AS
UPDATE		mp_Users

SET			[Name] = @Name,
			LoginName = @LoginName,
			Email = @Email,
    			[Pwd] = @Password,
    			MustChangePwd = @MustChangePwd,
			Gender = @Gender,
			ProfileApproved = @ProfileApproved,
			ApprovedForForums = @ApprovedForForums,
			Trusted = @Trusted,
			DisplayInMemberList = @DisplayInMemberList,
			WebSiteURL = @WebSiteURL,
			Country = @Country,
			[State] = @State,
			Occupation = @Occupation,
			Interests = @Interests,
			MSN = @MSN,
			Yahoo = @Yahoo,
			AIM = @AIM,
			ICQ = @ICQ,
			AvatarUrl = @AvatarUrl,
			[Signature] = @Signature,
			Skin = @Skin,
			LoweredEmail = @LoweredEmail,
			PasswordQuestion = @PasswordQuestion,
			PasswordAnswer = @PasswordAnswer,
			Comment = @Comment,
			TimeOffsetHours = @TimeOffsetHours,
			OpenIDURI = @OpenIDURI,
			WindowsLiveID = @WindowsLiveID,
			FirstName = @FirstName,
			LastName = @LastName,
			TimeZoneId = @TimeZoneId,
			EditorPreference = @EditorPreference,
			NewEmail = @NewEmail,
			EmailChangeGuid = @EmailChangeGuid
			
WHERE		UserID = @UserID



GO

