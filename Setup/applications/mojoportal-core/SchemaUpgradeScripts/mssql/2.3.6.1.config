INSERT INTO [mp_SiteSettingsExDef]([KeyName],[DefaultValue],[GroupName],[SortOrder]) 
VALUES('RequirePasswordChangeOnResetRecover','false','Settings', 100)

INSERT INTO [mp_SiteSettingsExDef]([KeyName],[DefaultValue],[GroupName],[SortOrder]) 
VALUES('EmailAdressesForUserApprovalNotification','','Settings', 100)

INSERT INTO [mp_SiteSettingsExDef]([KeyName],[DefaultValue],[GroupName],[SortOrder]) 
VALUES('RegistrationAgreement','','Settings', 100)

GO



CREATE PROCEDURE [dbo].[mp_Users_CountNotApproved]

/*
Author:			Joe Audette
Created:		2011-01-17
Last Modified:	2011-01-17

*/

@SiteID		int

AS

SELECT  	COUNT(*)

FROM		mp_Users

WHERE	SiteID = @SiteID
AND		ApprovedForForums = 0


GO

CREATE PROCEDURE [dbo].[mp_Users_SelectNotApprovedPage]

/*
Author:			Joe Audette
Created:		2011-01-17
Last Modified:	2011-01-17

*/

@SiteID			int,
@PageNumber 			int,
@PageSize 			int



AS
DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1


CREATE TABLE #PageIndexForUsers 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
	UserID int
)	


 BEGIN
	    INSERT INTO 	#PageIndexForUsers (UserID)

	    SELECT 	UserID
		FROM 		mp_Users 
		WHERE 	
				SiteID = 1
				AND ApprovedForForums = 0
				
		ORDER BY 	[Name]

END


SELECT		u.*

FROM			mp_Users u

JOIN			#PageIndexForUsers p
ON			u.UserID = p.UserID

WHERE 		
			u.SiteID = 1
			AND p.IndexID > @PageLowerBound 
			AND p.IndexID < @PageUpperBound

ORDER BY		p.IndexID

DROP TABLE #PageIndexForUsers


GO

CREATE PROCEDURE [dbo].[mp_UserLocation_DeleteByUser]

/*
Author:   			Joe Audette
Created: 			2011-01-19
Last Modified: 		2011-01-19
*/

@UserGuid uniqueidentifier

AS

DELETE FROM [dbo].[mp_UserLocation]
WHERE
	[UserGuid] = @UserGuid


GO



CREATE PROCEDURE [dbo].[mp_UserProperties_DeleteByUser]

/*
Author:   			Joe Audette
Created: 			2011-01-19
Last Modified: 		2011-01-19
*/

@UserGuid uniqueidentifier

AS

DELETE FROM [dbo].[mp_UserProperties]
WHERE
	[UserGuid] = @UserGuid
	


GO




CREATE PROCEDURE [dbo].[mp_UserPages_DeleteByUser]

/*
Author:   			Joe Audette
Created: 			2011-01-19
Last Modified: 		2011-01-19
*/

@UserGuid uniqueidentifier

AS

DELETE FROM [dbo].[mp_UserPages]
WHERE
	[UserGuid] = @UserGuid


GO


ALTER PROCEDURE [dbo].[mp_Modules_GetGlobalCount]

/*
Author:   			Joe Audette
Created: 			2010-12-30
Last Modified: 		2011-01-21
*/

@SiteID			int,
@ModuleDefID	int,
@PageID int

AS

SELECT COUNT(*) 
FROM [dbo].[mp_Modules] m
JOIN			[dbo].mp_ModuleDefinitions md
ON				md.ModuleDefID = m.ModuleDefID

WHERE 			m.SiteID = @SiteID
				AND ((m.ModuleDefID = @ModuleDefID) OR (@ModuleDefID = -1))
				AND m.IsGlobal = 1
				AND m.ModuleID NOT IN (SELECT ModuleID FROM mp_PageModules WHERE PageID = @PageID)


GO

ALTER PROCEDURE [dbo].[mp_Modules_SelectGlobalPage]

/*
Author:			Joe Audette
Created:		2010-12-30
Last Modified:	2011-01-21

*/

@SiteID			int,
@ModuleDefID	int,
@PageID int,
@PageNumber 	int,
@PageSize 		int



AS
DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
	ModuleID int
)	


 
	BEGIN
	    	INSERT INTO 	#PageIndex (ModuleID)

	    	SELECT 			m.ModuleID 
			FROM 			[dbo].mp_Modules m
			JOIN			[dbo].mp_ModuleDefinitions md
			ON				md.ModuleDefID = m.ModuleDefID
			WHERE 			m.SiteID = @SiteID
							AND ((m.ModuleDefID = @ModuleDefID) OR (@ModuleDefID = -1))
							AND m.IsGlobal = 1
							AND m.ModuleID NOT IN (SELECT ModuleID FROM mp_PageModules WHERE PageID = @PageID)
				
			ORDER BY 		m.ModuleTitle

	END




SELECT		m.*,
			md.FeatureName,
			md.ControlSrc,
			md.ResourceFile,
			u.[Name] As CreatedBy,
			(SELECT COUNT(pm.PageID) FROM [dbo].mp_PageModules pm WHERE pm.ModuleID = m.ModuleID) AS UseCount

FROM			mp_Modules m

JOIN			mp_ModuleDefinitions md
ON				md.ModuleDefID = m.ModuleDefID

LEFT OUTER JOIN	mp_Users u
ON				m.CreatedByUserID = u.UserID

JOIN			#PageIndex p
ON				m.ModuleID = p.ModuleID

WHERE 		
			p.IndexID > @PageLowerBound 
			AND p.IndexID < @PageUpperBound

ORDER BY		p.IndexID

DROP TABLE #PageIndex


GO





