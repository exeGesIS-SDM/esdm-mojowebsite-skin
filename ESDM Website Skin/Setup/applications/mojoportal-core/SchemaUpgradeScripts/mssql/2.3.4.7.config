DROP PROCEDURE [dbo].[mp_LetterSubscriber_Delete]
DROP PROCEDURE [dbo].[mp_LetterSubscriber_DeleteByLetter]
DROP PROCEDURE [dbo].[mp_LetterSubscriber_Insert]
DROP PROCEDURE [dbo].[mp_LetterSubscriber_SelectByLetter]
DROP PROCEDURE [dbo].[mp_LetterSubscriber_SelectByUser]
DROP PROCEDURE [dbo].[mp_LetterSubscriber_SelectOne]
DROP PROCEDURE [dbo].[mp_LetterSubscriber_SelectPage]
DROP PROCEDURE [dbo].[mp_LetterSubscriber_SelectUnsentByLetter]
DROP PROCEDURE [dbo].[mp_LetterSubscriber_CountByLetter]
DROP PROCEDURE [dbo].[mp_LetterSubscriberHx_Insert]

GO




ALTER PROCEDURE [dbo].[mp_AuthorizeNetLog_SelectPage]

-- Author:   			Joe Audette
-- Created: 			2008-03-10
-- Last Modified: 		2010-07-02

@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
RowGuid UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
RowGuid
)

SELECT
		[RowGuid]
		
FROM
		[dbo].[mp_AuthorizeNetLog]
		
-- WHERE

-- ORDER BY

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1

SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_AuthorizeNetLog] t1

JOIN			#PageIndex t2
ON			
		t1.[RowGuid] = t2.[RowGuid]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_BannedIPAddresses_SelectPage]

-- Author:   			Joe Audette
-- Created: 			2007-09-22
-- Last Modified: 		2010-07-02


@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
RowID Int
)

BEGIN

INSERT INTO #PageIndex ( 
RowID
)

SELECT
		[RowID]
		
FROM
		[dbo].[mp_BannedIPAddresses]
		
-- WHERE

ORDER BY	[BannedIP]

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1


SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_BannedIPAddresses] t1

JOIN			#PageIndex t2
ON			
		t1.[RowID] = t2.[RowID]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_GeoCountry_SelectPage]

-- Author:   			Joe Audette
-- Created: 			2007-02-17
-- Last Modified: 		2010-07-02


@PageNumber 			int,
@PageSize 			int

AS
DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
Guid UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
Guid
)

SELECT
		[Guid]
		
FROM
		[dbo].[mp_GeoCountry]
		
-- WHERE

ORDER BY [Name]

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1


SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_GeoCountry] t1

JOIN			#PageIndex t2
ON			
		t1.[Guid] = t2.[Guid]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_GeoZone_SelectPage]

-- Author:   			Joe Audette
-- Created: 			2007-02-16
-- Last Modified: 		2010-07-02


@PageNumber 			int,
@PageSize 			int

AS
DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
Guid UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
Guid
)

SELECT
		t1.[Guid]
		
FROM
		[dbo].[mp_GeoZone] t1

JOIN	mp_GeoCountry t3
ON		t1.CountryGuid = t3.Guid
		
-- WHERE

ORDER BY t3.[Name] asc, t1.[Name] asc

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1


SELECT
		t1.*,
		t3.[Name] As CountryName,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_GeoZone] t1

JOIN			#PageIndex t2
ON			
		t1.[Guid] = t2.[Guid]

JOIN	mp_GeoCountry t3
ON		t1.CountryGuid = t3.Guid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID
DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_GeoZone_SelectPageByCountry]

-- Author:   			Joe Audette
-- Created: 			2007-02-17
-- Last Modified: 		2010-07-02

@CountryGuid		uniqueidentifier,
@PageNumber 			int,
@PageSize 			int

AS
DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
Guid UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
Guid
)

SELECT
		t1.[Guid]
		
FROM
		[dbo].[mp_GeoZone] t1

JOIN	mp_GeoCountry t3
ON		t1.CountryGuid = t3.Guid
		
WHERE	t1.CountryGuid = @CountryGuid

ORDER BY t3.[Name] asc, t1.[Name] asc

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1


SELECT
		t1.*,
		t3.[Name] As CountryName,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_GeoZone] t1

JOIN			#PageIndex t2
ON			
		t1.[Guid] = t2.[Guid]

JOIN	mp_GeoCountry t3
ON		t1.CountryGuid = t3.Guid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

GO

ALTER PROCEDURE [dbo].[mp_Language_SelectPage]

-- Author:   			Joe Audette
-- Created: 			2007-02-17
-- Last Modified: 		2010-07-02

@PageNumber 			int,
@PageSize 			int

AS
DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
Guid UniqueIdentifier
)

BEGIN

INSERT INTO #PageIndex ( 
Guid
)

SELECT
		[Guid]
		
FROM
		[dbo].[mp_Language]
		
-- WHERE

ORDER BY  [Name]

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1


SELECT
		t1.*,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_Language] t1

JOIN			#PageIndex t2
ON			
		t1.[Guid] = t2.[Guid]
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO




