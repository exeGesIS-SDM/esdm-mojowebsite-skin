ALTER TABLE [dbo].mp_Blogs ADD
	ShowAuthorName bit NOT NULL DEFAULT 1 
GO

ALTER TABLE [dbo].mp_Blogs ADD
	ShowAuthorAvatar bit NOT NULL DEFAULT 1 
GO

ALTER TABLE [dbo].mp_Blogs ADD
	ShowAuthorBio bit NOT NULL DEFAULT 1 
GO

ALTER TABLE [dbo].mp_Blogs ADD
	IncludeInSearch bit NOT NULL DEFAULT 1 
GO

ALTER TABLE [dbo].mp_Blogs ADD
	IncludeInSiteMap bit NOT NULL DEFAULT 1 
GO




ALTER TABLE [dbo].mp_Blogs ADD
	UseBingMap bit NOT NULL DEFAULT 0 
GO

ALTER TABLE [dbo].mp_Blogs ADD
	MapHeight nvarchar(10) NOT NULL DEFAULT '300' 
GO

ALTER TABLE [dbo].mp_Blogs ADD
	MapWidth nvarchar(10) NOT NULL DEFAULT '500' 
GO

ALTER TABLE [dbo].mp_Blogs ADD
	ShowMapOptions bit NOT NULL DEFAULT 0 
GO

ALTER TABLE [dbo].mp_Blogs ADD
	ShowZoomTool bit NOT NULL DEFAULT 0 
GO

ALTER TABLE [dbo].mp_Blogs ADD
	ShowLocationInfo bit NOT NULL DEFAULT 0 
GO

ALTER TABLE [dbo].mp_Blogs ADD
	UseDrivingDirections bit NOT NULL DEFAULT 0 
GO

ALTER TABLE [dbo].mp_Blogs ADD
	MapType nvarchar(20) NOT NULL DEFAULT 'G_SATELLITE_MAP'
GO

ALTER TABLE [dbo].mp_Blogs ADD
	MapZoom int NOT NULL DEFAULT 13 
GO

ALTER TABLE [dbo].mp_Blogs ADD
	ShowDownloadLink bit NOT NULL DEFAULT 0 
GO


ALTER PROCEDURE [dbo].[mp_Blog_Insert]

/*
Author:			Joe Audette
Last Modified:	2012-12-05

*/

@BlogGuid	uniqueidentifier,
@ModuleGuid	uniqueidentifier,
@ModuleID       		int,
@UserName       	nvarchar(100),
@Heading         		nvarchar(255),
@Abstract	    	nvarchar(max),
@Description    		nvarchar(max),
@Location    		nvarchar(max),
@StartDate      		datetime,
@IsInNewsletter 	bit,
@IncludeInFeed		bit,
@AllowCommentsForDays	int,
@UserGuid	uniqueidentifier,
@CreatedDate	datetime,
@ItemUrl	nvarchar(255),
@MetaKeywords	nvarchar(255),
@MetaDescription	nvarchar(255),
@CompiledMeta    		nvarchar(max),
@IsPublished			bit,
@SubTitle nvarchar(500),
@EndDate datetime,
@Approved bit,
@ApprovedBy uniqueidentifier,
@ApprovedDate datetime,
@ShowAuthorName bit,
@ShowAuthorAvatar bit,
@ShowAuthorBio bit,
@IncludeInSearch bit,
@UseBingMap bit,
@MapHeight nvarchar(10),
@MapWidth nvarchar(10),
@ShowMapOptions bit,
@ShowZoomTool bit,
@ShowLocationInfo bit,
@UseDrivingDirections bit,
@MapType nvarchar(20),
@MapZoom int,
@ShowDownloadLink bit,
@IncludeInSiteMap bit,


@ItemID         		int OUTPUT

AS

INSERT INTO 		mp_Blogs
(
			BlogGuid,
			ModuleGuid,
    			ModuleID,
    			CreatedByUser,
    			CreatedDate,
    			Heading,
    			Abstract,
			[Description],
			Location,
			StartDate,
			IsInNewsletter,
			IncludeInFeed,
			AllowCommentsForDays,
			UserGuid,
			LastModUserGuid,
			LastModUtc,
			ItemUrl,
			MetaKeywords,
			MetaDescription,
			CompiledMeta,
			IsPublished,
			SubTitle,
			EndDate,
			Approved,
			ApprovedBy,
			ApprovedDate,
			ShowAuthorName,
			ShowAuthorAvatar,
			ShowAuthorBio,
			IncludeInSearch,
			UseBingMap,
			MapHeight,
			MapWidth,
			ShowMapOptions,
			ShowZoomTool,
			ShowLocationInfo,
			UseDrivingDirections,
			MapType,
			MapZoom,
			ShowDownloadLink,
			IncludeInSiteMap
		
)

VALUES
(
			@BlogGuid,
			@ModuleGuid,
    		@ModuleID,
    		@UserName,
    		@CreatedDate,
    		@Heading,
    		@Abstract,
    		@Description,
			@Location,
    		@StartDate,
    		@IsInNewsletter,
		@IncludeInFeed,
			@AllowCommentsForDays,
			@UserGuid,
			@UserGuid,
			@CreatedDate,
			@ItemUrl,
			@MetaKeywords,
			@MetaDescription,
			@CompiledMeta,
			@IsPublished,
			@SubTitle,
			@EndDate,
			@Approved,
			@ApprovedBy,
			@ApprovedDate,
			@ShowAuthorName,
			@ShowAuthorAvatar,
			@ShowAuthorBio,
			@IncludeInSearch,
			@UseBingMap,
			@MapHeight,
			@MapWidth,
			@ShowMapOptions,
			@ShowZoomTool,
			@ShowLocationInfo,
			@UseDrivingDirections,
			@MapType,
			@MapZoom,
			@ShowDownloadLink,
			@IncludeInSiteMap
    		
)

SELECT

    @ItemID = @@Identity


IF EXISTS(SELECT ModuleID FROM mp_BlogStats WHERE ModuleID = @ModuleID)
	BEGIN
		UPDATE mp_BlogStats
		SET 	EntryCount = EntryCount + 1
		WHERE ModuleID = @ModuleID

	END
ELSE
	BEGIN
		INSERT INTO mp_BlogStats(ModuleGuid, ModuleID, EntryCount)
		VALUES (@ModuleGuid, @ModuleID, 1)


	END



GO

ALTER PROCEDURE [dbo].[mp_Blog_Update]

/*
Author:			Joe Audette
Last Modified:		2012-12-05

*/

@ItemID         		int,
@ModuleID       		int,
@UserName       	nvarchar(100),
@Heading          		nvarchar(255),
@Abstract       		nvarchar(max),
@Description    		nvarchar(max),
@StartDate      		datetime,
@IsInNewsletter 	bit,
@IncludeInFeed		bit,
@AllowCommentsForDays	int,
@Location nvarchar(max),
@LastModUserGuid	uniqueidentifier,
@LastModUtc	datetime,
@ItemUrl	nvarchar(255),
@MetaKeywords	nvarchar(255),
@MetaDescription	nvarchar(255),
@CompiledMeta    		nvarchar(max),
@IsPublished			bit,
@SubTitle nvarchar(500),
@EndDate datetime,
@Approved bit,
@ApprovedBy uniqueidentifier,
@ApprovedDate datetime,
@ShowAuthorName bit,
@ShowAuthorAvatar bit,
@ShowAuthorBio bit,
@IncludeInSearch bit,
@UseBingMap bit,
@MapHeight nvarchar(10),
@MapWidth nvarchar(10),
@ShowMapOptions bit,
@ShowZoomTool bit,
@ShowLocationInfo bit,
@UseDrivingDirections bit,
@MapType nvarchar(20),
@MapZoom int,
@ShowDownloadLink bit,
@IncludeInSiteMap bit
  
AS

UPDATE mp_Blogs

SET 

		ModuleID = @ModuleID,
		CreatedByUser = @UserName,
		Heading =@Heading ,
		[Abstract] =@Abstract,
		[Description] = @Description,
		StartDate = @StartDate,
		IsInNewsletter = @IsInNewsletter,
		IncludeInFeed = @IncludeInFeed,
		AllowCommentsForDays = @AllowCommentsForDays,
		Location = @Location,
		LastModUserGuid = @LastModUserGuid,
		LastModUtc = @LastModUtc,
		ItemUrl = @ItemUrl,
		MetaKeywords = @MetaKeywords,
		MetaDescription = @MetaDescription,
		CompiledMeta = @CompiledMeta,
		IsPublished = @IsPublished,
		SubTitle = @SubTitle,
		EndDate = @EndDate,
		Approved = @Approved,
		ApprovedBy = @ApprovedBy,
		ApprovedDate = @ApprovedDate,
		ShowAuthorName = @ShowAuthorName,
		ShowAuthorAvatar = @ShowAuthorAvatar,
		ShowAuthorBio = @ShowAuthorBio,
		IncludeInSearch = @IncludeInSearch,
		UseBingMap = @UseBingMap,
		MapHeight = @MapHeight,
		MapWidth = @MapWidth,
		ShowMapOptions = @ShowMapOptions,
		ShowZoomTool = @ShowZoomTool,
		ShowLocationInfo = @ShowLocationInfo,
		UseDrivingDirections = @UseDrivingDirections,
		MapType = @MapType,
		MapZoom = @MapZoom,
		ShowDownloadLink = @ShowDownloadLink,
		IncludeInSiteMap = @IncludeInSiteMap
		
WHERE 
		ItemID = @ItemID



GO


ALTER PROCEDURE [dbo].[mp_Blog_SelectForSiteMap]

/*
Author:		Joe Audette
Created:	2008-05-15
Last Modified:	2012-12-06

*/
    
@SiteID	int,
@CurrentUtcDateTime datetime

AS


SELECT		
			b.ItemUrl,
			b.LastModUtc
			

FROM        		[dbo].mp_Blogs b

JOIN		[dbo].mp_Modules m
ON			b.ModuleID = m.ModuleID

WHERE
				m.SiteID = @SiteID
    			AND b.StartDate <= @CurrentUtcDateTime
    			AND (b.EndDate IS NULL OR b.EndDate > @CurrentUtcDateTime)
    			AND b.IsPublished = 1
				AND b.IncludeInSiteMap = 1
				AND b.ItemUrl <> ''
				AND b.ItemUrl IS NOT NULL

ORDER BY
   			b.StartDate DESC



GO

ALTER PROCEDURE [dbo].[mp_Blogs_SelectPageOfDrafts]

-- Author:   			Joe Audette
-- Created: 			2012-11-13
-- Last Modified: 		2012-12-06

@ModuleID int,
@UserGuid uniqueidentifier,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
(ModuleID = @ModuleID)  
AND (@UserGuid = '00000000-0000-0000-0000-000000000000' OR UserGuid  = @UserGuid)
and ((StartDate > @CurrentTime) OR (IsPublished = 0))

ORDER BY

	StartDate DESC

END


SELECT
		b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.SubTitle,
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.IsPublished,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			b.ItemUrl,
			
			b.ShowAuthorName,
			b.ShowAuthorAvatar,
			b.ShowAuthorBio,
			b.UseBingMap,
			b.MapHeight,
			b.MapWidth,
			b.ShowMapOptions,
			b.ShowZoomTool,
			b.ShowLocationInfo,
			b.UseDrivingDirections,
			b.MapType,
			b.MapZoom,
			b.ShowDownloadLink,
			
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount,
			COALESCE(u.UserID, -1) AS UserID,
			u.[Name],
			u.[LoginName],
			u.FirstName,
			u.LastName,
			u.Email,
			u.AvatarUrl,
			u.AuthorBio
		
FROM
		[dbo].[mp_Blogs] b

JOIN			#PageIndex t2
ON			
		b.[ItemID] = t2.[ItemID]
		
LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex



GO

ALTER PROCEDURE [dbo].[mp_Blog_SelectPageByCategory]

/*
Author:			Joe Audette
Created:		2012-04-13
Last Modified:	2012-12-06

*/



@ModuleID 		int,
@CategoryID		int,
@CurrentTime datetime,
@PageNumber int,
@PageSize int


AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]

WHERE 	ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentTime
		AND (EndDate IS NULL OR EndDate > @CurrentTime)
		AND ItemID IN (SELECT ItemID FROM mp_BlogItemCategories WHERE CategoryID = @CategoryID)


ORDER BY	 StartDate DESC

END

SELECT
		b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.SubTitle,
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			b.ItemUrl,
			
			b.ShowAuthorName,
			b.ShowAuthorAvatar,
			b.ShowAuthorBio,
			b.UseBingMap,
			b.MapHeight,
			b.MapWidth,
			b.ShowMapOptions,
			b.ShowZoomTool,
			b.ShowLocationInfo,
			b.UseDrivingDirections,
			b.MapType,
			b.MapZoom,
			b.ShowDownloadLink,
			
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount,
			COALESCE(u.UserID, -1) AS UserID,
			u.[Name],
			u.FirstName,
			u.LastName,
			u.[LoginName],
			u.Email,
			u.AvatarUrl,
			u.AuthorBio
		
FROM
		[dbo].[mp_Blogs] b

JOIN			#PageIndex t2
ON			
		b.[ItemID] = t2.[ItemID]
		
LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex






GO

ALTER PROCEDURE [dbo].[mp_Blog_SelectPageByMonth]

-- Author:   			Joe Audette
-- Created: 			2012-04-13
-- Last Modified: 		2012-12-06

@Month int,
@Year int,
@ModuleID int,
@CurrentDate datetime,
@PageNumber int,
@PageSize int


AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
	ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentDate
		AND (EndDate IS NULL OR EndDate > @CurrentDate)
		AND Month(StartDate)  = @Month 
		AND Year(StartDate)  = @Year


ORDER BY	 StartDate DESC

END

SELECT
		b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.SubTitle,
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			b.ItemUrl,
			
			b.ShowAuthorName,
			b.ShowAuthorAvatar,
			b.ShowAuthorBio,
			b.UseBingMap,
			b.MapHeight,
			b.MapWidth,
			b.ShowMapOptions,
			b.ShowZoomTool,
			b.ShowLocationInfo,
			b.UseDrivingDirections,
			b.MapType,
			b.MapZoom,
			b.ShowDownloadLink,
			
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount,
			COALESCE(u.UserID, -1) AS UserID,
			u.[Name],
			u.FirstName,
			u.LastName,
			u.[LoginName],
			u.Email,
			u.AvatarUrl,
			u.AuthorBio
		
FROM
		[dbo].[mp_Blogs] b

JOIN			#PageIndex t2
ON			
		b.[ItemID] = t2.[ItemID]
		
LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex






GO

ALTER PROCEDURE [dbo].[mp_Blog_SelectPageByMonthPersian]

-- Author:   			Joe Audette
-- Created: 			2012-04-13
-- Last Modified: 		2012-12-06

@Month int,
@Year int,
@ModuleID int,
@CurrentDate datetime,
@PageNumber int,
@PageSize int


AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
	ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentDate
		AND (EndDate IS NULL OR EndDate > @CurrentDate)
		AND [dbo].PersianMonth(StartDate)  = @Month 
		AND [dbo].PersianYear(StartDate)  = @Year


ORDER BY	 StartDate DESC

END

SELECT
		b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.SubTitle,
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			b.ItemUrl,
			
			b.ShowAuthorName,
			b.ShowAuthorAvatar,
			b.ShowAuthorBio,
			b.UseBingMap,
			b.MapHeight,
			b.MapWidth,
			b.ShowMapOptions,
			b.ShowZoomTool,
			b.ShowLocationInfo,
			b.UseDrivingDirections,
			b.MapType,
			b.MapZoom,
			b.ShowDownloadLink,
			
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount,
			u.[Name],
			u.[LoginName],
			u.Email
		
FROM
		[dbo].[mp_Blogs] b

JOIN			#PageIndex t2
ON			
		b.[ItemID] = t2.[ItemID]
		
LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex





GO

ALTER PROCEDURE [dbo].[mp_Blogs_SelectPage]

-- Author:   			Joe Audette
-- Created: 			2010-01-05
-- Last Modified: 		2012-12-06

@ModuleID int,
@BeginDate datetime,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
(ModuleID = @ModuleID)  
    			and (@BeginDate >= StartDate)
    			and IsPublished = 1
    			and StartDate <= @CurrentTime
    			AND (EndDate IS NULL OR EndDate > @CurrentTime)

ORDER BY

	StartDate DESC

END


SELECT
		b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.SubTitle,
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			b.ItemUrl,
			
			b.ShowAuthorName,
			b.ShowAuthorAvatar,
			b.ShowAuthorBio,
			b.UseBingMap,
			b.MapHeight,
			b.MapWidth,
			b.ShowMapOptions,
			b.ShowZoomTool,
			b.ShowLocationInfo,
			b.UseDrivingDirections,
			b.MapType,
			b.MapZoom,
			b.ShowDownloadLink,
			
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount,
			COALESCE(u.UserID, -1) AS UserID,
			u.[Name],
			u.[LoginName],
			u.FirstName,
			u.LastName,
			u.Email,
			u.AvatarUrl,
			u.AuthorBio
		
FROM
		[dbo].[mp_Blogs] b

JOIN			#PageIndex t2
ON			
		b.[ItemID] = t2.[ItemID]
		
LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex





GO

ALTER PROCEDURE [dbo].[mp_Blogs_SelectClosed]

-- Author:   			Joe Audette
-- Created: 			2012-11-11
-- Last Modified: 		2012-12-06

@ModuleID int,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
(ModuleID = @ModuleID)  
    			AND EndDate < @CurrentTime

ORDER BY

	StartDate DESC

END


SELECT
		b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.SubTitle,
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.EndDate,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			b.ItemUrl,
			
			b.ShowAuthorName,
			b.ShowAuthorAvatar,
			b.ShowAuthorBio,
			b.UseBingMap,
			b.MapHeight,
			b.MapWidth,
			b.ShowMapOptions,
			b.ShowZoomTool,
			b.ShowLocationInfo,
			b.UseDrivingDirections,
			b.MapType,
			b.MapZoom,
			b.ShowDownloadLink,
			
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount,
			COALESCE(u.UserID, -1) AS UserID,
			u.[Name],
			u.[LoginName],
			u.FirstName,
			u.LastName,
			u.Email,
			u.AvatarUrl,
			u.AuthorBio
		
FROM
		[dbo].[mp_Blogs] b

JOIN			#PageIndex t2
ON			
		b.[ItemID] = t2.[ItemID]
		
LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex



GO

ALTER PROCEDURE [dbo].[mp_Blogs_SelectAttachmentsForPage]

-- Author:   			Joe Audette
-- Created: 			2012-09-17
-- Last Modified: 		2012-12-06

@ModuleID int,
@BeginDate datetime,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
BlogGuid uniqueidentifier,
ShowDownloadLink bit
)

BEGIN

INSERT INTO #PageIndex ( 
BlogGuid, ShowDownloadLink
)

SELECT
		BlogGuid,
		ShowDownloadLink
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
(ModuleID = @ModuleID)  
    			and (@BeginDate >= StartDate)
    			and IsPublished = 1
    			and StartDate <= @CurrentTime
    			AND (EndDate IS NULL OR EndDate > @CurrentTime)

ORDER BY

	StartDate DESC

END


SELECT  bic.*,
t2.ShowDownloadLink
		
FROM
		[dbo].[mp_FileAttachment] bic



JOIN			#PageIndex t2
ON			
		bic.[ItemGuid] = t2.BlogGuid
		
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex


GO

ALTER PROCEDURE [dbo].[mp_Blogs_SelectAttachmentsForClosed]

-- Author:   			Joe Audette
-- Created: 			2012-11-11
-- Last Modified: 		2012-12-06

@ModuleID int,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
BlogGuid uniqueidentifier,
ShowDownloadLink bit
)

BEGIN

INSERT INTO #PageIndex ( 
BlogGuid, ShowDownloadLink
)

SELECT
		BlogGuid,
		ShowDownloadLink
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
(ModuleID = @ModuleID)  		
AND EndDate < @CurrentTime

ORDER BY

	StartDate DESC

END


SELECT  bic.*,
t2.ShowDownloadLink
		
FROM
		[dbo].[mp_FileAttachment] bic



JOIN			#PageIndex t2
ON			
		bic.[ItemGuid] = t2.BlogGuid
		
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex


GO

ALTER PROCEDURE [dbo].[mp_Blogs_SelectAttachmentsForPageByCategory]

-- Author:   			Joe Audette
-- Created: 			2012-09-17
-- Last Modified: 		2012-12-06

@ModuleID int,
@CategoryID		int,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
BlogGuid uniqueidentifier,
ShowDownloadLink bit
)

BEGIN

INSERT INTO #PageIndex ( 
BlogGuid, ShowDownloadLink
)

SELECT
		BlogGuid,
		ShowDownloadLink
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
(ModuleID = @ModuleID)  
    			and IsPublished = 1
    			and StartDate <= @CurrentTime
    			AND (EndDate IS NULL OR EndDate > @CurrentTime)
    			AND ItemID IN (SELECT ItemID FROM mp_BlogItemCategories WHERE CategoryID = @CategoryID)

ORDER BY

	StartDate DESC

END


SELECT  bic.*,
t2.ShowDownloadLink
		
FROM
		[dbo].[mp_FileAttachment] bic



JOIN			#PageIndex t2
ON			
		bic.[ItemGuid] = t2.[BlogGuid]
		
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO

ALTER PROCEDURE [dbo].[mp_Blogs_SelectAttachmentsForPageByMonth]

-- Author:   			Joe Audette
-- Created: 			2012-09-17
-- Last Modified: 		2012-11-10

@Month int,
@Year int,
@ModuleID int,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
BlogGuid uniqueidentifier,
ShowDownloadLink bit
)

BEGIN

INSERT INTO #PageIndex ( 
BlogGuid, ShowDownloadLink
)

SELECT
		BlogGuid,
		ShowDownloadLink
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentTime
		AND (EndDate IS NULL OR EndDate > @CurrentTime)
		AND Month(StartDate)  = @Month 
		AND Year(StartDate)  = @Year

ORDER BY

	StartDate DESC

END


SELECT  bic.*,
t2.ShowDownloadLink
		
FROM
		[dbo].[mp_FileAttachment] bic


JOIN			#PageIndex t2
ON			
		bic.[ItemGuid] = t2.[BlogGuid]
		
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex


GO

ALTER PROCEDURE [dbo].[mp_Blogs_SelectAttachmentsForPageByMonthPersian]

-- Author:   			Joe Audette
-- Created: 			2012-09-17
-- Last Modified: 		2012-12-06

@Month int,
@Year int,
@ModuleID int,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
BlogGuid uniqueidentifier,
ShowDownloadLink bit
)

BEGIN

INSERT INTO #PageIndex ( 
BlogGuid, ShowDownloadLink
)

SELECT
		BlogGuid,
		ShowDownloadLink
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentTime
		AND (EndDate IS NULL OR EndDate > @CurrentTime)
		AND [dbo].PersianMonth(StartDate)  = @Month 
		AND [dbo].PersianYear(StartDate)  = @Year

ORDER BY

	StartDate DESC

END


SELECT  bic.*,
t2.ShowDownloadLink
		
FROM
		[dbo].[mp_FileAttachment] bic



JOIN			#PageIndex t2
ON			
		bic.[ItemGuid] = t2.[BlogGuid]
		
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex


GO



