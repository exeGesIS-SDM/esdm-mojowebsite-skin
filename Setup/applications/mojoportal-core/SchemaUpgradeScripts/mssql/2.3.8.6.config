
SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[mp_TagVocabulary](
	[Guid] [uniqueidentifier] NOT NULL,
	[SiteGuid] [uniqueidentifier] NOT NULL,
	[FeatureGuid] [uniqueidentifier] NOT NULL,
	[ModuleGuid] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](255) NOT NULL,
	[Description] [nvarchar](max) NULL,
	[CreatedUtc] [datetime] NOT NULL,
	[CreatedBy] [uniqueidentifier] NOT NULL,
	[ModifiedUtc] [datetime] NOT NULL,
	[ModifiedBy] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_mp_TagVocab] PRIMARY KEY CLUSTERED 
(
	[Guid] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
) 
GO

CREATE NONCLUSTERED INDEX [IX_mp_TagVocName] ON [dbo].[mp_TagVocabulary] 
(
	[Name] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF)
GO

CREATE NONCLUSTERED INDEX [IX_mp_TagVoc_1] ON [dbo].[mp_TagVocabulary] 
(
	[ModuleGuid] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF)
GO

CREATE NONCLUSTERED INDEX [IX_mp_TagVoc_2] ON [dbo].[mp_TagVocabulary] 
(
	[FeatureGuid] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF)
GO

CREATE NONCLUSTERED INDEX [IX_mp_TagVoc_3] ON [dbo].[mp_TagVocabulary] 
(
	[SiteGuid] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF)
GO

ALTER TABLE [dbo].[mp_TagVocabulary] ADD  CONSTRAINT [DF_mp_TagVoc_Guid]  DEFAULT (newid()) FOR [Guid]
GO

ALTER TABLE [dbo].[mp_TagVocabulary] ADD  CONSTRAINT [DF_mp_TagVoc_CreatedUtc]  DEFAULT (getutcdate()) FOR [CreatedUtc]
GO

ALTER TABLE [dbo].mp_Tag ADD
	VocabularyGuid uniqueidentifier NULL 
GO

UPDATE mp_Tag
SET VocabularyGuid = '00000000-0000-0000-0000-000000000000'

GO

CREATE NONCLUSTERED INDEX [IX_mp_Tag_VocG] ON [dbo].[mp_Tag] 
(
	[VocabularyGuid] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF)
GO


CREATE PROCEDURE [dbo].mp_TagVocabulary_Insert

/*
Author:   			Joe Audette
Created: 			2012-05-29
Last Modified: 		2012-05-29
*/

@Guid uniqueidentifier,
@SiteGuid uniqueidentifier,
@FeatureGuid uniqueidentifier,
@ModuleGuid uniqueidentifier,
@Name nvarchar(255),
@Description nvarchar(max),
@CreatedUtc datetime,
@CreatedBy uniqueidentifier

	
AS

INSERT INTO 	[dbo].[mp_TagVocabulary] 
(
				[Guid],
				[SiteGuid],
				[FeatureGuid],
				[ModuleGuid],
				[Name],
				[Description],
				[CreatedUtc],
				[CreatedBy],
				[ModifiedUtc],
				[ModifiedBy]
) 

VALUES 
(
				@Guid,
				@SiteGuid,
				@FeatureGuid,
				@ModuleGuid,
				@Name,
				@Description,
				@CreatedUtc,
				@CreatedBy,
				@CreatedUtc,
				@CreatedBy
				
)


GO

CREATE PROCEDURE [dbo].mp_TagVocabulary_Update

/*
Author:   			Joe Audette
Created: 			2012-05-29
Last Modified: 		2012-05-29
*/
	
@Guid uniqueidentifier, 
@Name nvarchar(255), 
@Description nvarchar(max),  
@ModifiedUtc datetime, 
@ModifiedBy uniqueidentifier 


AS

UPDATE 		[dbo].[mp_TagVocabulary] 

SET
			
			[Name] = @Name,
			[Description] = @Description,
			[ModifiedUtc] = @ModifiedUtc,
			[ModifiedBy] = @ModifiedBy
			
WHERE
			[Guid] = @Guid

GO




CREATE PROCEDURE [dbo].mp_TagVocabulary_Delete

/*
Author:   			Joe Audette
Created: 			2012-05-29
Last Modified: 		2012-05-29
*/

@Guid uniqueidentifier

AS

DELETE FROM [dbo].[mp_TagVocabulary]
WHERE
	[Guid] = @Guid
GO

CREATE PROCEDURE [dbo].mp_TagVocabulary_SelectOne

/*
Author:   			Joe Audette
Created: 			2012-05-29
Last Modified: 		2012-05-29
*/

@Guid uniqueidentifier

AS


SELECT *
		
FROM
		[dbo].[mp_TagVocabulary]
		
WHERE
		[Guid] = @Guid

GO















ALTER PROCEDURE [dbo].[mp_Tag_Insert]

/*
Author:   			Joe Audette
Created: 			2011-10-31
Last Modified: 		2012-05-29
*/

@Guid uniqueidentifier,
@VocabularyGuid uniqueidentifier,
@SiteGuid uniqueidentifier,
@FeatureGuid uniqueidentifier,
@ModuleGuid uniqueidentifier,
@Tag nvarchar(255),
@CreatedUtc datetime,
@CreatedBy uniqueidentifier



	
AS

INSERT INTO 	[dbo].[mp_Tag] 
(
				[Guid],
				VocabularyGuid,
				[SiteGuid],
				[FeatureGuid],
				[ModuleGuid],
				[Tag],
				[CreatedUtc],
				[CreatedBy],
				[ModifiedUtc],
				[ModifiedBy],
				[ItemCount]
) 

VALUES 
(
				@Guid,
				@VocabularyGuid,
				@SiteGuid,
				@FeatureGuid,
				@ModuleGuid,
				@Tag,
				@CreatedUtc,
				@CreatedBy,
				@CreatedUtc,
				@CreatedBy,
				0
				
)



GO

ALTER PROCEDURE [dbo].[mp_Tag_Update]

/*
Author:   			Joe Audette
Created: 			2011-10-31
Last Modified: 		2012-05-29
*/
	
@Guid uniqueidentifier, 
@VocabularyGuid uniqueidentifier, 
@Tag nvarchar(255), 
@ModifiedUtc datetime, 
@ModifiedBy uniqueidentifier



AS

UPDATE 		[dbo].[mp_Tag] 

SET
			VocabularyGuid = @VocabularyGuid,
			[Tag] = @Tag,
			[ModifiedUtc] = @ModifiedUtc,
			[ModifiedBy] = @ModifiedBy
			
WHERE
			[Guid] = @Guid


GO











ALTER PROCEDURE [dbo].[mp_HtmlContent_SelectOne]

/*
Author:			Joe Audettte
Created:		2004-12-23
Last Modified:	2012-05-23

*/


@ItemID	int

AS

SELECT  	h.*,
			u1.[Name] AS CreatedByName,
			u1.FirstName AS CreatedByFirstName,
			u1.LastName AS CreatedByLastName,
			u1.Email AS CreatedByEmail,
			u2.[Name] AS LastModByName,
			u2.FirstName AS LastModByFirstName,
			u2.LastName AS LastModByLastName,
			u2.Email AS LastModByEmail

FROM		[dbo].mp_HtmlContent h

LEFT OUTER JOIN 
			[dbo].mp_Users u1
ON			h.UserGuid = u1.UserGuid

LEFT OUTER JOIN 
			[dbo].mp_Users u2
ON			h.LastModUserGuid = u2.UserGuid

WHERE	h.ItemID = @ItemID


GO

ALTER PROCEDURE [dbo].[mp_Users_CountByFirstLetter]

/*
Author:			Joe Audette
Created:		2006-12-07
Last Modified:	2012-05-25

*/

@SiteID		int,
@UserNameBeginsWith 		nvarchar(1)

AS
SELECT  	COUNT(*)

FROM		mp_Users

WHERE	SiteID = @SiteID
AND IsDeleted = 0
AND ProfileApproved = 1
AND (
	(LEFT([Name], 1) = @UserNameBeginsWith)
	OR @UserNameBeginsWith = ''
	)


GO

ALTER PROCEDURE [dbo].[mp_Users_SelectPage]

/*
Author:			Joe Audette
Created:		2004-10-3
Last Modified:	2012-05-25

*/

@PageNumber 			int,
@PageSize 			int,
@UserNameBeginsWith 		nvarchar(50),
@SiteID			int


AS
DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1


CREATE TABLE #PageIndexForUsers 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
	UserID int
	
)	


 IF @UserNameBeginsWith IS NULL OR @UserNameBeginsWith = ''
	BEGIN
	    	INSERT INTO 	#PageIndexForUsers (UserID)

	    	SELECT 	UserID
		FROM 		mp_Users 
		WHERE 	ProfileApproved = 1
				 AND DisplayInMemberList = 1  
				AND SiteID = @SiteID
				AND IsDeleted = 0
		ORDER BY 	[Name]
	END
ELSE
	BEGIN
	    	INSERT INTO 	#PageIndexForUsers (UserID)

	    	SELECT 	UserID
		FROM 		mp_Users 
		WHERE 	ProfileApproved = 1 
				AND DisplayInMemberList = 1  
				AND SiteID = @SiteID
				AND IsDeleted = 0
				AND [Name]  LIKE @UserNameBeginsWith + '%' 
		ORDER BY 	[Name]

	END



SELECT		*

FROM			mp_Users u

JOIN			#PageIndexForUsers p
ON			u.UserID = p.UserID

WHERE 		u.ProfileApproved = 1 
			AND u.SiteID = @SiteID
			AND u.IsDeleted = 0
			AND p.IndexID > @PageLowerBound 
			AND p.IndexID < @PageUpperBound

ORDER BY		p.IndexID

DROP TABLE #PageIndexForUsers



GO

CREATE PROCEDURE [dbo].[mp_Users_SelectPageByDateDesc]

/*
Author:			Joe Audette
Created:		2012-05-25
Last Modified:	2012-05-25

*/

@PageNumber 			int,
@PageSize 			int,
@UserNameBeginsWith 		nvarchar(50),
@SiteID			int


AS
DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1


CREATE TABLE #PageIndexForUsers 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
	UserID int
	
)	


 IF @UserNameBeginsWith IS NULL OR @UserNameBeginsWith = ''
	BEGIN
	    	INSERT INTO 	#PageIndexForUsers (UserID)

	    	SELECT 	UserID
		FROM 		mp_Users 
		WHERE 	ProfileApproved = 1
				 AND DisplayInMemberList = 1  
				AND SiteID = @SiteID
				AND IsDeleted = 0
		ORDER BY 	DateCreated DESC
	END
ELSE
	BEGIN
	    	INSERT INTO 	#PageIndexForUsers (UserID)

	    	SELECT 	UserID
		FROM 		mp_Users 
		WHERE 	ProfileApproved = 1 
				AND DisplayInMemberList = 1  
				AND SiteID = @SiteID
				AND IsDeleted = 0
				AND [Name]  LIKE @UserNameBeginsWith + '%' 
		ORDER BY 	DateCreated DESC

	END



SELECT		*

FROM			mp_Users u

JOIN			#PageIndexForUsers p
ON			u.UserID = p.UserID

WHERE 		u.ProfileApproved = 1 
			AND u.SiteID = @SiteID
			AND u.IsDeleted = 0
			AND p.IndexID > @PageLowerBound 
			AND p.IndexID < @PageUpperBound

ORDER BY		p.IndexID

DROP TABLE #PageIndexForUsers



GO

CREATE PROCEDURE [dbo].[mp_Users_SelectSearchPageByDateDesc]

/*
Author:			Joe Audette
Created:		2012-05-25
Last Modified:	2012-05-25

*/

@SiteID			int,
@SearchInput 		nvarchar(50),
@PageNumber 			int,
@PageSize 			int


AS
DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndexForUsers 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
	UserID int
)	


 IF @SearchInput IS NULL OR @SearchInput = ''
	BEGIN
	    	INSERT INTO 	#PageIndexForUsers (UserID)

	    	SELECT 	UserID
		FROM 		mp_Users 
		WHERE 	
				SiteID = @SiteID
				AND ProfileApproved = 1
				AND DisplayInMemberList = 1  
				AND IsDeleted = 0
				
		ORDER BY 	DateCreated DESC
	END
ELSE
	BEGIN
	    	INSERT INTO 	#PageIndexForUsers (UserID)

	    	SELECT 	UserID
		FROM 		mp_Users 
		WHERE 	
				SiteID = @SiteID
				AND ProfileApproved = 1
				AND DisplayInMemberList = 1  
				AND IsDeleted = 0
				
				AND (
				 ([Name]  LIKE '%' + @SearchInput + '%')
				OR ([LoginName]  LIKE '%' + @SearchInput + '%')
				)
				
				
		ORDER BY 	DateCreated DESC

	END



SELECT		*

FROM			mp_Users u

JOIN			#PageIndexForUsers p
ON			u.UserID = p.UserID

WHERE 		
			p.IndexID > @PageLowerBound 
			AND p.IndexID < @PageUpperBound

ORDER BY		p.IndexID

DROP TABLE #PageIndexForUsers



GO

CREATE PROCEDURE [dbo].[mp_Users_SelectAdminSearchPageByDateDesc]

/*
Author:			Joe Audette
Created:		2012-05-25
Last Modified:	2012-05-25

*/

@SiteID			int,
@SearchInput 		nvarchar(50),
@PageNumber 			int,
@PageSize 			int


AS
DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndexForUsers 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
	UserID int
)	


 IF @SearchInput IS NULL OR @SearchInput = ''
	BEGIN
	    	INSERT INTO 	#PageIndexForUsers (UserID)

	    	SELECT 	UserID
		FROM 		mp_Users 
		WHERE 	
				SiteID = @SiteID
				
		ORDER BY 	DateCreated DESC
	END
ELSE
	BEGIN
	    	INSERT INTO 	#PageIndexForUsers (UserID)

	    	SELECT 	UserID
		FROM 		mp_Users 
		WHERE 	
				SiteID = @SiteID
				
				AND (
				(Email LIKE '%' + @SearchInput + '%')
				OR ([Name]  LIKE '%' + @SearchInput + '%')
				OR ([LoginName]  LIKE '%' + @SearchInput + '%')
				OR ([FirstName]  LIKE '%' + @SearchInput + '%')
				OR ([LastName]  LIKE '%' + @SearchInput + '%')
				)
				
				
		ORDER BY DateCreated DESC

	END



SELECT		*

FROM			mp_Users u

JOIN			#PageIndexForUsers p
ON			u.UserID = p.UserID

WHERE 		
			p.IndexID > @PageLowerBound 
			AND p.IndexID < @PageUpperBound

ORDER BY		p.IndexID

DROP TABLE #PageIndexForUsers


GO

ALTER PROCEDURE [dbo].[mp_Users_CountForAdminSearch]

/*
Author:			Joe Audette
Created:		2010-02-03
Last Modified:	2012-05-25

*/

@SiteID		int,
@SearchInput 		nvarchar(50)

AS

SELECT  	COUNT(*)

FROM		mp_Users

WHERE	SiteID = @SiteID
AND (
		(Email LIKE '%' + @SearchInput + '%')
		OR ([Name]  LIKE '%' + @SearchInput + '%')
		OR ([LoginName]  LIKE '%' + @SearchInput + '%')
		OR ([FirstName]  LIKE '%' + @SearchInput + '%')
		OR ([LastName]  LIKE '%' + @SearchInput + '%')
	)


GO

ALTER PROCEDURE [dbo].[mp_Users_SelectAdminSearchPage]

/*
Author:			Joe Audette
Created:		2010-02-03
Last Modified:	2012-05-25

*/

@SiteID			int,
@SearchInput 		nvarchar(50),
@PageNumber 			int,
@PageSize 			int


AS
DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndexForUsers 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
	UserID int
)	


 IF @SearchInput IS NULL OR @SearchInput = ''
	BEGIN
	    	INSERT INTO 	#PageIndexForUsers (UserID)

	    	SELECT 	UserID
		FROM 		mp_Users 
		WHERE 	
				SiteID = @SiteID
				
		ORDER BY 	[Name]
	END
ELSE
	BEGIN
	    	INSERT INTO 	#PageIndexForUsers (UserID)

	    	SELECT 	UserID
		FROM 		mp_Users 
		WHERE 	
				SiteID = @SiteID
				
				AND (
				(Email LIKE '%' + @SearchInput + '%')
				OR ([Name]  LIKE '%' + @SearchInput + '%')
				OR ([LoginName]  LIKE '%' + @SearchInput + '%')
				OR ([FirstName]  LIKE '%' + @SearchInput + '%')
				OR ([LastName]  LIKE '%' + @SearchInput + '%')
				)
				
				
		ORDER BY 	[Name]

	END



SELECT		*

FROM			mp_Users u

JOIN			#PageIndexForUsers p
ON			u.UserID = p.UserID

WHERE 		
			p.IndexID > @PageLowerBound 
			AND p.IndexID < @PageUpperBound

ORDER BY		p.IndexID

DROP TABLE #PageIndexForUsers


GO

CREATE PROCEDURE [dbo].[mp_LetterInfoSelectUsersNotSubscribed]

/*
Author:   			Joe Audette
Created: 			2012-05-25
Last Modified: 		2012-05-25
*/

@SiteGuid uniqueidentifier,
@LetterInfoGuid uniqueidentifier

AS


SELECT	TOP 1000
	u.UserID,
	u.UserGuid
		
FROM
	[dbo].[mp_Users] u
		
		
WHERE
		u.SiteGuid = @SiteGuid
		AND u.IsDeleted = 0
		AND u.ProfileApproved = 1
		AND u.IsLockedOut = 0
		AND (u.RegisterConfirmGuid IS NULL OR u.RegisterConfirmGuid = '00000000-0000-0000-0000-000000000000')
		AND u.UserGuid NOT IN 
		(SELECT ls.UserGuid 
		FROM [dbo].[mp_LetterSubscribe] ls
		WHERE ls.LetterInfoGuid = @LetterInfoGuid
		)
		
ORDER BY u.UserID

GO


