

CREATE PROCEDURE [dbo].[mp_Blogs_SelectAttachmentsForPage]

-- Author:   			Joe Audette
-- Created: 			2012-09-17
-- Last Modified: 		2012-09-17

@ModuleID int,
@BeginDate datetime,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
BlogGuid uniqueidentifier
)

BEGIN

INSERT INTO #PageIndex ( 
BlogGuid
)

SELECT
		BlogGuid
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
(ModuleID = @ModuleID)  
    			and (@BeginDate >= StartDate)
    			and IsPublished = 1
    			and StartDate <= @CurrentTime

ORDER BY

	StartDate DESC

END


SELECT  *
		
FROM
		[dbo].[mp_FileAttachment] bic



JOIN			#PageIndex t2
ON			
		bic.[ItemGuid] = t2.BlogGuid
		
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex



GO

CREATE PROCEDURE [dbo].[mp_Blogs_SelectAttachmentsForPageByCategory]

-- Author:   			Joe Audette
-- Created: 			2012-09-17
-- Last Modified: 		2012-09-17

@ModuleID int,
@CategoryID		int,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
BlogGuid uniqueidentifier
)

BEGIN

INSERT INTO #PageIndex ( 
BlogGuid
)

SELECT
		BlogGuid
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
(ModuleID = @ModuleID)  
    			and IsPublished = 1
    			and StartDate <= @CurrentTime
    			AND ItemID IN (SELECT ItemID FROM mp_BlogItemCategories WHERE CategoryID = @CategoryID)

ORDER BY

	StartDate DESC

END


SELECT
		bic.*
		
FROM
		[dbo].[mp_FileAttachment] bic



JOIN			#PageIndex t2
ON			
		bic.[ItemGuid] = t2.[BlogGuid]
		
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex




GO

CREATE PROCEDURE [dbo].[mp_Blogs_SelectAttachmentsForPageByMonth]

-- Author:   			Joe Audette
-- Created: 			2012-09-17
-- Last Modified: 		2012-09-17

@Month int,
@Year int,
@ModuleID int,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
BlogGuid uniqueidentifier
)

BEGIN

INSERT INTO #PageIndex ( 
BlogGuid
)

SELECT
		BlogGuid
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentTime
		AND Month(StartDate)  = @Month 
		AND Year(StartDate)  = @Year

ORDER BY

	StartDate DESC

END


SELECT
		bic.*
		
FROM
		[dbo].[mp_FileAttachment] bic


JOIN			#PageIndex t2
ON			
		bic.[ItemGuid] = t2.[BlogGuid]
		
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex




GO

CREATE PROCEDURE [dbo].[mp_Blogs_SelectAttachmentsForPageByMonthPersian]

-- Author:   			Joe Audette
-- Created: 			2012-09-17
-- Last Modified: 		2012-09-17

@Month int,
@Year int,
@ModuleID int,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
BlogGuid uniqueidentifier
)

BEGIN

INSERT INTO #PageIndex ( 
BlogGuid
)

SELECT
		BlogGuid
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentTime
		AND [dbo].PersianMonth(StartDate)  = @Month 
		AND [dbo].PersianYear(StartDate)  = @Year

ORDER BY

	StartDate DESC

END


SELECT
		bic.*
		
FROM
		[dbo].[mp_FileAttachment] bic



JOIN			#PageIndex t2
ON			
		bic.[ItemGuid] = t2.[BlogGuid]
		
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex




GO


