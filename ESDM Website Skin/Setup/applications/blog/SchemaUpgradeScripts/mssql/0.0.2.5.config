CREATE PROCEDURE [dbo].[mp_Blog_SelectPageByMonth]

-- Author:   			Joe Audette
-- Created: 			2012-04-13
-- Last Modified: 		2012-04-13

@Month int,
@Year int,
@ModuleID int,
@CurrentDate datetime,
@PageNumber int,
@PageSize int


AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
	ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentDate
		AND Month(StartDate)  = @Month 
		AND Year(StartDate)  = @Year


ORDER BY	 StartDate DESC

END

SELECT
		b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			b.ItemUrl,
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount,
			u.[Name],
			u.[LoginName],
			u.Email
		
FROM
		[dbo].[mp_Blogs] b

JOIN			#PageIndex t2
ON			
		b.[ItemID] = t2.[ItemID]
		
LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex


GO

CREATE PROCEDURE [dbo].[mp_Blogs_GetCountByMonth]

/*
Author:   			Joe Audette
Created: 			2012-04-13
Last Modified: 		2012-04-13
*/

@Month int,
@Year int,
@ModuleID int,
@CurrentDate datetime

AS

SELECT COUNT(*) 
FROM [dbo].[mp_Blogs]
WHERE
ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentDate
		AND Month(StartDate)  = @Month 
		AND Year(StartDate)  = @Year


GO

CREATE PROCEDURE [dbo].[mp_Blog_SelectPageByMonthPersian]

-- Author:   			Joe Audette
-- Created: 			2012-04-13
-- Last Modified: 		2012-04-13

@Month int,
@Year int,
@ModuleID int,
@CurrentDate datetime,
@PageNumber int,
@PageSize int


AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
	ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentDate
		AND [dbo].PersianMonth(StartDate)  = @Month 
		AND [dbo].PersianYear(StartDate)  = @Year


ORDER BY	 StartDate DESC

END

SELECT
		b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			b.ItemUrl,
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount,
			u.[Name],
			u.[LoginName],
			u.Email
		
FROM
		[dbo].[mp_Blogs] b

JOIN			#PageIndex t2
ON			
		b.[ItemID] = t2.[ItemID]
		
LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex


GO

CREATE PROCEDURE [dbo].[mp_Blogs_GetCountByMonthPersian]

/*
Author:   			Joe Audette
Created: 			2012-04-13
Last Modified: 		2012-04-13
*/

@Month int,
@Year int,
@ModuleID int,
@CurrentDate datetime

AS

SELECT COUNT(*) 
FROM [dbo].[mp_Blogs]
WHERE
ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentDate
		AND dbo.PersianMonth(StartDate)  = @Month 
		AND dbo.PersianYear(StartDate)  = @Year


GO


CREATE PROCEDURE [dbo].[mp_Blogs_SelectCategoriesForPageByMonth]

-- Author:   			Joe Audette
-- Created: 			2012-04-15
-- Last Modified: 		2012-04-15

@Month int,
@Year int,
@ModuleID int,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentTime
		AND Month(StartDate)  = @Month 
		AND Year(StartDate)  = @Year

ORDER BY

	StartDate DESC

END


SELECT
		bic.[ID],
		bic.[ItemID],
		bic.[CategoryID],
		bc.Category
		
FROM
		[dbo].[mp_BlogItemCategories] bic

JOIN		mp_BlogCategories bc
ON		bc.CategoryID = bic.CategoryID

JOIN			#PageIndex t2
ON			
		bic.[ItemID] = t2.[ItemID]
		
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID, bc.Category

DROP TABLE #PageIndex



GO

CREATE PROCEDURE [dbo].[mp_Blogs_SelectCategoriesForPageByMonthPersian]

-- Author:   			Joe Audette
-- Created: 			2012-04-15
-- Last Modified: 		2012-04-15

@Month int,
@Year int,
@ModuleID int,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentTime
		AND [dbo].PersianMonth(StartDate)  = @Month 
		AND [dbo].PersianYear(StartDate)  = @Year

ORDER BY

	StartDate DESC

END


SELECT
		bic.[ID],
		bic.[ItemID],
		bic.[CategoryID],
		bc.Category
		
FROM
		[dbo].[mp_BlogItemCategories] bic

JOIN		mp_BlogCategories bc
ON		bc.CategoryID = bic.CategoryID

JOIN			#PageIndex t2
ON			
		bic.[ItemID] = t2.[ItemID]
		
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID, bc.Category

DROP TABLE #PageIndex



GO





CREATE PROCEDURE [dbo].[mp_Blogs_GetCountByCategory]

/*
Author:   			Joe Audette
Created: 			2012-04-13
Last Modified: 		2012-04-13
*/

@ModuleID int,
@CategoryID		int,
@CurrentTime datetime

AS

SELECT COUNT(*) 
FROM [dbo].[mp_Blogs]
WHERE
(ModuleID = @ModuleID)  
    			and IsPublished = 1
    			and StartDate <= @CurrentTime
    			AND ItemID IN (SELECT ItemID FROM mp_BlogItemCategories WHERE CategoryID = @CategoryID)


GO

CREATE PROCEDURE [dbo].[mp_Blog_SelectPageByCategory]

/*
Author:			Joe Audette
Created:		2012-04-13
Last Modified:	2012-04-13

*/



@ModuleID 		int,
@CategoryID		int,
@CurrentTime datetime,
@PageNumber int,
@PageSize int


AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]

WHERE 	ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentTime
		AND ItemID IN (SELECT ItemID FROM mp_BlogItemCategories WHERE CategoryID = @CategoryID)


ORDER BY	 StartDate DESC

END

SELECT
		b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			b.ItemUrl,
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount,
			u.[Name],
			u.[LoginName],
			u.Email
		
FROM
		[dbo].[mp_Blogs] b

JOIN			#PageIndex t2
ON			
		b.[ItemID] = t2.[ItemID]
		
LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex


GO


CREATE PROCEDURE [dbo].[mp_Blogs_SelectCategoriesForPageByCategory]

-- Author:   			Joe Audette
-- Created: 			2012-04-13
-- Last Modified: 		2012-04-13

@ModuleID int,
@CategoryID		int,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
(ModuleID = @ModuleID)  
    			and IsPublished = 1
    			and StartDate <= @CurrentTime
    			AND ItemID IN (SELECT ItemID FROM mp_BlogItemCategories WHERE CategoryID = @CategoryID)

ORDER BY

	StartDate DESC

END


SELECT
		bic.[ID],
		bic.[ItemID],
		bic.[CategoryID],
		bc.Category
		
FROM
		[dbo].[mp_BlogItemCategories] bic

JOIN		mp_BlogCategories bc
ON		bc.CategoryID = bic.CategoryID

JOIN			#PageIndex t2
ON			
		bic.[ItemID] = t2.[ItemID]
		
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID, bc.Category

DROP TABLE #PageIndex



GO

