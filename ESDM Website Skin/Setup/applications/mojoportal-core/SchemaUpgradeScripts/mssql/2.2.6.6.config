/****** Object:  StoredProcedure [dbo].[mp_ForumPosts_SelectByThread]    Script Date: 07/23/2008 15:21:41 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO


ALTER PROCEDURE [dbo].[mp_ForumPosts_SelectByThread]

/*
Author:				Joe Audette
Created:			2004-09-14
Last Modified:		2008-07-23

An approach to paging grids in the database, hopefully more efficient than bringing back a zillion rows and
paging with a DataGrid using viewstate

ThreadSequence is the integer order that postss were created within the thread

*/

@ThreadID			int,
@PageNumber			int

AS

DECLARE @PostsPerPage	int
--DECLARE @TotalPosts		int
DECLARE @CurrentPageMaxThreadSequence	int

DECLARE @BeginSequence int
DECLARE @EndSequence int



SELECT	@PostsPerPage = f.PostsPerPage
		--@TotalPosts = ft.TotalReplies

FROM		mp_ForumThreads ft

JOIN		mp_Forums f
ON		ft.ForumID = f.ItemID

WHERE	ft.ThreadID = @ThreadID

SET @CurrentPageMaxThreadSequence = (@PostsPerPage * @PageNumber) 
IF @CurrentPageMaxThreadSequence > @PostsPerPage
	BEGIN
		SET @BeginSequence = @CurrentPageMaxThreadSequence  - @PostsPerPage + 1
	END
ELSE
	BEGIN
		SET @BeginSequence = 1
	END

SET @EndSequence = @BeginSequence + @PostsPerPage  -1



SELECT	p.*,
		ft.ForumID,
		'MostRecentPostUser' = COALESCE(u.[Name],'Guest'),
		'StartedBy' = COALESCE(s.[Name],'Guest'),
		'PostAuthor' = COALESCE(up.[Name], 'Guest'),
		'PostAuthorTotalPosts' = COALESCE(up.TotalPosts, 0),
		'Trusted' = COALESCE(up.Trusted, 0),
		'PostAuthorAvatar' = up.AvatarUrl,
		'PostAuthorWebSiteUrl' = up.WebSiteURL,
		'PostAuthorSignature' = up.Signature


FROM		mp_ForumPosts p

JOIN		mp_ForumThreads ft
ON		p.ThreadID = ft.ThreadID

LEFT OUTER JOIN		mp_Users u
ON		ft.MostRecentPostUserID = u.UserID

LEFT OUTER JOIN		mp_Users s
ON		ft.StartedByUserID = s.UserID

LEFT OUTER JOIN		mp_Users up
ON		up.UserID = p.UserID

WHERE	ft.ThreadID = @ThreadID
		AND p.ThreadSequence >= @BeginSequence
		AND  p.ThreadSequence <= @EndSequence

ORDER BY	p.SortOrder, p.PostID


GO


ALTER TABLE [dbo].mp_Modules ADD
	HideFromUnAuth bit NOT NULL DEFAULT 0

GO

ALTER TABLE [dbo].mp_Modules ADD
	HideFromAuth bit NOT NULL DEFAULT 0

GO

SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

ALTER PROCEDURE [dbo].[mp_Modules_SelectForMyPage]

/*
Author:				Joe Audette
Created:			2006-05-21
Last Modified:		2008-07-24

*/

@SiteID		int


AS
SELECT  		m.ModuleID,
				m.SiteID,
				m.ModuleDefID,
				m.ModuleTitle,
				m.AllowMultipleInstancesOnMyPage,
				m.HideFromUnAuth,
				m.HideFromAuth,
				m.Icon As ModuleIcon,
				md.Icon As FeatureIcon,
				md.FeatureName
				
				
				
				
    
FROM
    			mp_Modules m
  
INNER JOIN
    			mp_ModuleDefinitions md
ON 			m.ModuleDefID = md.ModuleDefID


WHERE   
    			m.SiteID = @SiteID
				AND m.AvailableForMyPage = 1
		
    
ORDER BY
    			m.ModuleTitle

GO


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[mp_Modules_SelectByPage]

/*
Author:				Joe Audette
Created:			2004-12-26
Last Modified:		2008-07-24

*/

@PageID		int


AS
SELECT  		m.ModuleID,
				m.[Guid],
				m.FeatureGuid,
				m.SiteGuid,
				m.SiteID,
				m.HideFromUnAuth,
				m.HideFromAuth,
				pm.PageID,
				m.ModuleDefID,
				pm.ModuleOrder,
				pm.PaneName,
				m.ModuleTitle,
				m.AuthorizedEditRoles,
				m.CacheTime,
				m.ShowTitle,
				m.EditUserID,
				m.EditUserGuid,
				m.AvailableForMyPage,
				m.CreatedByUserID,
				m.CreatedDate,
				pm.PublishBeginDate,
				pm.PublishEndDate,
				md.ControlSrc,
				md.FeatureName
    
FROM
    			mp_Modules m
  
INNER JOIN
    			mp_ModuleDefinitions md
ON 			m.ModuleDefID = md.ModuleDefID

INNER JOIN		mp_PageModules pm
ON				m.ModuleID = pm.ModuleID
    
WHERE   
    			pm.PageID = @PageID
				AND pm.PublishBeginDate < GetutcDate()
				AND	(
					(pm.PublishEndDate IS NULL)
					OR
					(pm.PublishEndDate > GetutcDate())
					)
		
    
ORDER BY
    			pm.ModuleOrder

GO


SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

ALTER PROCEDURE [dbo].[mp_Modules_SelectOneByPage]

/*
Author:   			Joe Audette
Created: 			2004-12-26
Last Modified: 		2008-07-24

*/

@ModuleID int,
@PageID		int

AS
SELECT  		m.ModuleID,
				m.[Guid],
				m.FeatureGuid,
				m.SiteGuid,
				m.SiteID,
				m.HideFromUnAuth,
				m.HideFromAuth,
				pm.PageID,
				m.ModuleDefID,
				pm.ModuleOrder,
				pm.PaneName,
				m.ModuleTitle,
				m.AuthorizedEditRoles,
				m.CacheTime,
				m.ShowTitle,
				m.EditUserID,
				m.EditUserGuid,
				m.AvailableForMyPage,
				m.AllowMultipleInstancesOnMyPage,
				m.Icon,
				m.CreatedByUserID,
				m.CreatedDate,
				pm.PublishBeginDate,
				pm.PublishEndDate,
				md.ControlSrc
    
FROM
    			mp_Modules m
  
INNER JOIN
    			mp_ModuleDefinitions md
ON 			m.ModuleDefID = md.ModuleDefID

INNER JOIN		mp_PageModules pm
ON				m.ModuleID = pm.ModuleID
    
WHERE   
    			pm.PageID = @PageID
				AND pm.ModuleID = @ModuleID

GO


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[mp_Modules_Insert]

/*
Author:   			Joe Audette
Created: 			2004-12-26
Last Modified: 		2008-07-24

*/

@PageID int,
@SiteID		int,
@ModuleDefID int,
@ModuleOrder int,
@PaneName nvarchar(50),
@ModuleTitle nvarchar(255),
@AuthorizedEditRoles ntext,
@CacheTime int,
@ShowTitle bit,
@AvailableForMyPage	bit,
@CreatedByUserID	int,
@CreatedDate		datetime,
@AllowMultipleInstancesOnMyPage	bit,
@Icon	nvarchar(255),
@Guid	uniqueidentifier,
@FeatureGuid uniqueidentifier,
@SiteGuid	uniqueidentifier,
@HideFromAuth bit,
@HideFromUnAuth bit

	
AS
DECLARE @ModuleID int

INSERT INTO 	[dbo].[mp_Modules] 
(
				SiteID,
				SiteGuid,
				[ModuleDefID],
				[ModuleTitle],
				[AuthorizedEditRoles],
				[CacheTime],
				[ShowTitle],
				AvailableForMyPage,
				AllowMultipleInstancesOnMyPage,
				Icon,
				CreatedByUserID,
				CreatedDate,
				[Guid],
				FeatureGuid,
				HideFromAuth,
				HideFromUnAuth
) 

VALUES 
(
				@SiteID,
				@SiteGuid,
				@ModuleDefID,
				@ModuleTitle,
				@AuthorizedEditRoles,
				@CacheTime,
				@ShowTitle,
				@AvailableForMyPage,
				@AllowMultipleInstancesOnMyPage,
				@Icon,
				@CreatedByUserID,
				@CreatedDate,
				@Guid,
				@FeatureGuid,
				@HideFromAuth,
				@HideFromUnAuth
				
)
SELECT @ModuleID =  @@IDENTITY

IF @PageID > -1
BEGIN

DECLARE @PageGuid uniqueidentifier
SET @PageGuid = (SELECT TOP 1 PageGuid FROM mp_Pages WHERE PageID = @PageID)

INSERT INTO 	[dbo].[mp_PageModules] 
(
				[PageID],
				[ModuleID],
				[ModuleOrder],
				[PaneName],
				[PublishBeginDate],
				PageGuid,
				ModuleGuid
				
) 

VALUES 
(
				@PageID,
				@ModuleID,
				@ModuleOrder,
				@PaneName,
				@CreatedDate,
				@PageGuid,
				@Guid
				
				
)
END


SELECT @ModuleID

GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[mp_Modules_Update]

/*
Author:   			Joe Audette
Created: 			2004-12-26
Last Modified: 		2008-07-24

*/
	
@ModuleID int, 
@ModuleDefID int, 
@ModuleTitle nvarchar(255), 
@AuthorizedEditRoles ntext, 
@CacheTime int, 
@ShowTitle bit ,
@EditUserID	int,
@AvailableForMyPage	bit,
@AllowMultipleInstancesOnMyPage	bit,
@Icon	nvarchar(255),
@HideFromAuth bit,
@HideFromUnAuth bit


AS
UPDATE 		[dbo].[mp_Modules] 

SET
			
			[ModuleDefID] = @ModuleDefID,
			
			[ModuleTitle] = @ModuleTitle,
			[AuthorizedEditRoles] = @AuthorizedEditRoles,
			[CacheTime] = @CacheTime,
			[ShowTitle] = @ShowTitle,
			EditUserID = @EditUserID,
			AvailableForMyPage = @AvailableForMyPage,
			AllowMultipleInstancesOnMyPage = @AllowMultipleInstancesOnMyPage,
			Icon = @Icon,
			HideFromAuth = @HideFromAuth,
			HideFromUnAuth = @HideFromUnAuth
			
WHERE
			[ModuleID] = @ModuleID

GO









