
SET QUOTED_IDENTIFIER ON

GO

CREATE TABLE [dbo].[mp_Blogs](
	[ItemID] [int] IDENTITY(1,1) NOT NULL,
	[ModuleID] [int] NOT NULL,
	[CreatedByUser] [nvarchar](100) NULL,
	[CreatedDate] [datetime] NULL,
	[Title] [nvarchar](100) NULL,
	[StartDate] [datetime] NULL,
	[IsInNewsletter] [bit] NULL,
	[Description] [nvarchar](max) NULL,
	[CommentCount] [int] NOT NULL,
	[TrackBackCount] [int] NOT NULL,
	[Categories] [nvarchar](max) NULL,
	[IncludeInFeed] [bit] NOT NULL,
	[AllowCommentsForDays] [int] NOT NULL,
	[BlogGuid] [uniqueidentifier] NULL,
	[ModuleGuid] [uniqueidentifier] NULL,
	[Location] [nvarchar](max) NULL,
	[UserGuid] [uniqueidentifier] NULL,
	[LastModUserGuid] [uniqueidentifier] NULL,
	[LastModUtc] [datetime] NULL,
	[ItemUrl] [nvarchar](255) NULL,
	[Heading] [nvarchar](255) NULL,
	[MetaKeywords] [nvarchar](255) NULL,
	[MetaDescription] [nvarchar](255) NULL,
	[Abstract] [nvarchar](max) NULL,
	[CompiledMeta] [nvarchar](max) NULL,
	[IsPublished] [bit] NULL,
 CONSTRAINT [PK_mp_Blogs] PRIMARY KEY CLUSTERED 
(
	[ItemID] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)

GO

SET QUOTED_IDENTIFIER ON

GO

CREATE TABLE [dbo].[mp_BlogStats](
	[ModuleID] [int] NOT NULL,
	[EntryCount] [int] NOT NULL,
	[CommentCount] [int] NOT NULL,
	[TrackBackCount] [int] NOT NULL,
	[ModuleGuid] [uniqueidentifier] NULL,
 CONSTRAINT [PK_mp_BlogStats] PRIMARY KEY CLUSTERED 
(
	[ModuleID] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)

GO

SET QUOTED_IDENTIFIER ON

GO

CREATE TABLE [dbo].[mp_BlogCategories](
	[CategoryID] [int] IDENTITY(1,1) NOT NULL,
	[ModuleID] [int] NOT NULL,
	[Category] [nvarchar](255) NOT NULL,
 CONSTRAINT [PK_mp_BlogCategories] PRIMARY KEY CLUSTERED 
(
	[CategoryID] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)

GO

SET QUOTED_IDENTIFIER ON

GO

CREATE TABLE [dbo].[mp_BlogComments](
	[BlogCommentID] [int] IDENTITY(1,1) NOT NULL,
	[ModuleID] [int] NOT NULL,
	[ItemID] [int] NOT NULL,
	[Comment] [nvarchar](max) NOT NULL,
	[Title] [nvarchar](100) NULL,
	[Name] [nvarchar](100) NULL,
	[URL] [nvarchar](200) NULL,
	[DateCreated] [datetime] NOT NULL,
 CONSTRAINT [PK_mp_BlogComments] PRIMARY KEY CLUSTERED 
(
	[BlogCommentID] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)

GO

SET QUOTED_IDENTIFIER ON

GO

CREATE TABLE [dbo].[mp_BlogItemCategories](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ItemID] [int] NOT NULL,
	[CategoryID] [int] NOT NULL,
 CONSTRAINT [PK_mp_BlogItemCategories] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)

GO

SET QUOTED_IDENTIFIER OFF

GO
CREATE PROCEDURE [dbo].[mp_Blog_SelectArchiveByMonth_Persian]
(
	@ModuleID int,
	@CurrentTime datetime
)

AS

SELECT 	dbo.PersianMonth(StartDate) as [Month], 
		--DATENAME(month,StartDate) as [MonthName],
			dbo.PersianYear(StartDate) as [Year], 
		1 as Day, 
		Count(*) as [Count] 

FROM 		mp_Blogs
 
WHERE 	ModuleID = @ModuleID 
		AND IsPublished = 1
		AND StartDate <= @CurrentTime

GROUP BY 	dbo.PersianYear(StartDate), 
			dbo.PersianMonth(StartDate)-- ,
		--DATENAME(month,StartDate)

ORDER BY 	[Year] desc, [Month] desc

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_Blog_SelectByMonth_Persian]

(
	@Month int,
	@Year int,
	@ModuleID int,
	@CurrentDate datetime
)

AS

SELECT	b.*

		

FROM 		mp_Blogs b

WHERE 	b.ModuleID = @ModuleID
		AND b.IsPublished = 1
		AND b.StartDate <= @CurrentDate
		AND dbo.PersianMonth(b.StartDate)  = @Month 
		AND dbo.PersianYear(b.StartDate)  = @Year


ORDER BY	 b.StartDate DESC

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_Blog_Select]

/*
Author:		Joe Audette
Last Modified:	2010-01-05

*/
    
@ModuleID int,
@BeginDate datetime,
@CurrentTime datetime

AS
DECLARE @RowsToGet int

SET @RowsToGet = COALESCE((SELECT TOP 1 SettingValue FROM mp_ModuleSettings WHERE SettingName = 'BlogEntriesToShowSetting' AND ModuleID = @ModuleID),1)

SET rowcount @RowsToGet

SELECT		
			b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			b.ItemUrl,
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount,
			u.[Name],
			u.[LoginName],
			u.Email
			

FROM        		mp_Blogs b

LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid

WHERE
    			(b.ModuleID = @ModuleID)  
    			and (@BeginDate >= b.StartDate)
    			and b.IsPublished = 1
    			and b.StartDate <= @CurrentTime

ORDER BY
   			b.StartDate DESC

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_Blog_SelectOne]

/*
Author:			Joe Audette
Last Modified:		2010-01-05

*/

    
@ItemID int,
@CurrentTime datetime

AS

SELECT		b.*,
			(SELECT TOP 1 b2.ItemUrl
							FROM mp_Blogs b2
							WHERE b2.StartDate > b.StartDate
								AND b2.ItemUrl IS NOT NULL
								AND b2.ItemUrl <> ''
								AND b2.ModuleID = b.ModuleID
								AND b2.IsPublished = 1
								AND b2.StartDate <= @CurrentTime
							ORDER BY b2.StartDate) AS NextPost,
			(SELECT TOP 1 b2.Title
							FROM mp_Blogs b2
							WHERE b2.StartDate > b.StartDate
								AND b2.ItemUrl IS NOT NULL
								AND b2.ItemUrl <> ''
								AND b2.ModuleID = b.ModuleID
								AND b2.IsPublished = 1
								AND b2.StartDate <= @CurrentTime
							ORDER BY b2.StartDate) AS NextPostTitle,
			(SELECT TOP 1 b2.ItemUrl
							FROM mp_Blogs b2
							WHERE b2.StartDate < b.StartDate
								AND b2.ItemUrl IS NOT NULL
								AND b2.ItemUrl <> ''
								AND b2.ModuleID = b.ModuleID
								AND b2.IsPublished = 1
								AND b2.StartDate <= @CurrentTime
							ORDER BY b2.StartDate DESC) AS PreviousPost,
			(SELECT TOP 1 b2.Title
							FROM mp_Blogs b2
							WHERE b2.StartDate < b.StartDate
								AND b2.ItemUrl IS NOT NULL
								AND b2.ItemUrl <> ''
								AND b2.ModuleID = b.ModuleID
								AND b2.IsPublished = 1
								AND b2.StartDate <= @CurrentTime
				ORDER BY b2.StartDate DESC) AS PreviousPostTitle,
			u.[Name],
			u.[LoginName],
			u.Email
			
			
FROM			mp_Blogs b

LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid


WHERE   		(b.ItemID = @ItemID)

GO

SET QUOTED_IDENTIFIER OFF

GO
CREATE PROCEDURE [dbo].[mp_Blog_SelectByPage]

/*
Author:			Joe Audettte
Created:		2005-06-30
Last Modified:	2009-06-24

*/


@SiteID		int,
@PageID		int

AS
SELECT  	b.*,
		m.ModuleTitle,
		m.ViewRoles,
		md.FeatureName

FROM		mp_Blogs b

JOIN		mp_Modules m
ON		b.ModuleID = m.ModuleID

JOIN		mp_ModuleDefinitions md
ON		m.ModuleDefID = md.ModuleDefID

JOIN		mp_PageModules pm
ON			pm.ModuleID = m.ModuleID

JOIN		mp_Pages p
ON		p.PageID = pm.PageID

WHERE	p.SiteID = @SiteID
		AND pm.PageID = @PageID

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_Blog_DeleteBySite]
(
    @SiteID int
)
AS

DELETE FROM [dbo].mp_FriendlyUrls
WHERE PageGuid IN (SELECT BlogGuid FROM mp_Blogs WHERE ModuleID IN
(SELECT ModuleID FROM mp_Modules WHERE SiteID = @SiteID) )

DELETE FROM [dbo].mp_FriendlyUrls
WHERE PageGuid IN (SELECT ModuleGuid FROM mp_Blogs WHERE ModuleID IN
(SELECT ModuleID FROM mp_Modules WHERE SiteID = @SiteID) )

DELETE FROM [dbo].mp_ContentHistory
WHERE ContentGuid IN (SELECT BlogGuid FROM mp_Blogs WHERE ModuleID IN
(SELECT ModuleID FROM mp_Modules WHERE SiteID = @SiteID) )

DELETE FROM [dbo].mp_ContentRating
WHERE ContentGuid IN (SELECT BlogGuid FROM mp_Blogs WHERE ModuleID IN
(SELECT ModuleID FROM mp_Modules WHERE SiteID = @SiteID) )

DELETE FROM [dbo].mp_BlogItemCategories
WHERE ItemID IN (SELECT ItemID FROM mp_Blogs WHERE ModuleID IN
(SELECT ModuleID FROM mp_Modules WHERE SiteID = @SiteID) )

DELETE FROM [dbo].mp_BlogCategories
WHERE ModuleID IN (SELECT ModuleID FROM mp_Modules WHERE SiteID = @SiteID)

DELETE FROM [dbo].mp_BlogStats
WHERE ModuleID IN (SELECT ModuleID FROM mp_Modules WHERE SiteID = @SiteID)

DELETE FROM [dbo].mp_BlogComments
WHERE ModuleID IN (SELECT ModuleID FROM mp_Modules WHERE SiteID = @SiteID)

DELETE FROM [dbo].mp_Blogs
WHERE ModuleID IN (SELECT ModuleID FROM mp_Modules WHERE SiteID = @SiteID)

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_Blog_DeleteByModule]
(
    @ModuleID int
)
AS

DELETE FROM [dbo].mp_FriendlyUrls
WHERE PageGuid IN (SELECT BlogGuid FROM mp_Blogs WHERE ModuleID = @ModuleID )

DELETE FROM [dbo].mp_ContentHistory
WHERE ContentGuid IN (SELECT BlogGuid FROM mp_Blogs WHERE ModuleID = @ModuleID )

DELETE FROM [dbo].mp_ContentRating
WHERE ContentGuid IN (SELECT BlogGuid FROM mp_Blogs WHERE ModuleID = @ModuleID )

DELETE FROM [dbo].mp_BlogItemCategories
WHERE ItemID IN (SELECT ItemID FROM mp_Blogs WHERE ModuleID = @ModuleID )

DELETE FROM [dbo].mp_BlogCategories
WHERE ModuleID = @ModuleID

DELETE FROM [dbo].mp_BlogStats
WHERE ModuleID = @ModuleID

DELETE FROM [dbo].mp_BlogComments
WHERE ModuleID = @ModuleID

DELETE FROM [dbo].mp_Blogs
WHERE ModuleID = @ModuleID

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_Blog_Update]

/*
Author:			Joe Audette
Last Modified:		2010-01-05

*/

@ItemID         		int,
@ModuleID       		int,
@UserName       	nvarchar(100),
@Heading          		nvarchar(255),
@Abstract       		nvarchar(max),
@Description    		nvarchar(max),
@StartDate      		datetime,
@IsInNewsletter 	bit,
@IncludeInFeed		bit,
@AllowCommentsForDays	int,
@Location nvarchar(max),
@LastModUserGuid	uniqueidentifier,
@LastModUtc	datetime,
@ItemUrl	nvarchar(255),
@MetaKeywords	nvarchar(255),
@MetaDescription	nvarchar(255),
@CompiledMeta    		nvarchar(max),
@IsPublished			bit
  
AS

UPDATE mp_Blogs

SET 

		ModuleID = @ModuleID,
		CreatedByUser = @UserName,
		Heading =@Heading ,
		[Abstract] =@Abstract,
		[Description] = @Description,
		StartDate = @StartDate,
		IsInNewsletter = @IsInNewsletter,
		IncludeInFeed = @IncludeInFeed,
		AllowCommentsForDays = @AllowCommentsForDays,
		Location = @Location,
		LastModUserGuid = @LastModUserGuid,
		LastModUtc = @LastModUtc,
		ItemUrl = @ItemUrl,
		MetaKeywords = @MetaKeywords,
		MetaDescription = @MetaDescription,
		CompiledMeta = @CompiledMeta,
		IsPublished = @IsPublished
		
WHERE 
		ItemID = @ItemID

GO

SET QUOTED_IDENTIFIER ON

GO

CREATE PROCEDURE [dbo].[mp_Blog_SelectByEndDate]

/*
Author:		Joe Audette
Created:	6/5/2005
Last Modified:	2008-12-09

*/
    
@ModuleID int,
@EndDate datetime

AS

DECLARE @RowsToGet int

SET @RowsToGet = COALESCE((SELECT TOP 1 SettingValue FROM mp_ModuleSettings WHERE SettingName = 'BlogEntriesToShowSetting' AND ModuleID = @ModuleID),10)

SET rowcount @RowsToGet

SELECT		b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount
			

FROM        		mp_Blogs b

WHERE
    			(b.ModuleID = @ModuleID)  and (@EndDate >= b.StartDate)

ORDER BY
   			b.ItemID DESC,  b.StartDate DESC

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_Blog_Delete]
(
    @ItemID int
)
AS

DECLARE @ModuleID int
SET @ModuleID = (SELECT TOP 1 ModuleID FROM mp_Blogs WHERE ItemID = @ItemID)

DELETE FROM
    mp_Blogs

WHERE
    ItemID = @ItemID

UPDATE mp_BlogStats
SET 	EntryCount = EntryCount - 1
WHERE ModuleID = @ModuleID

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_Blog_SelectByMonth]

(
	@Month int,
	@Year int,
	@ModuleID int,
	@CurrentDate datetime
)

AS

SELECT	b.*

		

FROM 		mp_Blogs b

WHERE 	b.ModuleID = @ModuleID
		AND b.IsPublished = 1
		AND b.StartDate <= @CurrentDate
		AND Month(b.StartDate)  = @Month 
		AND Year(b.StartDate)  = @Year


ORDER BY	 b.StartDate DESC

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_Blog_Insert]

/*
Author:			Joe Audette
Last Modified:	2010-06-30

*/

@BlogGuid	uniqueidentifier,
@ModuleGuid	uniqueidentifier,
@ModuleID       		int,
@UserName       	nvarchar(100),
@Heading         		nvarchar(255),
@Abstract	    	nvarchar(max),
@Description    		nvarchar(max),
@Location    		nvarchar(max),
@StartDate      		datetime,
@IsInNewsletter 	bit,
@IncludeInFeed		bit,
@AllowCommentsForDays	int,
@UserGuid	uniqueidentifier,
@CreatedDate	datetime,
@ItemUrl	nvarchar(255),
@MetaKeywords	nvarchar(255),
@MetaDescription	nvarchar(255),
@CompiledMeta    		nvarchar(max),
@IsPublished			bit,
@ItemID         		int OUTPUT

AS

INSERT INTO 		mp_Blogs
(
			BlogGuid,
			ModuleGuid,
    			ModuleID,
    			CreatedByUser,
    			CreatedDate,
    			Heading,
    			Abstract,
			[Description],
			Location,
			StartDate,
			IsInNewsletter,
			IncludeInFeed,
			AllowCommentsForDays,
			UserGuid,
			LastModUserGuid,
			LastModUtc,
			ItemUrl,
			MetaKeywords,
			MetaDescription,
			CompiledMeta,
			IsPublished
		
)

VALUES
(
			@BlogGuid,
			@ModuleGuid,
    		@ModuleID,
    		@UserName,
    		@CreatedDate,
    		@Heading,
    		@Abstract,
    		@Description,
			@Location,
    		@StartDate,
    		@IsInNewsletter,
		@IncludeInFeed,
			@AllowCommentsForDays,
			@UserGuid,
			@UserGuid,
			@CreatedDate,
			@ItemUrl,
			@MetaKeywords,
			@MetaDescription,
			@CompiledMeta,
			@IsPublished
    		
)

SELECT

    @ItemID = @@Identity


IF EXISTS(SELECT ModuleID FROM mp_BlogStats WHERE ModuleID = @ModuleID)
	BEGIN
		UPDATE mp_BlogStats
		SET 	EntryCount = EntryCount + 1
		WHERE ModuleID = @ModuleID

	END
ELSE
	BEGIN
		INSERT INTO mp_BlogStats(ModuleGuid, ModuleID, EntryCount)
		VALUES (@ModuleGuid, @ModuleID, 1)


	END

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_Blog_SelectDrafts]

/*
Author:		Joe Audette
Created:	2007-12-14
Last Modified:	2010-01-05

*/
    
@ModuleID int,
@CurrentTime datetime

AS


SELECT		b.*

FROM        		mp_Blogs b

WHERE
    			(b.ModuleID = @ModuleID)  
		and ((b.StartDate > @CurrentTime) OR (b.IsPublished = 0))

ORDER BY
   			b.StartDate DESC

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_Blogs_GetCount]

/*
Author:   			Joe Audette
Created: 			2010-01-05
Last Modified: 		2010-01-05
*/

@ModuleID int,
@BeginDate datetime,
@CurrentTime datetime

AS

SELECT COUNT(*) 
FROM [dbo].[mp_Blogs]
WHERE
(ModuleID = @ModuleID)  
    			and (@BeginDate >= StartDate)
    			and IsPublished = 1
    			and StartDate <= @CurrentTime

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_BlogComment_Insert]

@ModuleID       int,
@ItemID	int,
@Name       nvarchar(100),
@Title          nvarchar(100),
@URL       nvarchar(200),
@Comment    nvarchar(max),
@DateCreated	datetime


AS
INSERT INTO mp_BlogComments

(

    ModuleID,
	ItemID,
    [Name],
    Title,
	URL,
    Comment,
	DateCreated

)

VALUES
(

    @ModuleID,
    @ItemID,
   @Name,
    @Title,
    @URL,
    @Comment,
    @DateCreated

)



UPDATE mp_Blogs
SET CommentCount = CommentCount + 1
WHERE ModuleID = @ModuleID AND ItemID = @ItemID


UPDATE mp_BlogStats
SET 	CommentCount = CommentCount + 1
WHERE ModuleID = @ModuleID

GO

SET QUOTED_IDENTIFIER OFF

GO
CREATE PROCEDURE [dbo].[mp_BlogComment_Delete]
(
    @BlogCommentID int
)
AS

DECLARE @ModuleID int
DECLARE @ItemID int

SELECT @ModuleID = ModuleID, @ItemID = ItemID
FROM	mp_BlogComments
WHERE BlogCommentID = @BlogCommentID

DELETE FROM
    mp_BlogComments

WHERE
    BlogCommentID = @BlogCommentID



UPDATE mp_Blogs
SET CommentCount = CommentCount - 1
WHERE ModuleID = @ModuleID AND ItemID = @ItemID

UPDATE mp_BlogStats
SET 	CommentCount = CommentCount - 1
WHERE ModuleID = @ModuleID

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_BlogCategories_SelectByModule]

/*
Author:   			Joe Audette
Created: 			2005-06-07
Last Modified: 		2010-01-05
*/

@ModuleID			int,
@CurrentTime	dateTime

AS


SELECT
				bc.CategoryID, 
				bc.Category,
				COUNT(bic.ItemID) As PostCount
		
		
FROM
			[dbo].[mp_BlogCategories] bc

JOIN			mp_BlogItemCategories bic
ON 			bc.CategoryID = bic.CategoryID

JOIN		mp_Blogs b
ON			b.ItemID = bic.ItemID
		

WHERE		bc.ModuleID = @ModuleID
			AND b.IsPublished = 1
			AND b.StartDate <= @CurrentTime
			
			

GROUP BY		bc.CategoryID, bc.Category

ORDER BY		bc.Category

GO

SET QUOTED_IDENTIFIER OFF

GO
CREATE PROCEDURE [dbo].[mp_Blog_SelectByCategory]

/*
Author:			Joe Audette
Created:		2005-06-12
Last Modified:	2010-01-05

*/



@ModuleID 		int,
@CategoryID		int,
@CurrentTime datetime


AS

SELECT	b.*

		

FROM 		mp_Blogs b

WHERE 	b.ModuleID = @ModuleID
		AND b.IsPublished = 1
		AND b.StartDate <= @CurrentTime
		AND b.ItemID IN (SELECT ItemID FROM mp_BlogItemCategories WHERE CategoryID = @CategoryID)


ORDER BY	 b.StartDate DESC

GO

SET QUOTED_IDENTIFIER OFF

GO
CREATE PROCEDURE [dbo].[mp_Blog_SelectArchiveByMonth]


(
	@ModuleID int,
	@CurrentTime datetime
)

AS

SELECT 	Month(StartDate) as [Month], 
		DATENAME(month,StartDate) as [MonthName],
		Year(StartDate) as [Year], 
		1 as Day, 
		Count(*) as [Count] 

FROM 		mp_Blogs
 
WHERE 	ModuleID = @ModuleID 
		AND IsPublished = 1
		AND StartDate <= @CurrentTime

GROUP BY 	Year(StartDate), 
		Month(StartDate) ,
		DATENAME(month,StartDate)

ORDER BY 	[Year] desc, [Month] desc

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_Blog_SelectForSiteMap]

/*
Author:		Joe Audette
Created:	2008-05-15
Last Modified:	2010-01-05

*/
    
@SiteID	int,
@CurrentUtcDateTime datetime

AS


SELECT		
			b.ItemUrl,
			b.LastModUtc
			

FROM        		[dbo].mp_Blogs b

JOIN		[dbo].mp_Modules m
ON			b.ModuleID = m.ModuleID

WHERE
				m.SiteID = @SiteID
    			AND b.StartDate <= @CurrentUtcDateTime
    			AND b.IsPublished = 1
				AND b.IncludeInFeed = 1
				AND b.ItemUrl <> ''
				AND b.ItemUrl IS NOT NULL

ORDER BY
   			b.StartDate DESC

GO

SET QUOTED_IDENTIFIER OFF

GO
CREATE PROCEDURE [dbo].[mp_BlogStats_Select]
(
    @ModuleID int
)
AS

SELECT		
			ModuleID, 
			EntryCount,
			CommentCount

FROM       		 mp_BlogStats

WHERE
    			ModuleID = @ModuleID

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_BlogCategories_SelectOne]

/*
Author:   			Joe Audette
Created: 			6/7/2005
Last Modified: 			6/7/2005

*/

@CategoryID int

AS


SELECT
		[CategoryID],
		[ModuleID],
		[Category]
		
FROM
		[dbo].[mp_BlogCategories]
		
WHERE
		[CategoryID] = @CategoryID

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_BlogCategories_Insert]

/*
Author:   			Joe Audette
Created: 			6/7/2005
Last Modified: 			6/12/2005

*/

@ModuleID int,
@Category nvarchar(255)

	
AS

IF NOT EXISTS (SELECT CategoryID FROM mp_BlogCategories WHERE ModuleID = @ModuleID AND Category = @Category)
BEGIN

INSERT INTO 	[dbo].[mp_BlogCategories] 
(
				[ModuleID],
				[Category]
) 

VALUES 
(
				@ModuleID,
				@Category
				
)
SELECT @@IDENTITY 
END

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_BlogCategories_Update]

/*
Author:   			Joe Audette
Created: 			6/7/2005
Last Modified: 			9/11/2005

*/
	
@CategoryID int, 
@Category nvarchar(255) 


AS

UPDATE 		[dbo].[mp_BlogCategories] 

SET
			[Category] = @Category
			
WHERE
			[CategoryID] = @CategoryID

GO

SET QUOTED_IDENTIFIER OFF

GO
CREATE PROCEDURE [dbo].[mp_BlogCategories_SelectListByModule]

/*
Author:   			Joe Audette
Created: 			9/11/2005
Last Modified: 			9/11/2005
*/

@ModuleID			int

AS


SELECT
				bc.CategoryID, 
				bc.Category,
				COUNT(bic.ItemID) As PostCount
		
		
FROM
			[dbo].[mp_BlogCategories] bc

LEFT OUTER JOIN	mp_BlogItemCategories bic
ON 			bc.CategoryID = bic.CategoryID

WHERE		bc.ModuleID = @ModuleID
			

GROUP BY		bc.CategoryID, bc.Category

ORDER BY		bc.Category

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_BlogItemCategories_SelectByItem]

/*
Author:   			Joe Audette
Created: 			6/7/2005
Last Modified: 			6/7/2005
*/

@ItemID	int

AS


SELECT
		bic.[ID],
		bic.[ItemID],
		bic.[CategoryID],
		bc.Category
		
FROM
		[dbo].[mp_BlogItemCategories] bic

JOIN		mp_BlogCategories bc
ON		bc.CategoryID = bic.CategoryID

WHERE	ItemID = @ItemID

ORDER BY	bc.Category

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_BlogCategories_Delete]

/*
Author:   			Joe Audette
Created: 			6/7/2005
Last Modified: 			6/12/2005

*/

@CategoryID int

AS

DELETE FROM mp_BlogItemCategories
WHERE	CategoryID = @CategoryID

DELETE FROM [dbo].[mp_BlogCategories]
WHERE
	[CategoryID] = @CategoryID

GO

SET QUOTED_IDENTIFIER OFF

GO
CREATE PROCEDURE [dbo].[mp_BlogComments_Select]
(
    @ModuleID int,
    @ItemID int
)
AS

SELECT		BlogCommentID,
			ItemID, 
			ModuleID, 
			Name, 
			Title, 
			URL, 
			Comment, 
			DateCreated

FROM        mp_BlogComments

WHERE
    		ModuleID = @ModuleID
		AND ItemID = @ItemID

   ORDER BY
   	BlogCommentID DESC,  DateCreated DESC

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_BlogItemCategories_Delete]

/*
Author:   			Joe Audette
Created: 			6/7/2005
Last Modified: 			6/7/2005

*/

@ItemID int

AS

DELETE FROM [dbo].[mp_BlogItemCategories]
WHERE
	[ItemID] = @ItemID

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_BlogItemCategories_Insert]

/*
Author:   			Joe Audette
Created: 			6/7/2005
Last Modified: 			6/7/2005


*/

@ItemID int,
@CategoryID int

	
AS

INSERT INTO 	[dbo].[mp_BlogItemCategories] 
(
				[ItemID],
				[CategoryID]
) 

VALUES 
(
				@ItemID,
				@CategoryID
				
)
SELECT @@IDENTITY

GO

ALTER TABLE [dbo].[mp_BlogComments] ADD  CONSTRAINT [DF_mp_BlogComments_DateCreated]  DEFAULT (getdate()) FOR [DateCreated]

GO

ALTER TABLE [dbo].[mp_Blogs] ADD  CONSTRAINT [DF_mp_Blogs_Comments]  DEFAULT ((0)) FOR [CommentCount]

GO

ALTER TABLE [dbo].[mp_Blogs] ADD  CONSTRAINT [DF_mp_Blogs_TrackBackCount]  DEFAULT ((0)) FOR [TrackBackCount]

GO

ALTER TABLE [dbo].[mp_Blogs] ADD  CONSTRAINT [DF_mp_Blogs_IncludeInFeed]  DEFAULT ((1)) FOR [IncludeInFeed]

GO

ALTER TABLE [dbo].[mp_Blogs] ADD  CONSTRAINT [DF_mp_Blogs_AllowCommentsForDays]  DEFAULT ((0)) FOR [AllowCommentsForDays]

GO

ALTER TABLE [dbo].[mp_BlogStats] ADD  CONSTRAINT [DF_mp_BlogStats_EntryCount]  DEFAULT ((0)) FOR [EntryCount]

GO

ALTER TABLE [dbo].[mp_BlogStats] ADD  CONSTRAINT [DF_mp_BlogStats_CommentCount]  DEFAULT ((0)) FOR [CommentCount]

GO

ALTER TABLE [dbo].[mp_BlogStats] ADD  CONSTRAINT [DF_mp_BlogStats_TrackBackCount]  DEFAULT ((0)) FOR [TrackBackCount]

GO

ALTER TABLE [dbo].[mp_BlogComments]  WITH CHECK ADD  CONSTRAINT [FK_mp_BlogComments_mp_Blogs] FOREIGN KEY([ItemID])
REFERENCES [dbo].[mp_Blogs] ([ItemID])

GO
ALTER TABLE [dbo].[mp_BlogComments] CHECK CONSTRAINT [FK_mp_BlogComments_mp_Blogs]

GO

ALTER TABLE [dbo].[mp_BlogItemCategories]  WITH CHECK ADD  CONSTRAINT [FK_mp_BlogItemCategories_mp_BlogCategories] FOREIGN KEY([CategoryID])
REFERENCES [dbo].[mp_BlogCategories] ([CategoryID])

GO
ALTER TABLE [dbo].[mp_BlogItemCategories] CHECK CONSTRAINT [FK_mp_BlogItemCategories_mp_BlogCategories]

GO

ALTER TABLE [dbo].[mp_BlogItemCategories]  WITH CHECK ADD  CONSTRAINT [FK_mp_BlogItemCategories_mp_Blogs] FOREIGN KEY([ItemID])
REFERENCES [dbo].[mp_Blogs] ([ItemID])

GO
ALTER TABLE [dbo].[mp_BlogItemCategories] CHECK CONSTRAINT [FK_mp_BlogItemCategories_mp_Blogs]

GO

SET QUOTED_IDENTIFIER ON

GO
CREATE PROCEDURE [dbo].[mp_Blogs_SelectPage]

-- Author:   			Joe Audette
-- Created: 			2010-01-05
-- Last Modified: 		2010-01-05

@ModuleID int,
@BeginDate datetime,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
(ModuleID = @ModuleID)  
    			and (@BeginDate >= StartDate)
    			and IsPublished = 1
    			and StartDate <= @CurrentTime

ORDER BY

	StartDate DESC

END


SELECT
		b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			b.ItemUrl,
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount,
			u.[Name],
			u.[LoginName],
			u.Email
		
FROM
		[dbo].[mp_Blogs] b

JOIN			#PageIndex t2
ON			
		b.[ItemID] = t2.[ItemID]
		
LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex

GO
