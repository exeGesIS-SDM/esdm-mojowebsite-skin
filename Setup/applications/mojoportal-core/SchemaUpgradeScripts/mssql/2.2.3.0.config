/****** Object:  StoredProcedure [dbo].[mp_Users_SelectPage]    Script Date: 07/14/2007 07:12:21 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[mp_Users_SelectPage]

/*
Author:			Joe Audette
Created:		2004-10-3
Last Modified:	2007-07-14

*/

@PageNumber 			int,
@PageSize 			int,
@UserNameBeginsWith 		nvarchar(50),
@SiteID			int


AS
DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

--SET @PageLowerBound = @PageSize * @PageNumber
--SET @PageUpperBound = @PageLowerBound + @PageSize + 1


CREATE TABLE #PageIndexForUsers 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
	UserName nvarchar(50),
	LoginName nvarchar(50)
)	


 IF @UserNameBeginsWith IS NULL OR @UserNameBeginsWith = ''
	BEGIN
	    	INSERT INTO 	#PageIndexForUsers (UserName, LoginName)

	    	SELECT 	[Name], LoginName
		FROM 		mp_Users 
		WHERE 	ProfileApproved = 1
				 AND DisplayInMemberList = 1  
				AND SiteID = @SiteID
				AND IsDeleted = 0
		ORDER BY 	[Name]
	END
ELSE
	BEGIN
	    	INSERT INTO 	#PageIndexForUsers (UserName, LoginName)

	    	SELECT 	[Name] , LoginName
		FROM 		mp_Users 
		WHERE 	ProfileApproved = 1 
				AND DisplayInMemberList = 1  
				AND SiteID = @SiteID
				AND IsDeleted = 0
				AND [Name] LIKE @UserNameBeginsWith + '%'
		ORDER BY 	[Name]

	END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndexForUsers)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1


SELECT		*,
			'TotalPages' = @TotalPages

FROM			mp_Users u

JOIN			#PageIndexForUsers p
ON			u.LoginName = p.LoginName

WHERE 		u.ProfileApproved = 1 
			AND u.SiteID = @SiteID
			AND u.IsDeleted = 0
			AND p.IndexID > @PageLowerBound 
			AND p.IndexID < @PageUpperBound

ORDER BY		p.IndexID

DROP TABLE #PageIndexForUsers


GO

/*
Script created by SQL Compare version 5.0.0.1622 from Red Gate Software Ltd at 7/14/2007 6:51:56 AM
Run this script on vista1.mojo2228 to make it the same as vista1.mojodev
Please back up your database before running this script
*/
SET NUMERIC_ROUNDABORT OFF
GO
SET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON
GO
IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE id=OBJECT_ID('tempdb..#tmpErrors')) DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO
PRINT N'Altering [dbo].[mp_ModuleDefinitions]'
GO
ALTER TABLE [dbo].[mp_ModuleDefinitions] ADD
[Guid] [uniqueidentifier] NULL CONSTRAINT [DF_mp_ModuleDefinitions_Guid] DEFAULT (newid())
GO

DECLARE @ControlSrc nvarchar(255)
DECLARE @Guid uniqueidentifier

SET @ControlSrc = 'Modules/HtmlModule.ascx'
SET @Guid = '881e4e00-93e4-444c-b7b0-6672fb55de10'
UPDATE mp_ModuleDefinitions SET [Guid] = @Guid WHERE [ControlSrc] = @ControlSrc


SET @ControlSrc = 'Modules/Links.ascx'
SET @Guid = '74bdbcc2-0e79-47ff-bcd4-a159270bf36e'
UPDATE mp_ModuleDefinitions SET [Guid] = @Guid WHERE [ControlSrc] = @ControlSrc

SET @ControlSrc = 'Modules/XmlModule.ascx'
SET @Guid = 'fa969c0a-6d02-4dcb-86b8-ac69d80c1fb1'
UPDATE mp_ModuleDefinitions SET [Guid] = @Guid WHERE [ControlSrc] = @ControlSrc

SET @ControlSrc = 'Modules/SharedFiles.ascx'
SET @Guid = 'dc873d76-5bf2-4ac5-bff7-434a87a3fc8e'
UPDATE mp_ModuleDefinitions SET [Guid] = @Guid WHERE [ControlSrc] = @ControlSrc

SET @ControlSrc = 'Modules/SiteStatisticsModule.ascx'
SET @Guid = '1999e312-0378-4bca-8753-201d17957a74'
UPDATE mp_ModuleDefinitions SET [Guid] = @Guid WHERE [ControlSrc] = @ControlSrc

SET @ControlSrc = 'Modules/WebPartModule.ascx'
SET @Guid = '437a19b0-ef57-4963-b311-a1e13d9d883c'
UPDATE mp_ModuleDefinitions SET [Guid] = @Guid WHERE [ControlSrc] = @ControlSrc

SET @ControlSrc = 'Modules/BlogModule.ascx'
SET @Guid = '026cbead-2b80-4491-906d-b83e37179ccf'
UPDATE mp_ModuleDefinitions SET [Guid] = @Guid WHERE [ControlSrc] = @ControlSrc

SET @ControlSrc = 'Modules/ForumModule.ascx'
SET @Guid = '38aa5a84-9f5c-42eb-8f4c-105983d419fb'
UPDATE mp_ModuleDefinitions SET [Guid] = @Guid WHERE [ControlSrc] = @ControlSrc

SET @ControlSrc = 'Modules/Gallery.ascx'
SET @Guid = 'd572f6b4-d0ed-465d-ad60-60433893b401'
UPDATE mp_ModuleDefinitions SET [Guid] = @Guid WHERE [ControlSrc] = @ControlSrc

SET @ControlSrc = 'Modules/ContactForm.ascx'
SET @Guid = '99019eb8-db13-4bb3-81ea-073571a60dba'
UPDATE mp_ModuleDefinitions SET [Guid] = @Guid WHERE [ControlSrc] = @ControlSrc

SET @ControlSrc = 'Modules/RSSAggregator.ascx'
SET @Guid = '5ef82464-e2d3-4982-8dfd-01e1afa615f9'
UPDATE mp_ModuleDefinitions SET [Guid] = @Guid WHERE [ControlSrc] = @ControlSrc

SET @ControlSrc = 'Modules/EventCalendar.ascx'
SET @Guid = 'c5e6a5df-ac2a-43d3-bb7f-9739bc47194e'
UPDATE mp_ModuleDefinitions SET [Guid] = @Guid WHERE [ControlSrc] = @ControlSrc

SET @ControlSrc = 'Modules/HtmlFragmentInclude.ascx'
SET @Guid = 'f193cce1-6e28-4b73-88e7-e00cd1d642c9'
UPDATE mp_ModuleDefinitions SET [Guid] = @Guid WHERE [ControlSrc] = @ControlSrc


UPDATE mp_ModuleDefinitions SET [Guid] = newid() 
WHERE [Guid] IS NULL

GO

SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[mp_SchemaScriptHistory_SelectByApp]

/*
Author:   			Joe Audette
Created: 			1/30/2007
Last Modified: 		1/30/2007
*/

@ApplicationID uniqueidentifier

AS


SELECT
		[ID],
		[ApplicationID],
		[ScriptFile],
		[RunTime],
		[ErrorOccurred],
		[ErrorMessage],
		[ScriptBody]
		
FROM
		[dbo].[mp_SchemaScriptHistory]

WHERE 
		[ApplicationID] = @ApplicationID
		-- AND [ErrorOccurred] = 0

ORDER BY [ID]
GO


ALTER TABLE [dbo].[mp_ModuleDefinitions] ALTER COLUMN [Guid] [uniqueidentifier] NOT NULL

GO

CREATE NONCLUSTERED INDEX [IX_mp_ModuleDefinitions] ON [dbo].[mp_ModuleDefinitions] ([Guid])
GO


IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT 'The database update succeeded'
COMMIT TRANSACTION
END
ELSE PRINT 'The database update failed'
GO
DROP TABLE #tmpErrors
GO

SET NUMERIC_ROUNDABORT OFF
GO
SET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON
GO
IF EXISTS (SELECT * FROM tempdb..sysobjects WHERE id=OBJECT_ID('tempdb..#tmpErrors')) DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO
PRINT N'Altering [dbo].[mp_ModuleDefinitionSettings]'
GO
ALTER TABLE [dbo].[mp_ModuleDefinitionSettings] ADD
[FeatureGuid] [uniqueidentifier] NULL,
[ResourceFile] [nvarchar] (255) NULL
GO

UPDATE mp_ModuleDefinitionSettings
SET [FeatureGuid] = (SELECT TOP 1 [guid]
FROM mp_ModuleDefinitions
WHERE mp_ModuleDefinitions.[ModuleDefID] 
= mp_ModuleDefinitionSettings.[ModuleDefID])

GO

UPDATE mp_ModuleDefinitionSettings
SET [FeatureGuid] = '376EE2E4-AFF5-4473-8BED-FBF4989DE94A'
WHERE [FeatureGuid] IS NULL
GO

ALTER TABLE [dbo].[mp_ModuleDefinitionSettings] ALTER COLUMN [FeatureGuid] [uniqueidentifier] NOT NULL

GO


IF @@ERROR<>0 AND @@TRANCOUNT>0 ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT=0 BEGIN INSERT INTO #tmpErrors (Error) SELECT 1 BEGIN TRANSACTION END
GO
IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT 'The database update succeeded'
COMMIT TRANSACTION
END
ELSE PRINT 'The database update failed'
GO
DROP TABLE #tmpErrors
GO


/****** Object:  StoredProcedure [dbo].[mp_ModuleDefinitions_Insert]    Script Date: 07/14/2007 17:01:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[mp_ModuleDefinitions_Insert]

/*
Author:   			Joe Audette
Created: 			12/26/2004
Last Modified: 		07/14/2007

*/

@SiteID int,
@FeatureName nvarchar(255),
@ControlSrc nvarchar(255),
@SortOrder int,
@IsAdmin bit,
@Icon	nvarchar(255),
@DefaultCacheTime int,
@FeatureGuid uniqueidentifier
	
AS
DECLARE @ModuleDefID int

INSERT INTO 	[dbo].[mp_ModuleDefinitions] 
(
				[Guid],
				[FeatureName],
				[ControlSrc],
				[SortOrder],
				DefaultCacheTime,
				Icon,
				[IsAdmin]
) 

VALUES 
(
				@FeatureGuid,
				@FeatureName,
				@ControlSrc,
				@SortOrder,
				@DefaultCacheTime,
				@Icon,
				@IsAdmin
				
)


SET @ModuleDefID =  @@IDENTITY 

Exec mp_SiteModuleDefinitions_Insert @SiteID, @ModuleDefID


SELECT @ModuleDefID
GO

SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[mp_ModuleDefinitionSettings_Update]

@ModuleDefID      		int,
@SettingName   		nvarchar(50),
@SettingValue  			nvarchar(255),
@ControlType   			nvarchar(50),
@RegexValidationExpression 	ntext,
@FeatureGuid uniqueidentifier,
@ResourceFile nvarchar(255)

AS

IF NOT EXISTS (
    SELECT 
        * 
    FROM 
        mp_ModuleDefinitionSettings 
    WHERE 
        (ModuleDefID = @ModuleDefID OR FeatureGuid = @FeatureGuid)
      AND
        SettingName = @SettingName
)
INSERT INTO mp_ModuleDefinitionSettings (
	FeatureGuid,
    ModuleDefID,
	ResourceFile,
    SettingName,
    SettingValue,
	ControlType,
	RegexValidationExpression
) 
VALUES (
	@FeatureGuid,
    @ModuleDefID,
	@ResourceFile,
    @SettingName,
    @SettingValue,
	@ControlType,
	@RegexValidationExpression
)
ELSE
UPDATE
    mp_ModuleDefinitionSettings

SET
	FeatureGuid = @FeatureGuid,
    SettingValue = @SettingValue,
	ControlType = @ControlType,
	RegexValidationExpression = @RegexValidationExpression,
	ResourceFile = @ResourceFile

WHERE
    (ModuleDefID = @ModuleDefID OR FeatureGuid = @FeatureGuid)
  AND
    SettingName = @SettingName
    
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[mp_ModuleSettings_Select]
(
    @ModuleID int
)
AS

DECLARE @ModuleDefID int
SELECT @ModuleDefID = ModuleDefID 
FROM mp_Modules 
WHERE ModuleID = @ModuleID

SELECT 	ms.*,
		mds.FeatureGuid,
		mds.ResourceFile

FROM		mp_ModuleSettings ms

JOIN		mp_ModuleDefinitionSettings mds
ON			mds.ModuleDefID = @ModuleDefID
			AND mds.SettingName = ms.SettingName

WHERE	ms.ModuleID = @ModuleID

GO

SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[mp_ModuleDefinitionSettings_UpdateByID]

@ID						int,
@ModuleDefID      		int,
@SettingName   		nvarchar(50),
@SettingValue  			nvarchar(255),
@ControlType   			nvarchar(50),
@RegexValidationExpression 	ntext,
@ResourceFile nvarchar(255)

AS

UPDATE
    mp_ModuleDefinitionSettings

SET
    ResourceFile = @ResourceFile,
	SettingName = @SettingName,
    SettingValue = @SettingValue,
	ControlType = @ControlType,
	RegexValidationExpression = @RegexValidationExpression

WHERE
    ID = @ID AND ModuleDefID = @ModuleDefID
    
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[mp_ModuleDefinitions_SelectOneByGuid]

    
@FeatureGuid uniqueidentifier

AS

SELECT	*

FROM
    mp_ModuleDefinitions

WHERE
    [Guid] = @FeatureGuid
    
GO

SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[mp_ModuleDefinitionSettings_SelectOne]
(
    @FeatureGuid uniqueidentifier,
	@SettingName nvarchar(50)
	
)
AS

SELECT
    *

FROM
    mp_ModuleDefinitionSettings

WHERE
    FeatureGuid = @FeatureGuid
	AND SettingName = @SettingName
	
GO

SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[mp_FriendlyUrls_DeleteByPageID]

/*
Author:   			Joe Audette
Created: 			6/1/2005
Last Modified: 			6/1/2005

*/

@PageID int

AS

DELETE FROM [dbo].[mp_FriendlyUrls]
WHERE
	RealUrl LIKE '%pageid=' + CONVERT(varchar(255), @PageID) 
	
GO