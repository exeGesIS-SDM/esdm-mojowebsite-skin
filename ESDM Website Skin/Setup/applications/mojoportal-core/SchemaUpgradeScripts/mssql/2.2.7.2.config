/****** Object:  UserDefinedFunction [dbo].[PersianDay]    Script Date: 09/11/2008 11:50:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Function [dbo].[PersianDay](@Date DateTime)

returns bigint

 

as

begin

declare @d1 bigint

set @d1=365

 

declare @d4 bigint

set @d4=4*@d1 +1

 

declare @d33 bigint

set @d33=33*@d1 +8

 

declare @ret bigint

declare @y bigint

declare @m bigint

declare @d bigint

 

set @d=cast(@Date as bigint)+422506

set @y=(@d/@d33)*33+122

set @d=@d % @d33

 

if(@d>(7*@d4+@d1))

Begin

   set @y=@y+1

   set @d=@d-@d1

End

set @y=@y+(@d/@d4)*4

set @d=@d % @d4

 

declare @i bigint

set @i=@d/@d1

set @d=@d%@d1;

if(@i=4)

Begin

   set @i=@i-1

   set @d=@d+@d1

End

set @y=@y+@i

 

if(@d<186)

Begin

   set @m=(@d/31)+1

   set @d=(@d%31)+1

end

Else

Begin

   set @d=@d-186

   set @m=(@d/30)+7

   set @d=(@d%30)+1

End

set @ret=@d

return @ret

end
GO
/****** Object:  UserDefinedFunction [dbo].[PersianMonth]    Script Date: 09/11/2008 11:50:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Function [dbo].[PersianMonth](@Date DateTime)

returns bigint

 

as

begin

declare @d1 bigint

set @d1=365

 

declare @d4 bigint

set @d4=4*@d1 +1

 

declare @d33 bigint

set @d33=33*@d1 +8

 

declare @ret bigint

declare @y bigint

declare @m bigint

declare @d bigint

 

set @d=cast(@Date as bigint)+422506

set @y=(@d/@d33)*33+122

set @d=@d % @d33

 

if(@d>(7*@d4+@d1))

Begin

   set @y=@y+1

   set @d=@d-@d1

End

set @y=@y+(@d/@d4)*4

set @d=@d % @d4

 

declare @i bigint

set @i=@d/@d1

set @d=@d%@d1;

if(@i=4)

Begin

   set @i=@i-1

   set @d=@d+@d1

End

set @y=@y+@i

 

if(@d<186)

Begin

   set @m=(@d/31)+1

   set @d=(@d%31)+1

end

Else

Begin

   set @d=@d-186

   set @m=(@d/30)+7

   set @d=(@d%30)+1

End

set @ret=@m

return @ret

end
GO
/****** Object:  UserDefinedFunction [dbo].[PersianYear]    Script Date: 09/11/2008 11:50:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Function [dbo].[PersianYear](@Date DateTime)

returns bigint

 

as

begin

declare @d1 bigint

set @d1=365

 

declare @d4 bigint

set @d4=4*@d1 +1

 

declare @d33 bigint

set @d33=33*@d1 +8

 

declare @ret bigint

declare @y bigint

declare @m bigint

declare @d bigint

 

set @d=cast(@Date as bigint)+422506

set @y=(@d/@d33)*33+122

set @d=@d % @d33

 

if(@d>(7*@d4+@d1))

Begin

   set @y=@y+1

   set @d=@d-@d1

End

set @y=@y+(@d/@d4)*4

set @d=@d % @d4

 

declare @i bigint

set @i=@d/@d1

set @d=@d%@d1;

if(@i=4)

Begin

   set @i=@i-1

   set @d=@d+@d1

End

set @y=@y+@i

 

if(@d<186)

Begin

   set @m=(@d/31)+1

   set @d=(@d%31)+1

end

Else

Begin

   set @d=@d-186

   set @m=(@d/30)+7

   set @d=(@d%30)+1

End

set @ret=@y

return @ret

end
GO
/****** Object:  StoredProcedure [dbo].[mp_Blog_SelectArchiveByMonth_Persian]    Script Date: 09/11/2008 11:50:01 ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[mp_Blog_SelectArchiveByMonth_Persian]
(
	@ModuleID int
)

AS

SELECT 	dbo.PersianMonth(StartDate) as [Month], 
		DATENAME(month,StartDate) as [MonthName],
			dbo.PersianYear(StartDate) as [Year], 
		1 as Day, 
		Count(*) as [Count] 

FROM 		mp_Blogs
 
WHERE 	ModuleID = @ModuleID 
		AND StartDate < getutcdate()

GROUP BY 	dbo.PersianYear(StartDate), 
			dbo.PersianMonth(StartDate) ,
		DATENAME(month,StartDate)

ORDER BY 	[Year] desc, [Month] desc
GO

SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[mp_Blog_SelectByMonth_Persian]

(
	@Month int,
	@Year int,
	@ModuleID int
)

AS

SELECT	b.*

		

FROM 		mp_Blogs b

WHERE 	b.ModuleID = @ModuleID
		AND dbo.PersianMonth(b.StartDate)  = @Month 
		AND dbo.PersianYear(b.StartDate)  = @Year


ORDER BY	 b.StartDate DESC
GO


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[mp_SiteSettingsEx](
	[SiteID] [int] NOT NULL,
	[SiteGuid] [uniqueidentifier] NOT NULL,
	[KeyName] [nvarchar](128) NOT NULL,
	[KeyValue] [ntext] NULL,
	[GroupName] [nvarchar](128) NULL,
 CONSTRAINT [PK_mp_SiteSettingsEx] PRIMARY KEY CLUSTERED 
(
	[SiteID] ASC,
	[KeyName] ASC
) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[mp_SiteSettingsExDef](
	[KeyName] [nvarchar](128) NOT NULL,
	[GroupName] [nvarchar](128) NULL,
	[DefaultValue] [ntext] NULL,
	[SortOrder] [int] NOT NULL,
 CONSTRAINT [PK_mp_SiteSettingsExDef] PRIMARY KEY CLUSTERED 
(
	[KeyName] ASC
) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[mp_SiteSettingsEx_EnsureDefinitions]

/*
Author:   			Joe Audette
Created: 			2008-09-11
Last Modified: 		2008-09-11
*/

AS

INSERT INTO [dbo].[mp_SiteSettingsEx]
(
	SiteID,
	SiteGuid,
	[KeyName],
	[KeyValue],
	[GroupName]
)

SELECT 
		t.SiteID,
		t.SiteGuid,
		t.[KeyName],
		t.[DefaultValue],
		t.[GroupName] 
FROM
(
SELECT
		s.SiteID,
		s.SiteGuid,
		d.[KeyName],
		d.[DefaultValue],
		d.[GroupName]

FROM
		mp_Sites s,
		mp_SiteSettingsExDef d
) t

LEFT OUTER JOIN
		mp_SiteSettingsEx e
ON
		e.SiteID = t.SiteID
		AND e.[KeyName] = t.[KeyName]

WHERE
		e.SiteID IS NULL
GO




SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mp_SiteSettingsEx_Save]
(
	@SiteID int
	,@SiteGuid uniqueidentifier
	,@KeyName nvarchar(128)
	,@KeyValue ntext
	,@GroupName nvarchar(255)
)
AS
	
	if exists(select [KeyName] from mp_SiteSettingsEx 
			where SiteID = @SiteID and [KeyName] = @KeyName)
	begin
		update mp_SiteSettingsEx set KeyValue = @KeyValue 
		where SiteID = @SiteID and [KeyName] = @KeyName 
	end
	else
	begin
		insert into mp_SiteSettingsEx(SiteID,SiteGuid,[KeyName],KeyValue,[GroupName])
		values(@SiteID,@SiteGuid,@KeyName,@KeyValue,@GroupName)
	end
GO


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mp_SiteSettingsEx_SelectAll]
(
@SiteID int
)
AS
select e.* 

from 

mp_SiteSettingsEx e

JOIN

mp_SiteSettingsExDef d
ON
e.[KeyName] = d.[KeyName]
AND e.[GroupName] = d.[GroupName]

where e.SiteID =  @SiteID 
 
order by d.[GroupName], d.[SortOrder]
GO

INSERT INTO [mp_SiteSettingsExDef]([KeyName],[DefaultValue],[GroupName],[SortOrder]) 
VALUES('SMTPUser','','SMTP', 100)

INSERT INTO [mp_SiteSettingsExDef]([KeyName],[DefaultValue],[GroupName],[SortOrder]) 
VALUES('SMTPPassword','','SMTP', 200)

INSERT INTO [mp_SiteSettingsExDef]([KeyName],[DefaultValue],[GroupName],[SortOrder]) 
VALUES('SMTPServer','localhost','SMTP', 300)

INSERT INTO [mp_SiteSettingsExDef]([KeyName],[DefaultValue],[GroupName],[SortOrder]) 
VALUES('SMTPPort','25','SMTP', 400)

INSERT INTO [mp_SiteSettingsExDef]([KeyName],[DefaultValue],[GroupName],[SortOrder]) 
VALUES('SMTPRequiresAuthentication','false','SMTP', 500)

INSERT INTO [mp_SiteSettingsExDef]([KeyName],[DefaultValue],[GroupName],[SortOrder]) 
VALUES('SMTPUseSsl','false','SMTP', 600)

INSERT INTO [mp_SiteSettingsExDef]([KeyName],[DefaultValue],[GroupName],[SortOrder]) 
VALUES('SMTPPreferredEncoding','','SMTP', 700)




GO
