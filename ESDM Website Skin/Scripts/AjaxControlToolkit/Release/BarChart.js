Type.registerNamespace("Sys.Extended.UI");Sys.Extended.UI.BarChart=function(n){Sys.Extended.UI.BarChart.initializeBase(this,[n]);var t=this.get_id();t=t.replace("_ctl00","");this._parentDiv=document.getElementById(t+"__ParentDiv");this._chartWidth="300";this._chartHeight="200";this._chartTitle="";this._categoriesAxis="";this._series=null;this._chartType=Sys.Extended.UI.BarChartType.Column;this._theme="BarChart";this._valueAxisLines=9;this._chartTitleColor="";this._valueAxisLineColor="";this._categoryAxisLineColor="";this._baseLineColor="";this.yMax=0;this.yMin=0;this.xMax=0;this.xMin=0;this.roundedTickRange=0;this.startX=0;this.startY=0;this.endX=0;this.endY=0;this.xInterval=0;this.yInterval=0;this.arrXAxis;this.arrXAxisLength=0;this.arrYAxis;this.arrYAxisLength=0;this.charLength=3.5;this.arrCombinedData=null};Sys.Extended.UI.BarChart.prototype={initialize:function(){if(Sys.Extended.UI.BarChart.callBaseMethod(this,"initialize"),!document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#Image","1.1"))throw"Browser does not support SVG.";this._valueAxisLines==0&&(this._valueAxisLines=9);this._chartType==Sys.Extended.UI.BarChartType.Column||this._chartType==Sys.Extended.UI.BarChartType.StackedColumn?this.generateColumnChart():(this._chartType==Sys.Extended.UI.BarChartType.Bar||this._chartType==Sys.Extended.UI.BarChartType.StackedBar)&&this.generateBarChart()},dispose:function(){Sys.Extended.UI.BarChart.callBaseMethod(this,"dispose")},generateColumnChart:function(){this.arrXAxis=this._categoriesAxis.split(",");this.arrXAxisLength=this.arrXAxis.length;this.calculateMinMaxValuesForColumnType();this.calculateIntervalForColumnType();this.calculateValueAxisForColumnType();var n=this.initializeSVG();n=n+String.format('<text x="{0}" y="{1}" id="ChartTitle" style="fill:{3}">{2}<\/text>',parseInt(this._chartWidth)/2-this._chartTitle.length*this.charLength,parseInt(this._chartHeight)/20,this._chartTitle,this._chartTitleColor);n=n+this.drawBackgroundHorizontalLinesForColumnType();n=n+this.drawBackgroundVerticalLinesForColumnType();n=n+this.drawBaseLinesForColumnType();n=n+this.drawLegendArea();n=n+this.drawAxisValuesForColumnType();n=n+this.drawBarsForColumnType();n=n+"<\/svg>";this._parentDiv.innerHTML=n},calculateIntervalForColumnType:function(){this.startX=this._chartWidth/10+.5;this.endX=parseInt(this._chartWidth)-4.5;this.startY=this.yMin>=0?Math.round(parseInt(this._chartHeight)-parseInt(this._chartHeight)*24/100)+.5:Math.round(parseInt(this._chartHeight)-parseInt(this._chartHeight)*12/100)/2+.5;this.yInterval=this.startY/(this._valueAxisLines+1)},calculateMinMaxValuesForColumnType:function(){var u,i,r,t,n;if(this._chartType==Sys.Extended.UI.BarChartType.Column)for(n=0;n<this._series.length;n++)r=this._series[n].Data,u=Math.max.apply(null,r),i=Math.min.apply(null,r),n==0?(this.yMax=u,this.yMin=i):(u>this.yMax&&(this.yMax=u),i<this.yMin&&(this.yMin=i));else{for(this.arrCombinedData=null,n=0;n<this._series.length;n++){for(r=[],t=0;t<this._series[n].Data.length;t++)r[t]=this._series[n].Data[t];if(this.arrCombinedData==null)this.arrCombinedData=r;else for(t=0;t<r.length;t++)this.arrCombinedData[t]=parseFloat(this.arrCombinedData[t])+parseFloat(r[t])}for(n=0;n<this._series.length;n++)i=Math.min.apply(null,this._series[n].Data),n==0?this.yMin=i:i<this.yMin&&(this.yMin=i);this.yMax=Math.max.apply(null,this.arrCombinedData)}this.yMin<0&&(this._valueAxisLines=Math.round(this._valueAxisLines/2))},calculateValueAxisForColumnType:function(){var i,n,r,t;i=this.yMin>=0?this.yMax:this.yMax>Math.abs(this.yMin)?this.yMax:Math.abs(this.yMin);n=i/(this._valueAxisLines-1);n<1?this.roundedTickRange=n.toFixed(1):(r=Math.ceil(Math.log(n)/Math.log(10)-1),t=Math.pow(10,r),this.roundedTickRange=Math.ceil(n/t)*t);this.startX=this.startX+(this.roundedTickRange*10*this._valueAxisLines/10).toString().length*this.charLength},drawBackgroundHorizontalLinesForColumnType:function(){for(var t="",n=1;n<=this._valueAxisLines;n++)t=t+String.format('<path d="M{0} {2} {1} {2}" id="HorizontalLine" style="stroke:{3}"><\/path>',this.startX,this.endX,this.startY-this.yInterval*n,this._categoryAxisLineColor);if(this.yMin<0)for(n=1;n<=this._valueAxisLines;n++)t=t+String.format('<path d="M{0} {2} {1} {2}" id="HorizontalLine" style="stroke:{3}"><\/path>',this.startX,this.endX,this.startY+this.yInterval*n,this._categoryAxisLineColor);return t},drawBackgroundVerticalLinesForColumnType:function(){var t="",n;for(this.xInterval=Math.round((parseInt(this._chartWidth)-this.startX)/this.arrXAxisLength),n=0;n<this.arrXAxisLength;n++)t=t+String.format('<path id="VerticalLine" d="M{0} {1} {0} {2}" style="stroke:{3}"><\/path>',parseInt(this._chartWidth)-5-this.xInterval*n,this.startY-this.yInterval*this._valueAxisLines,this.startY,this._valueAxisLineColor);if(this.yMin<0)for(n=0;n<this.arrXAxisLength;n++)t=t+String.format('<path id="VerticalLine" d="M{0} {1} {0} {2}" style="stroke:{3}"><\/path>',parseInt(this._chartWidth)-5-this.xInterval*n,this.startY+this.yInterval*this._valueAxisLines,this.startY,this._valueAxisLineColor);return t},drawBaseLinesForColumnType:function(){var n="",t;for(n=n+String.format('<path d="M{0} {1} {2} {1}" id="BaseLine" style="stroke:{3}"><\/path>',this.startX,this.startY,this.endX,this._baseLineColor),n=n+String.format('<path d="M{0} {1} {0} {2}" id="BaseLine" style="stroke:{3}"><\/path>',this.startX,this.startY-this.yInterval*this._valueAxisLines,this.startY,this._baseLineColor),n=n+String.format('<path d="M{0} {1} {0} {2}" id="BaseLine" style="stroke:{3}"><\/path>',this.startX,this.startY,this.startY+4,this._baseLineColor),t=0;t<this.arrXAxisLength;t++)n=n+String.format('<path d="M{0} {1} {0} {2}" id="BaseLine" style="stroke:{3}"><\/path>',parseInt(this._chartWidth)-5-this.xInterval*t,this.startY,this.startY+4,this._baseLineColor);for(t=0;t<=this._valueAxisLines;t++)n=n+String.format('<path d="M{0} {2} {1} {2}" id="BaseLine" style="stroke:{3}"><\/path>',this.startX-4,this.startX,this.startY-this.yInterval*t,this._baseLineColor);if(this.yMin<0)for(n=n+String.format('<path d="M{0} {1} {0} {2}" id="BaseLine" style="stroke:{3}"><\/path>',this.startX,this.startY+this.yInterval*this._valueAxisLines,this.startY,this._baseLineColor),t=1;t<=this._valueAxisLines;t++)n=n+String.format('<path d="M{0} {2} {1} {2}" id="BaseLine" style="stroke:{3}"><\/path>',this.startX-4,this.startX,this.startY+this.yInterval*t,this._baseLineColor);return n},drawAxisValuesForColumnType:function(){for(var t="",i=0,n=0;n<this.arrXAxisLength;n++)i=this.arrXAxis[n].toString().length*5.5,t=t+String.format('<text id="SeriesAxis" x="{0}" y="{1}" fill-opacity="1">{2}<\/text>',Math.round(this.startX+this.xInterval*10*n/10+this.xInterval/2-i),this.startY+Math.round(this.yInterval*65/100),this.arrXAxis[n]);for(n=0;n<=this._valueAxisLines;n++)i=(this.roundedTickRange*10*n/10).toString().length*5.5,t=t+String.format('<text id="ValueAxis" x="{0}" y="{1}">{2}<\/text>',this.startX-i-15,this.startY-this.yInterval*10*n/10+3.5,this.roundedTickRange*10*n/10);if(this.yMin<0)for(n=1;n<=this._valueAxisLines;n++)i=(this.roundedTickRange*10*n/10).toString().length*5.5,t=t+String.format('<text id="ValueAxis" x="{0}" y="{1}">-{2}<\/text>',this.startX-i-19,this.startY+this.yInterval*10*n/10,this.roundedTickRange*10*n/10);return t},drawBarsForColumnType:function(){var i="",o=this._series.length,e=this.xInterval/10,r,s,t,u,f,n;for(r=this._chartType==Sys.Extended.UI.BarChartType.Column?Math.round((this.xInterval*80/100-e*o)/o):Math.round(this.xInterval*80/100),s="",t=0;t<this.arrXAxisLength;t++){if(i=i+"<g>",this._chartType==Sys.Extended.UI.BarChartType.Column)for(n=0;n<this._series.length;n++)this.yVal=parseFloat(this._series[n].Data[t]),i=t==0?i+String.format('<path id="Bar{4}" style="fill:{5}" d="M{0} {2} {1} {2} {1} {3} {0} {3} z" />',this.startX+this.xInterval*t+this.xInterval*15/100+(e+r)*n,this.startX+this.xInterval*t+this.xInterval*15/100+(e+r)*n+r,this.startY,this.startY-Math.round(this.yVal*(this.yInterval/this.roundedTickRange)),n+1,this._series[n].BarColor):i+String.format('<path id="Bar{4}" style="fill:{5}" d="M{0} {2} {1} {2} {1} {3} {0} {3} z" />',this.startX+this.xInterval*t+this.xInterval*12.5/100+(e+r)*n,this.startX+this.xInterval*t+this.xInterval*12.5/100+(e+r)*n+r,this.startY,this.startY-Math.round(this.yVal*(this.yInterval/this.roundedTickRange)),n+1,this._series[n].BarColor),i=this.yVal>0?i+String.format('<text id="LegendText" x="{0}" y="{1}">{2}<\/text>',this.startX+this.xInterval*t+this.xInterval/5+(e+r)*n+r/10-Math.round(this.yVal.toString().length*this.charLength/2),this.startY-Math.round(this.yVal*(this.yInterval/this.roundedTickRange))-7.5,this.yVal):i+String.format('<text id="LegendText" x="{0}" y="{1}">{2}<\/text>',this.startX+this.xInterval*t+this.xInterval/5+(e+r)*n+r/10-Math.round(this.yVal.toString().length*this.charLength/2),this.startY-Math.round(this.yVal*(this.yInterval/this.roundedTickRange))+7.5,this.yVal);else for(u=this.startY,f=this.startY,n=0;n<this._series.length;n++)this.yVal=parseFloat(this._series[n].Data[t]),i=t==0?this.yVal>0?i+String.format('<path id="Bar{4}" style="fill:{5}" d="M{0} {2} {1} {2} {1} {3} {0} {3} z" />',this.startX+this.xInterval*10*t/10+this.xInterval*7.5/100,this.startX+this.xInterval*10*t/10+this.xInterval*7.5/100+r,u,u-Math.round(this.yVal*(this.yInterval/this.roundedTickRange)),n+1,this._series[n].BarColor):i+String.format('<path id="Bar{4}" style="fill:{5}" d="M{0} {2} {1} {2} {1} {3} {0} {3} z" />',this.startX+this.xInterval*10*t/10+this.xInterval*7.5/100,this.startX+this.xInterval*10*t/10+this.xInterval*7.5/100+r,f,f-Math.round(this.yVal*(this.yInterval/this.roundedTickRange)),n+1,this._series[n].BarColor):this.yVal>0?i+String.format('<path id="Bar{4}" style="fill:{5}" d="M{0} {2} {1} {2} {1} {3} {0} {3} z" />',this.startX+this.xInterval*10*t/10+this.xInterval/20,this.startX+this.xInterval*10*t/10+this.xInterval/20+r,u,u-Math.round(this.yVal*(this.yInterval/this.roundedTickRange)),n+1,this._series[n].BarColor):i+String.format('<path id="Bar{4}" style="fill:{5}" d="M{0} {2} {1} {2} {1} {3} {0} {3} z" />',this.startX+this.xInterval*10*t/10+this.xInterval/20,this.startX+this.xInterval*10*t/10+this.xInterval/20+r,f,f-Math.round(this.yVal*(this.yInterval/this.roundedTickRange)),n+1,this._series[n].BarColor),this.yVal>0?(i=i+String.format('<text id="LegendText" x="{0}" y="{1}">{2}<\/text>',this.startX+this.xInterval*10*t/10+this.xInterval*30/100+r/10,u-Math.round(this.yVal*(this.yInterval/this.roundedTickRange)/2),this.yVal),u=u-Math.round(this.yVal*(this.yInterval/this.roundedTickRange))):(i=i+String.format('<text id="LegendText" x="{0}" y="{1}">{2}<\/text>',this.startX+this.xInterval*10*t/10+this.xInterval*30/100+r/10,f+Math.round(Math.abs(this.yVal)*(this.yInterval/this.roundedTickRange)/2),this.yVal),f=f-Math.round(this.yVal*(this.yInterval/this.roundedTickRange)));i=i+"<\/g>"}return i},initializeSVG:function(){var n=String.format('<?xml-stylesheet type="text/css" href="{0}.css"?>',this._theme);return n=n+String.format('<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="{0}" height="{1}" style="position: relative; display: block;">',this._chartWidth,this._chartHeight),n=n+"<defs>",n=n+'<linearGradient gradientTransform="rotate(0)">',n=n+'<stop offset="0%" id="LinearGradient1"><\/stop>',n=n+'<stop offset="25%" id="LinearGradient2"><\/stop>',n=n+'<stop offset="100%" id="LinearGradient3"><\/stop><\/linearGradient>',n=n+"<\/defs>",n+String.format('<rect id="ChartBackGround" width="{0}" height="{1}" style="opacity: 0"/>',this._chartWidth,this._chartHeight)},drawLegendArea:function(){for(var t,c,i="",o=parseInt(this._chartHeight)*84/100+5,r=7.5,u=5,l=0,n=0;n<this._series.length;n++)l=l+this._series[n].Name.length;t=Math.round(l*5/2)+Math.round((r+u*2)*this._series.length);c=!1;t>parseInt(this._chartWidth)/2&&(t=t/2,c=!0);i=i+"<g>";i=i+String.format('<path d="M{0} {1} {2} {1} {2} {3} {0} {3} z" id="LegendArea" stroke=""><\/path>',Math.round(parseInt(this._chartWidth)/2-t/2),o,Math.round(parseInt(this._chartWidth)/2+t/2),Math.round(parseInt(this._chartHeight)*97.5/100));var e=parseInt(this._chartWidth)*40/100-t/2+r+u,s=e,f=parseInt(this._chartWidth)*40/100-t/2,h=f;for(n=0;n<this._series.length;n++)c&&n==Math.round(this._series.length/2)&&(e=parseInt(this._chartWidth)*40/100-t/2+r+u,s=e,f=parseInt(this._chartWidth)*40/100-t/2,h=f,o=parseInt(this._chartHeight)*91/100+5,c=!1),f=h,e=s,i=i+String.format('<path d="M{0} {1} {2} {1} {2} {3} {0} {3} z" id="Legend{4}" style="fill:{5}"><\/path>',f,o+7.5,f+r,o+15,n+1,this._series[n].BarColor),i=i+String.format('<text x="{0}" y="{1}" id="LegendText">{2}<\/text>',e,o+15,this._series[n].Name),this._series[n].Name.length>10?(h=f+this._series[n].Name.length*5+r+u*2,s=e+this._series[n].Name.length*5+r+u*2):(h=h+this._series[n].Name.length*6+r+u*2,s=s+this._series[n].Name.length*6+r+u*2);return i+"<\/g>"},generateBarChart:function(){this.arrYAxis=this._categoriesAxis.split(",");this.arrYAxisLength=this.arrYAxis.length;this.calculateMinMaxValuesForBarType();this.calculateIntervalForBarType();this.calculateValueAxisForBarType();var n=this.initializeSVG();n=n+String.format('<text x="{0}" y="{1}" id="ChartTitle" style="fill:{3}">{2}<\/text>',parseInt(this._chartWidth)/2-this._chartTitle.length*this.charLength,parseInt(this._chartHeight)/20,this._chartTitle,this._chartTitleColor);n=n+this.drawBackgroundHorizontalLinesForBarType();n=n+this.drawBackgroundVerticalLinesForBarType();n=n+this.drawBaseLinesForBarType();n=n+this.drawLegendArea();n=n+this.drawAxisValuesForBarType();n=n+this.drawBarsForBarType();n=n+"<\/svg>";this._parentDiv.innerHTML=n},calculateIntervalForBarType:function(){this.startY=Math.round(parseInt(this._chartHeight)-parseInt(this._chartHeight)/5)+.5;this.endY=parseInt(this._chartHeight)*8/100+5;this.endX=parseInt(this._chartWidth)-10+.5;this.startX=this.xMin>=0?this._chartWidth*15/100+.5:Math.round(parseInt(this._chartWidth)/2)+.5;this.xInterval=Math.round((this.endX-this.startX)/this._valueAxisLines)},calculateMinMaxValuesForBarType:function(){var u,i,r,t,n;if(this._chartType==Sys.Extended.UI.BarChartType.Bar)for(n=0;n<this._series.length;n++)r=this._series[n].Data,u=Math.max.apply(null,r),i=Math.min.apply(null,r),n==0?(this.xMax=u,this.xMin=i):(u>this.xMax&&(this.xMax=u),i<this.yMin&&(this.xMin=i));else{for(this.arrCombinedData=null,n=0;n<this._series.length;n++){for(r=[],t=0;t<this._series[n].Data.length;t++)r[t]=this._series[n].Data[t];if(this.arrCombinedData==null)this.arrCombinedData=r;else for(t=0;t<r.length;t++)this.arrCombinedData[t]=parseFloat(this.arrCombinedData[t])+parseFloat(r[t])}for(n=0;n<this._series.length;n++)i=Math.min.apply(null,this._series[n].Data),n==0?this.xMin=i:i<this.xMin&&(this.xMin=i);this.xMax=Math.max.apply(null,this.arrCombinedData)}this.xMin<0&&(this._valueAxisLines=Math.round(this._valueAxisLines/2))},calculateValueAxisForBarType:function(){var i,n,r,t;i=this.xMin>=0?this.xMax:this.xMax>Math.abs(this.xMin)?this.xMax:Math.abs(this.xMin);n=i/(this._valueAxisLines-1);n<1?this.roundedTickRange=n.toFixed(1):(r=Math.ceil(Math.log(n)/Math.log(10)-1),t=Math.pow(10,r),this.roundedTickRange=Math.ceil(n/t)*t)},drawBackgroundVerticalLinesForBarType:function(){for(var t="",n=1;n<=this._valueAxisLines;n++)t=t+String.format('<path id="VerticalLine" d="M{0} {1} {0} {2}" style="stroke:{3}"><\/path>',this.startX+this.xInterval*n,this.startY,this.startY-this.yInterval*this.arrYAxisLength,this._categoryAxisLineColor);if(this.xMin<0)for(n=1;n<=this._valueAxisLines;n++)t=t+String.format('<path id="VerticalLine" d="M{0} {1} {0} {2}" style="stroke:{3}"><\/path>',this.startX-this.xInterval*n,this.startY,this.startY-this.yInterval*this.arrYAxisLength,this._categoryAxisLineColor);return t},drawBackgroundHorizontalLinesForBarType:function(){var t="",n;for(this.yInterval=Math.round((this.startY-this.endY)/this.arrYAxisLength),n=0;n<=this.arrYAxisLength;n++)t=t+String.format('<path id="HorizontalLine" d="M{0} {2} {1} {2}" style="stroke:{3}"><\/path>',this.startX,this.startX+this.xInterval*this._valueAxisLines,this.startY-this.yInterval*n,this._valueAxisLineColor);if(this.xMin<0)for(n=0;n<=this.arrYAxisLength;n++)t=t+String.format('<path id="HorizontalLine" d="M{0} {2} {1} {2}" style="stroke:{3}"><\/path>',this.startX,this.startX-this.xInterval*this._valueAxisLines,this.startY-this.yInterval*n,this._valueAxisLineColor);return t},drawBaseLinesForBarType:function(){var n="",t;for(n=n+String.format('<path d="M{0} {1} {0} {2}" id="BaseLine" style="stroke:{3}"><\/path>',this.startX,this.startY,this.endY,this._baseLineColor),n=n+String.format('<path d="M{0} {2} {1} {2}" id="BaseLine" style="stroke:{3}"><\/path>',this.startX,this.startX-4,this.startY,this._baseLineColor),n=n+String.format('<path d="M{0} {2} {1} {2}" id="BaseLine" style="stroke:{3}"><\/path>',this.startX,this.endX,this.startY,this._baseLineColor),t=0;t<this.arrYAxisLength;t++)n=n+String.format('<path d="M{0} {2} {1} {2}" id="BaseLine" style="stroke:{3}"><\/path>',this.startX,this.startX-4,this.startY-this.yInterval*t,this._baseLineColor);for(t=0;t<=this._valueAxisLines;t++)n=n+String.format('<path d="M{0} {1} {0} {2}" id="BaseLine" style="stroke:{3}"><\/path>',this.startX+this.xInterval*t,this.startY,this.startY+4,this._baseLineColor);if(this.xMin<0)for(n=n+String.format('<path d="M{0} {2} {1} {2}" id="BaseLine" style="stroke:{3}"><\/path>',this.startX,this.startX-this.xInterval*this._valueAxisLines,this.startY,this._baseLineColor),t=1;t<=this._valueAxisLines;t++)n=n+String.format('<path d="M{0} {1} {0} {2}" id="BaseLine" style="stroke:{3}"><\/path>',this.startX-this.xInterval*t,this.startY,this.startY+4,this._baseLineColor);return n},drawAxisValuesForBarType:function(){for(var t="",i=0,n=0;n<this.arrYAxisLength;n++)i=this.arrYAxis[n].toString().length*6.5,t=t+String.format('<text id="SeriesAxis" x="{0}" y="{1}">{2}<\/text>',this.startX-this.xInterval*15/100-i,Math.round(this.startY-this.yInterval*(n+1)+this.yInterval*60/100),this.arrYAxis[n]);for(n=0;n<=this._valueAxisLines;n++)t=t+String.format('<text id="ValueAxis" x="{0}" y="{1}">{2}<\/text>',this.startX+this.xInterval*n-(this.roundedTickRange*n).toString().length*this.charLength,this.startY+this.yInterval*35/100,this.roundedTickRange*n);if(this.xMin<0)for(n=1;n<=this._valueAxisLines;n++)t=t+String.format('<text id="ValueAxis" x="{0}" y="{1}">-{2}<\/text>',this.startX-this.xInterval*n-(this.roundedTickRange*n).toString().length*this.charLength,this.startY+this.yInterval*35/100,this.roundedTickRange*n);return t},drawBarsForBarType:function(){for(var u,f,n,i="",o=this._series.length,e=this.yInterval/10,r=this._chartType==Sys.Extended.UI.BarChartType.Bar?Math.round((this.yInterval*80/100-e*o)/o):Math.round(this.yInterval*80/100),t=0;t<this.arrYAxisLength;t++){if(i=i+"<g>",this._chartType==Sys.Extended.UI.BarChartType.Bar)for(n=0;n<this._series.length;n++)this.xVal=this._series[n].Data[t],i=t==0?i+String.format('<path id="Bar{4}" style="fill:{5}" d="M{0} {2} {1} {2} {1} {3} {0} {3} z" />',this.startX,this.startX+Math.round(this.xVal*(this.xInterval/this.roundedTickRange)),this.startY-this.yInterval*t-this.yInterval*15/100-(e+r)*n,this.startY-this.yInterval*t-this.yInterval*15/100-(e+r)*n-r,n+1,this._series[n].BarColor):i+String.format('<path id="Bar{4}" style="fill:{5}" d="M{0} {2} {1} {2} {1} {3} {0} {3} z" />',this.startX,this.startX+Math.round(this.xVal*(this.xInterval/this.roundedTickRange)),this.startY-this.yInterval*t-this.yInterval*12.5/100-(e+r)*n,this.startY-this.yInterval*t-this.yInterval*12.5/100-(e+r)*n-r,n+1,this._series[n].BarColor),i=this.xVal>0?i+String.format('<text id="LegendText" x="{0}" y="{1}">{2}<\/text>',this.startX+Math.round(this.xVal*(this.xInterval/this.roundedTickRange))+this.xVal.toString().length*this.charLength,this.startY-this.yInterval*t-this.yInterval/5-(e+r)*n-r/10,this.xVal):i+String.format('<text id="LegendText" x="{0}" y="{1}">{2}<\/text>',this.startX+Math.round(this.xVal*(this.xInterval/this.roundedTickRange))-(this.xVal.toString().length+1)*this.charLength-5,this.startY-this.yInterval*t-this.yInterval/5-(e+r)*n-r/10,this.xVal);else for(u=this.startX,f=this.startX,n=0;n<this._series.length;n++)this.xVal=this._series[n].Data[t],i=t==0?this.xVal>0?i+String.format('<path id="Bar{4}" style="fill:{5}" d="M{0} {2} {1} {2} {1} {3} {0} {3} z" />',u,u+Math.round(this.xVal*(this.xInterval/this.roundedTickRange)),this.startY-this.yInterval*t-this.yInterval/10,this.startY-this.yInterval*t-this.xInterval/10-r,n+1,this._series[n].BarColor):i+String.format('<path id="Bar{4}" style="fill:{5}" d="M{0} {2} {1} {2} {1} {3} {0} {3} z" />',f,f+Math.round(this.xVal*(this.xInterval/this.roundedTickRange)),this.startY-this.yInterval*t-this.yInterval/10,this.startY-this.yInterval*t-this.xInterval/10-r,n+1,this._series[n].BarColor):this.xVal>0?i+String.format('<path id="Bar{4}" style="fill:{5}" d="M{0} {2} {1} {2} {1} {3} {0} {3} z" />',u,u+Math.round(this.xVal*(this.xInterval/this.roundedTickRange)),this.startY-this.yInterval*t-this.yInterval*7.55/100,this.startY-this.yInterval*t-this.xInterval*7.5/100-r,n+1,this._series[n].BarColor):i+String.format('<path id="Bar{4}" style="fill:{5}" d="M{0} {2} {1} {2} {1} {3} {0} {3} z" />',f,f+Math.round(this.xVal*(this.xInterval/this.roundedTickRange)),this.startY-this.yInterval*t-this.yInterval*7.55/100,this.startY-this.yInterval*t-this.xInterval*7.5/100-r,n+1,this._series[n].BarColor),this.xVal>0?(i=i+String.format('<text id="LegendText" x="{0}" y="{1}">{2}<\/text>',u+Math.round(this.xVal*(this.xInterval/this.roundedTickRange)/2),this.startY-this.yInterval*t-this.yInterval*30/100-r/10,this.xVal),u=u+Math.round(this.xVal*(this.xInterval/this.roundedTickRange))):(i=i+String.format('<text id="LegendText" x="{0}" y="{1}">{2}<\/text>',f+Math.round(this.xVal*(this.xInterval/this.roundedTickRange)/2),this.startY-this.yInterval*t-this.yInterval*30/100-r/10,this.xVal),f=f+Math.round(this.xVal*(this.xInterval/this.roundedTickRange)));i=i+"<\/g>"}return i},get_chartWidth:function(){return this._chartWidth},set_chartWidth:function(n){this._chartWidth=n},get_chartHeight:function(){return this._chartHeight},set_chartHeight:function(n){this._chartHeight=n},get_chartTitle:function(){return this._chartTitle},set_chartTitle:function(n){this._chartTitle=n},get_categoriesAxis:function(){return this._categoriesAxis},set_categoriesAxis:function(n){this._categoriesAxis=n},get_clientSeries:function(){return this._series},set_clientSeries:function(n){this._series=n},get_ClientSeries:function(){return Sys.Extended.Deprecated("get_ClientSeries","get_clientSeries"),this.get_clientSeries()},set_ClientSeries:function(n){Sys.Extended.Deprecated("set_ClientSeries","set_clientSeries");this.set_clientSeries(n)},get_chartType:function(){return this._chartType},set_chartType:function(n){this._chartType=n},get_theme:function(){return this._theme},set_theme:function(n){this._theme=n},get_valueAxisLines:function(){return this._valueAxisLines},set_valueAxisLines:function(n){this._valueAxisLines=n},get_chartTitleColor:function(){return this._chartTitleColor},set_chartTitleColor:function(n){this._chartTitleColor=n},get_valueAxisLineColor:function(){return this._valueAxisLineColor},set_valueAxisLineColor:function(n){this._valueAxisLineColor=n},get_categoryAxisLineColor:function(){return this._categoryAxisLineColor},set_categoryAxisLineColor:function(n){this._categoryAxisLineColor=n},get_baseLineColor:function(){return this._baseLineColor},set_baseLineColor:function(n){this._baseLineColor=n}};Sys.Extended.UI.BarChart.registerClass("Sys.Extended.UI.BarChart",Sys.Extended.UI.ControlBase);Sys.Extended.UI.BarChartType=function(){throw Error.invalidOperation();};Sys.Extended.UI.BarChartType.prototype={Column:0,Bar:1,StackedColumn:2,StackedBar:3};Sys.Extended.UI.BarChartType.registerEnum("Sys.Extended.UI.BarChartType",!1);