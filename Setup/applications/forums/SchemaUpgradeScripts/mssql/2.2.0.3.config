ALTER TABLE [dbo].mp_ForumThreadSubscriptions ADD
	SubGuid uniqueidentifier NOT NULL DEFAULT newid() 
GO

ALTER TABLE [dbo].mp_ForumSubscriptions ADD
	SubGuid uniqueidentifier NOT NULL DEFAULT newid() 
GO



ALTER PROCEDURE [dbo].[mp_ForumThreadSubscriptions_Insert]

/*
Author:			Joe Audette
Created:		2004-10-14
Last Modified:	2013-08-17

*/

@ThreadID		int,
@UserID		int,
@SubGuid uniqueidentifier,
@SubscribeDate datetime


AS

IF EXISTS (SELECT UserID FROM [dbo].mp_ForumThreadSubscriptions WHERE ThreadID = @ThreadID AND UserID = @UserID AND UnSubscribeDate IS NULL)
BEGIN
	UPDATE 	[dbo].mp_ForumThreadSubscriptions 

	SET		UnSubscribeDate = @SubscribeDate
	

	WHERE 	ThreadID = @ThreadID AND UserID = @UserID
			AND UnSubscribeDate IS NULL

END



BEGIN

	INSERT INTO	[dbo].mp_ForumThreadSubscriptions
	(
			ThreadID,
			UserID,
			SubGuid,
			SubscribeDate
	)
	VALUES
	(
			@ThreadID,
			@UserID,
			@SubGuid,
			@SubscribeDate
	)

END


GO


ALTER PROCEDURE [dbo].[mp_ForumThreadSubscribers_SelectByThread]

/*
Author:				Joe Audette
Created:			2004-10-13
Last Modified:		2013-08-13

*/

@ForumID int,
@ThreadID		int,
@CurrentPostUserID 	int,
@IncludeCurrentUser bit


AS

SELECT		u.Email,
			COALESCE(fts.ThreadSubscriptionID, -1) AS ThreadSubID,
			COALESCE(fs.SubscriptionID, -1) AS ForumSubID,
			COALESCE(fts.SubGuid, '00000000-0000-0000-0000-000000000000') AS ThreadSubGuid,
			COALESCE(fs.SubGuid, '00000000-0000-0000-0000-000000000000') AS ForumSubGuid


FROM			[dbo].mp_Users u

LEFT OUTER JOIN [dbo].mp_ForumThreadSubscriptions fts
ON
	fts.UserID = u.UserID
	AND fts.ThreadID = @ThreadID
	AND fts.UnSubscribeDate IS NULL
	
LEFT OUTER JOIN [dbo].mp_ForumSubscriptions fs
ON
	fs.UserID = u.UserID
	AND fs.ForumID = @ForumID
	AND fs.UnSubscribeDate IS NULL


WHERE
			(u.UserID <> @CurrentPostUserID OR @IncludeCurrentUser = 1)
			AND
			(
				(
					fts.ThreadSubscriptionID IS NOT NULL
				)
				OR
				(
					fs.SubscriptionID IS NOT NULL
				)
			)




GO


CREATE PROCEDURE [dbo].[mp_ForumThreadSubscriptions_UnsubThread]

/*
Author:				Joe Audette
Created:			2013-08-17
Last Modified:		2013-08-17

*/

@SubGuid uniqueidentifier,
@CurrentUtc datetime

AS

UPDATE		[dbo].mp_ForumThreadSubscriptions

SET			UnSubscribeDate = @CurrentUtc

WHERE		SubGuid = @SubGuid
			


GO


CREATE PROCEDURE [dbo].[mp_ForumSubscriptions_Unsub]

/*
Author:				Joe Audette
Created:			2013-08-17
Last Modified:		2013-08-17

*/

@SubGuid uniqueidentifier,
@CurrentUtc datetime

AS

UPDATE		[dbo].mp_ForumSubscriptions

SET			UnSubscribeDate = @CurrentUtc

WHERE		SubGuid = @SubGuid
			


GO

CREATE PROCEDURE [dbo].[mp_ForumSubscriptions_SelectOne]

/*
Author:				Joe Audette
Created:			2013-08-17
Last Modified:		2013-08-17

*/

@SubGuid uniqueidentifier

AS

SELECT *

FROM	[dbo].mp_ForumSubscriptions

WHERE	SubGuid = @SubGuid
			


GO

CREATE PROCEDURE [dbo].[mp_ForumThreadSubscriptions_SelectOne]

/*
Author:				Joe Audette
Created:			2013-08-17
Last Modified:		2013-08-17

*/

@SubGuid uniqueidentifier

AS

SELECT *

FROM	[dbo].mp_ForumThreadSubscriptions

WHERE	SubGuid = @SubGuid
			


GO

ALTER PROCEDURE [dbo].[mp_ForumSubscriptions_Insert]

/*
Author:			Dean Brettle
Created:		2005-09-11
Last Modified:	2013-08-17 JA

*/

@ForumID		int,
@UserID		int,
@SubGuid uniqueidentifier,
@SubscribeDate datetime


AS

IF EXISTS (SELECT UserID FROM [dbo].mp_ForumSubscriptions WHERE ForumID = @ForumID AND UserID = @UserID AND UnSubscribeDate IS NULL)
BEGIN
	UPDATE 	[dbo].mp_ForumSubscriptions

	SET		
			UnSubscribeDate = @SubscribeDate 
	

	WHERE 	ForumID = @ForumID AND UserID = @UserID AND UnSubscribeDate IS NULL

END



BEGIN

	INSERT INTO	[dbo].mp_ForumSubscriptions
	(
			ForumID,
			UserID,
			SubGuid,
			SubscribeDate
	)
	VALUES
	(
			@ForumID,
			@UserID,
			@SubGuid,
			@SubscribeDate
	)

END


GO


ALTER PROCEDURE [dbo].[mp_Forums_Select]


/*
Author:			Joe Audette
Created:		2004-09-12
Last Modified:	2013-08-18

*/

@ModuleID			int,
@UserID				int

AS


SELECT		f.*,
			u.[Name] AS MostRecentPostUser,
			CASE WHEN s.[SubscribeDate] IS NOT NULL and s.[UnSubscribeDate] IS NULL THEN 1
					Else 0
					End AS Subscribed,
			(SELECT COUNT(*) 
				FROM mp_ForumSubscriptions fs 
				WHERE fs.ForumID = f.ItemID AND fs.UnSubscribeDate IS NULL) AS SubscriberCount

FROM			[dbo].mp_Forums f

LEFT OUTER JOIN	[dbo].mp_Users u
ON			f.MostRecentPostUserID = u.UserID

LEFT OUTER JOIN [dbo].mp_ForumSubscriptions s
on			f.ItemID = s.ForumID and s.UserID = @UserID AND s.UnSubscribeDate IS NULL

WHERE		f.ModuleID	= @ModuleID
			AND f.IsActive = 1

ORDER BY		f.SortOrder, f.ItemID


GO

ALTER PROCEDURE [dbo].[mp_ForumThreads_CountByUser]

/*
Author:				Joe Audette
Created:			2008-03-18
Last Modified:		2013-08-18

*/


@UserID		int,
@SiteID int

AS

SELECT	COUNT(*)

FROM		[dbo].mp_ForumThreads ft

JOIN [dbo].mp_Forums f
ON ft.ForumID = f.ItemID

JOIN [dbo].mp_Modules m
ON f.ModuleID = m.ModuleID

WHERE m.SiteID = @SiteID AND ft.ThreadID IN (Select DISTINCT ThreadID FROM mp_ForumPosts WHERE mp_ForumPosts.UserID = @UserID)


GO

ALTER PROCEDURE [dbo].[mp_ForumThreads_SelectPageByUser]

-- Author:   			Joe Audette
-- Created: 			2008-03-18
-- Last Modified: 		2013-08-18

@UserID		int,
@SiteID int,
@PageNumber 			int,
@PageSize 			int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ThreadID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ThreadID
)

SELECT
		ft.[ThreadID]
		
FROM
		[dbo].[mp_ForumThreads] ft
		
JOIN [dbo].mp_Forums f
ON ft.ForumID = f.ItemID

JOIN [dbo].mp_Modules m
ON f.ModuleID = m.ModuleID
		
WHERE
	m.SiteID = @SiteID AND ft.ThreadID IN (Select DISTINCT ThreadID FROM mp_ForumPosts WHERE mp_ForumPosts.UserID = @UserID)

ORDER BY
	ft.MostRecentPostDate DESC

END

DECLARE @TotalRows int
DECLARE @TotalPages int
DECLARE @Remainder int

SET @TotalRows = (SELECT Count(*) FROM #PageIndex)
SET @TotalPages = @TotalRows / @PageSize
SET @Remainder = @TotalRows % @PageSize
IF @Remainder > 0 
SET @TotalPages = @TotalPages + 1

SELECT
		t.*,
		f.Title As Forum,
		f.ModuleID,
		(SELECT TOP 1 PageID FROM mp_PageModules WHERE mp_PageModules.ModuleID = f.ModuleID AND (PublishEndDate IS NULL OR PublishEndDate > getutcdate()) ) As PageID,
		COALESCE(u.Name, 'Guest') As MostRecentPostUser,
		s.Name As StartedBy,
		@TotalPages AS TotalPages
		
FROM
		[dbo].[mp_ForumThreads] t

JOIN			#PageIndex t2
ON			
		t.[ThreadID] = t2.[ThreadID]

JOIN	mp_Forums f
ON t.ForumID = f.ItemID

LEFT OUTER JOIN	mp_Users u
ON t.MostRecentPostUserID = u.UserID

LEFT OUTER JOIN	mp_Users s
ON t.StartedByUserID = s.UserID
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex


GO


