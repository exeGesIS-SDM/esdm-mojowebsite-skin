ALTER PROCEDURE [dbo].[mp_Blog_SelectOne]

/*
Author:			Joe Audette
Last Modified:	2012-11-02

*/

    
@ItemID int,
@CurrentTime datetime

AS

SELECT		b.*,
			p.ItemUrl AS PreviousPost,
			p.Heading AS PreviousPostTitle, 
			COALESCE(p.ItemID, -1) AS PreviousItemID,
			n.ItemUrl AS NextPost,
			n.Heading AS NextPostTitle,
			COALESCE(n.ItemID, -1) AS NextItemID,
			COALESCE(u.UserID, -1) AS UserID,
			u.[Name],
			u.[LoginName],
			u.FirstName,
			u.LastName,
			u.Email,
			u.AvatarUrl,
			u.AuthorBio
			
			
FROM			mp_Blogs b

LEFT OUTER JOIN	mp_Blogs p
ON p.ItemID <> b.ItemID
AND p.ItemID IN
(SELECT TOP 1 ItemID 
FROM mp_Blogs
WHERE ModuleID = b.ModuleID AND IsPublished = 1
AND StartDate <= @CurrentTime
AND StartDate < b.StartDate
ORDER BY StartDate DESC)

LEFT OUTER JOIN	mp_Blogs n
ON n.ItemID <> b.ItemID
AND n.ItemID IN
(SELECT TOP 1 ItemID 
FROM mp_Blogs
WHERE ModuleID = b.ModuleID AND IsPublished = 1
AND StartDate <= @CurrentTime
AND StartDate > b.StartDate
ORDER BY StartDate)

LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid


WHERE   		(b.ItemID = @ItemID)



GO

ALTER PROCEDURE [dbo].[mp_Blogs_SelectPage]

-- Author:   			Joe Audette
-- Created: 			2010-01-05
-- Last Modified: 		2012-11-02

@ModuleID int,
@BeginDate datetime,
@CurrentTime datetime,
@PageNumber int,
@PageSize int

AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
(ModuleID = @ModuleID)  
    			and (@BeginDate >= StartDate)
    			and IsPublished = 1
    			and StartDate <= @CurrentTime

ORDER BY

	StartDate DESC

END


SELECT
		b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			b.ItemUrl,
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount,
			COALESCE(u.UserID, -1) AS UserID,
			u.[Name],
			u.[LoginName],
			u.FirstName,
			u.LastName,
			u.Email,
			u.AvatarUrl,
			u.AuthorBio
		
FROM
		[dbo].[mp_Blogs] b

JOIN			#PageIndex t2
ON			
		b.[ItemID] = t2.[ItemID]
		
LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex


GO

ALTER PROCEDURE [dbo].[mp_Blog_SelectPageByCategory]

/*
Author:			Joe Audette
Created:		2012-04-13
Last Modified:	2012-11-02

*/



@ModuleID 		int,
@CategoryID		int,
@CurrentTime datetime,
@PageNumber int,
@PageSize int


AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]

WHERE 	ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentTime
		AND ItemID IN (SELECT ItemID FROM mp_BlogItemCategories WHERE CategoryID = @CategoryID)


ORDER BY	 StartDate DESC

END

SELECT
		b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			b.ItemUrl,
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount,
			COALESCE(u.UserID, -1) AS UserID,
			u.[Name],
			u.FirstName,
			u.LastName,
			u.[LoginName],
			u.Email,
			u.AvatarUrl,
			u.AuthorBio
		
FROM
		[dbo].[mp_Blogs] b

JOIN			#PageIndex t2
ON			
		b.[ItemID] = t2.[ItemID]
		
LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex



GO


ALTER PROCEDURE [dbo].[mp_Blog_SelectPageByMonth]

-- Author:   			Joe Audette
-- Created: 			2012-04-13
-- Last Modified: 		2012-11-02

@Month int,
@Year int,
@ModuleID int,
@CurrentDate datetime,
@PageNumber int,
@PageSize int


AS

DECLARE @PageLowerBound int
DECLARE @PageUpperBound int


SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1



CREATE TABLE #PageIndex 
(
	IndexID int IDENTITY (1, 1) NOT NULL,
ItemID Int
)

BEGIN

INSERT INTO #PageIndex ( 
ItemID
)

SELECT
		[ItemID]
		
FROM
		[dbo].[mp_Blogs]
		
WHERE
	ModuleID = @ModuleID
		AND IsPublished = 1
		AND StartDate <= @CurrentDate
		AND Month(StartDate)  = @Month 
		AND Year(StartDate)  = @Year


ORDER BY	 StartDate DESC

END

SELECT
		b.BlogGuid,
			b.ModuleGuid,
			b.ItemID, 
			b.ModuleID, 
			b.CreatedByUser, 
			b.CreatedDate, 
			b.Heading, 
			b.[Abstract], 
			b.[Description], 
			b.StartDate,
			b.IsInNewsletter, 
			b.IncludeInFeed,
			b.AllowCommentsForDays,
			b.MetaKeywords,
			b.MetaDescription,
			b.Location,
			b.UserGuid,
			b.LastModUserGuid,
			b.LastModUtc,
			b.ItemUrl,
			CONVERT(nvarchar(20), b.CommentCount) AS CommentCount,
			COALESCE(u.UserID, -1) AS UserID,
			u.[Name],
			u.FirstName,
			u.LastName,
			u.[LoginName],
			u.Email,
			u.AvatarUrl,
			u.AuthorBio
		
FROM
		[dbo].[mp_Blogs] b

JOIN			#PageIndex t2
ON			
		b.[ItemID] = t2.[ItemID]
		
LEFT OUTER JOIN		mp_Users u
ON			b.UserGuid = u.UserGuid
		
WHERE
		t2.IndexID > @PageLowerBound 
		AND t2.IndexID < @PageUpperBound
		
ORDER BY t2.IndexID

DROP TABLE #PageIndex



GO

